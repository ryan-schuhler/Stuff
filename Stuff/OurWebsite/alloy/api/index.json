[{"name": "", "url": "Dialog.html#method_", "access": "protected", "host": "Dialog", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"Dialog.html#config_constrain2view\">constrain2view</a> attribute change."}, {"name": "()", "url": "Array.html#method_()", "access": "", "host": "Array", "params": "o <Object>  the item to arrayify, i <int>   if an array or array-like, this is the start index, arraylike <boolean>   if true, it forces the array-like fork.  This\ncan be used to avoid multiple Array.test calls.", "type": "method", "description": "Y.Array(o) returns an array:\n- Arrays are return unmodified unless the start position is specified.\n- \"Array-like\" collections (@see Array.test) are converted to arrays\n- For everything else, a new array is created with the input as the sole item\n- The start position is used if the input is or is like an array to return\na subset of the collection."}, {"name": "()", "url": "Object.html#method_()", "access": "", "host": "Object", "params": "o <Object>  the supplier object", "type": "method", "description": "Y.Object(o) returns a new object based upon the supplied object."}, {"name": "2in3", "url": "config.html#property_2in3", "access": "", "host": "config", "params": "", "type": "property", "description": "The 2in3 project is a deployment of the various versions of YUI 2\ndeployed as first-class YUI 3 modules.  Eventually, the wrapper\nfor the modules will change (but the underlying YUI 2 code will\nbe the same), and you can select a particular version of\nthe wrapper modules via this config."}, {"name": "abort", "url": "Get.html#method_abort", "access": "", "host": "Get", "params": "o <string|object>   Either the tId or the object returned from\nscript() or css()", "type": "method", "description": "Abort a transaction"}, {"name": "_active", "url": "DD.DDM.html#property__active", "access": "", "host": "DD.DDM", "params": "", "type": "property", "description": "flag set when we activate our first drag, so DDM can start listening for events."}, {"name": "active", "url": "IORequest.html#config_active", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "Whether the transaction is active or not."}, {"name": "activeChange", "url": "IORequest.html#event_activeChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'active' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "activeDescendant", "url": "WidgetParent.html#config_activeDescendant", "access": "", "host": "WidgetParent", "params": "", "type": "config", "description": "Returns the Widget's currently focused descendant Widget."}, {"name": "activeDescendant", "url": "plugin.NodeFocusManager.html#config_activeDescendant", "access": "", "host": "plugin.NodeFocusManager", "params": "", "type": "config", "description": "<p>Node, or index of the Node, representing the descendant that is either \nfocused or is focusable (<code>tabIndex</code> attribute is set to 0).  \nThe value cannot represent a disabled descendant Node.  Use a value of -1\nto remove all descendant Nodes from the default tab flow.\nIf no value is specified, the active descendant will be inferred using \nthe following criteria:</p>\n<ol>\n<li>Examining the <code>tabIndex</code> attribute of each descendant and \nusing the first descendant whose <code>tabIndex</code> attribute is set \nto 0</li>\n<li>If no default can be inferred then the value is set to either 0 or \nthe index of the first enabled descendant.</li>\n</ol>"}, {"name": "activeDescendantChange", "url": "WidgetParent.html#event_activeDescendantChange", "access": "", "host": "WidgetParent", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'activeDescendant' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "activeDescendantChange", "url": "plugin.NodeFocusManager.html#event_activeDescendantChange", "access": "", "host": "plugin.NodeFocusManager", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'activeDescendant' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "activeDrag", "url": "DD.DDM.html#property_activeDrag", "access": "", "host": "DD.DDM", "params": "", "type": "property", "description": "A reference to the currently active draggable object."}, {"name": "activeDrop", "url": "DD.DDM.html#property_activeDrop", "access": "", "host": "DD.DDM", "params": "", "type": "property", "description": "A reference to the active Drop Target"}, {"name": "activeHandle", "url": "DD.Drag.html#config_activeHandle", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "This config option is set by Drag to inform you of which handle fired the drag event (in the case that there are several handles): default false."}, {"name": "activeHandleChange", "url": "Resize.html#event_activeHandleChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'activeHandle' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "activeHandleChange", "url": "DD.Drag.html#event_activeHandleChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'activeHandle' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "activeHandleElChange", "url": "Resize.html#event_activeHandleElChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'activeHandleEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "activeImage", "url": "ImageViewer.html#property_activeImage", "access": "protected", "host": "ImageViewer", "params": "", "type": "property", "description": "The index of the active image."}, {"name": "_activeItem", "url": "plugin.NodeMenuNav.html#property__activeItem", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Node instance representing the menu's active descendent: \nthe menuitem or menu label the user is currently interacting with."}, {"name": "_activeMenu", "url": "plugin.NodeMenuNav.html#property__activeMenu", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Node instance representing the menu that is the parent of \nthe menu's active descendent."}, {"name": "activeState", "url": "Toolbar.html#config_activeState", "access": "", "host": "Toolbar", "params": "", "type": "config", "description": "Receives an interaction state of active when the user clicks on it."}, {"name": "activeState", "url": "ButtonItem.html#config_activeState", "access": "", "host": "ButtonItem", "params": "", "type": "config", "description": "Whether to track the active state of the button."}, {"name": "activeStateChange", "url": "Toolbar.html#event_activeStateChange", "access": "", "host": "Toolbar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'activeState' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "activeStateChange", "url": "ButtonItem.html#event_activeStateChange", "access": "", "host": "ButtonItem", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'activeState' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "actual", "url": "Assert.ComparisonFailure.html#property_actual", "access": "", "host": "Assert.ComparisonFailure", "params": "", "type": "property", "description": "The actual value."}, {"name": "actXY", "url": "DD.Drag.html#property_actXY", "access": "", "host": "DD.Drag", "params": "", "type": "property", "description": "The xy that the node will be set to. Changing this will alter the position as it's dragged."}, {"name": "add", "url": "Cache.html#method_add", "access": "", "host": "Cache", "params": "request <Object>   Request value., response <Object>   Response value., payload <Object>   (optional) Arbitrary data payload.", "type": "method", "description": "Adds a new entry to the cache of the format\n{request:request, response:response, payload:payload}.\nIf cache is full, evicts the stalest entry before adding the new one."}, {"name": "add", "url": "Cache.html#event_add", "access": "", "host": "Cache", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>entry (Object)</dt> <dd>The cached entry.</dd>\n</dl>", "type": "event", "description": "Fired when an entry is added."}, {"name": "add", "url": "AsyncQueue.html#method_add", "access": "", "host": "AsyncQueue", "params": "callback* <Function|Object>   0..n callbacks", "type": "method", "description": "Add any number of callbacks to the end of the queue. Callbacks may be\nprovided as functions or objects."}, {"name": "add", "url": "Test.Suite.html#method_add", "access": "", "host": "Test.Suite", "params": "testObject <Y.Test.Suite||Y.Test.Case>  The test suite or test case to add.", "type": "method", "description": "Adds a test suite or test case to the test suite."}, {"name": "add", "url": "Test.Runner.html#method_add", "access": "", "host": "Test.Runner", "params": "testObject <Object>  Either a TestCase or a TestSuite that should be run.", "type": "method", "description": "Adds a test suite or test case to the list of test objects to run."}, {"name": "add", "url": "Intl.html#method_add", "access": "", "host": "Intl", "params": "module <String>  The module name., lang <String>  The BCP 47 language tag., strings <Object>  The hash of localized values, keyed by the string name.", "type": "method", "description": "Register a hash of localized resources for the given module and language"}, {"name": "add", "url": "ArrayList~add.html#method_add", "access": "", "host": "ArrayList~add", "params": "item < mixed >   Item presumably of the same type as others in the\nArrayList, index <Number>   (Optional.)  Number representing the position at \nwhich the item should be inserted.", "type": "method", "description": "Add a single item to the ArrayList.  Does not prevent duplicates."}, {"name": "_add", "url": "WidgetParent.html#method__add", "access": "protected", "host": "WidgetParent", "params": "child <Widget|Object>   The Widget instance, or configuration \nobject for the Widget to be added as a child., child <Array>   Array of Widget instances, or configuration \nobjects for the Widgets to be added as a children., index <Number>   (Optional.)  Number representing the position at \nwhich the child should be inserted.", "type": "method", "description": "Adds a Widget as a child.  If the specified Widget already\nhas a parent it will be removed from its current parent before\nbeing added as a child."}, {"name": "add", "url": "WidgetParent.html#method_add", "access": "", "host": "WidgetParent", "params": "child <Widget|Object>   The Widget instance, or configuration \nobject for the Widget to be added as a child., child <Array>   Array of Widget instances, or configuration \nobjects for the Widgets to be added as a children., index <Number>   (Optional.)  Number representing the position at \nwhich the child should be inserted.", "type": "method", "description": "Adds a Widget as a child.  If the specified Widget already\nhas a parent it will be removed from its current parent before\nbeing added as a child."}, {"name": "add", "url": "State.html#method_add", "access": "", "host": "State", "params": "name <String>   The name of the item., key <String>   The name of the property., val <Any>   The value of the property.", "type": "method", "description": "Adds a property to an item."}, {"name": "add", "url": "YUI.html#method_add", "access": "", "host": "YUI", "params": "name <string>   module name, fn <Function>   entry point into the module that\nis used to bind module to the YUI instance, version <string>   version string, details <Object>  optional config data: \nrequires: features that must be present before this module can be attached.\noptional: optional features that should be present if loadOptional is\ndefined.  Note: modules are not often loaded this way in YUI 3,\nbut this field is still useful to inform the user that certain\nfeatures in the component will require additional dependencies.\nuse:      features that are included within this module which need to be\nbe attached automatically when this module is attached.  This\nsupports the YUI 3 rollup system -- a module with submodules \ndefined will need to have the submodules listed in the 'use'\nconfig.  The YUI component build tool does this for you.", "type": "method", "description": "Registers a module with the YUI global.  The easiest way to create a \nfirst-class YUI module is to use the YUI component build tool.  \nhttp://yuilibrary.com/projects/builder \nThe build system will produce the YUI.add wrapper for you module, along\nwith any configuration info required for the module."}, {"name": "add", "url": "Queue.html#method_add", "access": "", "host": "Queue", "params": "item* <MIXED>   0..n items", "type": "method", "description": "Add 0..n items to the end of the queue"}, {"name": "addAll", "url": "State.html#method_addAll", "access": "", "host": "State", "params": "name <String>   The name of the item., o <Object>   A hash of property/value pairs.", "type": "method", "description": "Adds multiple properties to an item."}, {"name": "addAttr", "url": "Attribute.html#method_addAttr", "access": "", "host": "Attribute", "params": "name <String>  The name of the attribute., config <Object>  An object with attribute configuration property/value pairs, specifying the configuration for the attribute.\n<p>\n<strong>NOTE:</strong> The configuration object is modified when adding an attribute, so if you need \nto protect the original values, you will need to merge the object.\n</p>, lazy <boolean>  (optional) Whether or not to add this attribute lazily (on the first call to get/set).", "type": "method", "description": "<p>\nAdds an attribute with the provided configuration to the host object.\n</p>\n<p>\nThe config argument object supports the following properties:\n</p>\n<dl>\n<dt>value &#60;Any&#62;</dt>\n<dd>The initial value to set on the attribute</dd>\n<dt>valueFn &#60;Function | String&#62;</dt>\n<dd>\n<p>A function, which will return the initial value to set on the attribute. This is useful\nfor cases where the attribute configuration is defined statically, but needs to \nreference the host instance (\"this\") to obtain an initial value.\nIf defined, valueFn has precedence over the value property.</p>\n<p>valueFn can also be set to a string, representing the name of the instance method to be used to retrieve the value.</p>\n</dd>\n<dt>readOnly &#60;boolean&#62;</dt>\n<dd>Whether or not the attribute is read only. Attributes having readOnly set to true\ncannot be modified by invoking the set method.</dd>\n<dt>writeOnce &#60;boolean&#62;</dt>\n<dd>Whether or not the attribute is \"write once\". Attributes having writeOnce set to true, \ncan only have their values set once, be it through the default configuration, \nconstructor configuration arguments, or by invoking set.</dd>\n<dt>setter &#60;Function | String&#62;</dt>\n<dd>\n<p>The setter function used to massage or normalize the value passed to the set method for the attribute. \nThe value returned by the setter will be the final stored value. Returning\n<a href=\"#property_Attribute.INVALID_VALUE\">Attribute.INVALID_VALUE</a>, from the setter will prevent\nthe value from being stored.\n</p>\n<p>setter can also be set to a string, representing the name of the instance method to be used as the setter function.</p>\n</dd>\n<dt>getter &#60;Function | String&#62;</dt>\n<dd>\n<p>\nThe getter function used to massage or normalize the value returned by the get method for the attribute.\nThe value returned by the getter function is the value which will be returned to the user when they \ninvoke get.\n</p>\n<p>getter can also be set to a string, representing the name of the instance method to be used as the getter function.</p>\n</dd>\n<dt>validator &#60;Function | String&#62;</dt>\n<dd>\n<p>\nThe validator function invoked prior to setting the stored value. Returning\nfalse from the validator function will prevent the value from being stored.\n</p>\n<p>validator can also be set to a string, representing the name of the instance method to be used as the validator function.</p>\n</dd>\n<dt>broadcast &#60;int&#62;</dt>\n<dd>If and how attribute change events for this attribute should be broadcast. See CustomEvent's <a href=\"CustomEvent.html#property_broadcast\">broadcast</a> property for \nvalid values. By default attribute change events are not broadcast.</dd>\n<dt>lazyAdd &#60;boolean&#62;</dt>\n<dd>Whether or not to delay initialization of the attribute until the first call to get/set it. \nThis flag can be used to over-ride lazy initialization on a per attribute basis, when adding multiple attributes through \nthe <a href=\"#method_addAttrs\">addAttrs</a> method.</dd>\n</dl>\n<p>The setter, getter and validator are invoked with the value and name passed in as the first and second arguments, and with\nthe context (\"this\") set to the host object.</p>\n<p>Configuration properties outside of the list mentioned above are considered private properties used internally by attribute, and are not intended for public use.</p>"}, {"name": "addAttrs", "url": "Attribute.html#method_addAttrs", "access": "", "host": "Attribute", "params": "cfgs <Object>  An object with attribute name/configuration pairs., values <Object>  An object with attribute name/value pairs, defining the initial values to apply.\nValues defined in the cfgs argument will be over-written by values in this argument unless defined as read only., lazy <boolean>  Whether or not to delay the intialization of these attributes until the first call to get/set.\nIndividual attributes can over-ride this behavior by defining a lazyAdd configuration property in their configuration.\nSee <a href=\"#method_addAttr\">addAttr</a>.", "type": "method", "description": "Configures a group of attributes, and sets initial values.\n<p>\n<strong>NOTE:</strong> This method does not isolate the configuration object by merging/cloning. \nThe caller is responsible for merging/cloning the configuration object if required.\n</p>"}, {"name": "_addByIconId", "url": "Toolbar.html#method__addByIconId", "access": "protected", "host": "Toolbar", "params": "icon <String>  the icon name or object or array of objects to add to the toolbar", "type": "method", "description": "Overloads the add method so that if only a string is passed in, it will be\nassumed to be the icon, and will automatically create a configuration\nobject for it."}, {"name": "addChild", "url": "WidgetParent.html#event_addChild", "access": "", "host": "WidgetParent", "params": "e <EventFacade>  The Event Facade", "type": "event", "description": "Fires when a Widget is add as a child.  The event object will have a \n'child' property that returns a reference to the child Widget, as well \nas an 'index' property that returns a reference to the index specified \nwhen the add() method was called.\n<p>\nSubscribers to the \"on\" moment of this event, will be notified \nbefore a child is added.\n</p>\n<p>\nSubscribers to the \"after\" moment of this event, will be notified\nafter a child is added.\n</p>"}, {"name": "addClass", "url": "Node.html#method_addClass", "access": "", "host": "Node", "params": "className <String>  the class name to add to the node's class attribute", "type": "method", "description": "Adds a class name to each node."}, {"name": "addClass", "url": "NodeList.html#method_addClass", "access": "", "host": "NodeList", "params": "className <String>  the class name to add to the node's class attribute", "type": "method", "description": "Adds a class name to each node."}, {"name": "addClass", "url": "DOM.html#method_addClass", "access": "", "host": "DOM", "params": "element <HTMLElement>  The DOM element., className <String>  the class name to add to the class attribute", "type": "method", "description": "Adds a class name to a given DOM element."}, {"name": "addCustomTrigger", "url": "ImgLoadGroup.html#method_addCustomTrigger", "access": "", "host": "ImgLoadGroup", "params": "name <String>   The name of the event, obj <Object>   The object on which to attach the event. <code>obj</code> is optional - by default the event is attached to the <code>Y</code> instance", "type": "method", "description": "Adds a custom event trigger to the group."}, {"name": "addField", "url": "Test.Reporter.html#method_addField", "access": "", "host": "Test.Reporter", "params": "name <String>  The name of the field., value <Variant>  The value of the field.", "type": "method", "description": "Adds a field to the form that submits the results."}, {"name": "addGroup", "url": "Loader.html#method_addGroup", "access": "", "host": "Loader", "params": "o <Object>  An object containing the module data, name <Object>  the module name (optional), required if not in the module data", "type": "method", "description": "Add a new module group\n<dl>\n<dt>name:</dt>      <dd>required, the group name</dd>\n<dt>base:</dt>      <dd>The base dir for this module group</dd>\n<dt>root:</dt>      <dd>The root path to add to each combo resource path</dd>\n<dt>combine:</dt>   <dd>combo handle</dd>\n<dt>comboBase:</dt> <dd>combo service base path</dd>\n<dt>modules:</dt>   <dd>the group of modules</dd>\n</dl>"}, {"name": "addHandle", "url": "DD.Drag.html#method_addHandle", "access": "", "host": "DD.Drag", "params": "str <String>  The selector to test for a valid handle. Must be a child of the element.", "type": "method", "description": "Add a handle to a drag element. Drag only initiates when a mousedown happens on this element."}, {"name": "addHTML", "url": "DOM.html#method_addHTML", "access": "", "host": "DOM", "params": "node <HTMLElement>  The node to insert into, content <String>  The content to be inserted, where <String>  Where to insert the content; default is after lastChild", "type": "method", "description": "Inserts content in a node at the given location"}, {"name": "addInvalid", "url": "DD.Drag.html#method_addInvalid", "access": "", "host": "DD.Drag", "params": "str <String>  The selector to test against to determine if this is an invalid drag handle.", "type": "method", "description": "Add a selector string to test the handle against. If the test passes the drag operation will not continue."}, {"name": "addListener", "url": "YUI.html#method_addListener", "access": "", "host": "YUI", "params": "", "type": "method", "description": "Calls Y.Event.detach with the correct argument order"}, {"name": "addMethod", "url": "Node.html#method_addMethod", "access": "", "host": "Node", "params": "name <String>  The name of the method to add, fn <Function>  The function that becomes the method, context <Object>  An optional context to call the method with\n(defaults to the Node instance)", "type": "method", "description": "Adds methods to the Y.Node prototype, routing through scrubVal."}, {"name": "addMethod", "url": "ArrayList.html#method_addMethod", "access": "", "host": "ArrayList", "params": "dest < Object >   Object or prototype to receive the iterator method, name < String | Array >   Name of method of methods to create", "type": "method", "description": "<p>Adds a pass through method to dest (typically the prototype of a list\nclass) that calls the named method on each item in the list with\nwhatever parameters are passed in.  Allows for API indirection via list\ninstances.</p>\n<p>Accepts a single string name or an array of string names.</p>\n<pre><code>list.each( function ( item ) {\nitem.methodName( 1, 2, 3 );\n} );\n// becomes\nlist.methodName( 1, 2, 3 );</code></pre>\n<p>Additionally, the pass through methods use the item retrieved by the\n<code>_item</code> method in case there is any special behavior that is\nappropriate for API mirroring.</p>"}, {"name": "addModule", "url": "Loader.html#method_addModule", "access": "", "host": "Loader", "params": "o <Object>  An object containing the module data, name <Object>  the module name (optional), required if not in the module data", "type": "method", "description": "Add a new module to the component metadata.         \n<dl>\n<dt>name:</dt>       <dd>required, the component name</dd>\n<dt>type:</dt>       <dd>required, the component type (js or css)</dd>\n<dt>path:</dt>       <dd>required, the path to the script from \"base\"</dd>\n<dt>requires:</dt>   <dd>array of modules required by this component</dd>\n<dt>optional:</dt>   <dd>array of optional modules for this component</dd>\n<dt>supersedes:</dt> <dd>array of the modules this component replaces</dd>\n<dt>after:</dt>      <dd>array of modules the components which, if present, should be sorted above this one</dd>\n<dt>rollup:</dt>     <dd>the number of superseded modules required for automatic rollup</dd>\n<dt>fullpath:</dt>   <dd>If fullpath is specified, this is used instead of the configured base + path</dd>\n<dt>skinnable:</dt>  <dd>flag to determine if skin assets should automatically be pulled in</dd>\n<dt>submodules:</dt> <dd>a hash of submodules</dd>\n<dt>lang:</dt>       <dd>array of BCP 47 language tags of\nlanguages for which this module has localized resource bundles,\ne.g., [\"en-GB\",\"zh-Hans-CN\"]</dd>\n</dl>"}, {"name": "_addPanelClass", "url": "Panel.html#method__addPanelClass", "access": "protected", "host": "Panel", "params": "section <String>  <a href=\"WidgetStdMod.html\">WidgetStdMod</a> section (i.e., body, header, footer).", "type": "method", "description": "Add css classes neede for the Panel in the passed <code>section</code>."}, {"name": "addTarget", "url": "EventTarget.html#method_addTarget", "access": "", "host": "EventTarget", "params": "o <EventTarget>   the target to add", "type": "method", "description": "Registers another EventTarget as a bubble target.  Bubble order\nis determined by the order registered.  Multiple targets can\nbe specified.\nEvents can only bubble if emitFacade is true.\nIncluded in the event-custom-complex submodule."}, {"name": "addToGroup", "url": "DD.Drag.html#method_addToGroup", "access": "", "host": "DD.Drag", "params": "g <String>  The group to add this Drag Instance to.", "type": "method", "description": "Add this Drag instance to a group, this should be used for on-the-fly group additions."}, {"name": "addToGroup", "url": "DD.Drop.html#method_addToGroup", "access": "", "host": "DD.Drop", "params": "g <String>  The group to add this Drop Instance to.", "type": "method", "description": "Add this Drop instance to a group, this should be used for on-the-fly group additions."}, {"name": "addTrigger", "url": "ImgLoadGroup.html#method_addTrigger", "access": "", "host": "ImgLoadGroup", "params": "obj <Object>   The DOM object to attach the trigger event to, type <String>   The event type", "type": "method", "description": "Adds a trigger to the group. Arguments are passed to <code>Y.on</code>."}, {"name": "after", "url": "NodeList.html#method_after", "access": "", "host": "NodeList", "params": "type <String>  The event being listened for, fn <Function>  The handler to call when the event fires, context <Object>  The context to call the handler with.\nDefault is the NodeList instance.", "type": "method", "description": "Applies an event listener to each Node bound to the NodeList. \nThe handler is called only after all on() handlers are called\nand the event is not prevented."}, {"name": "after", "url": "YUI.html#method_after", "access": "", "host": "YUI", "params": "type <Object>  event type (this parameter does not apply for function events), fn <Object>  the callback, target <Object>  a descriptor for the target (applies to custom events only).\nFor function events, this is the object that contains the function to\nexecute., extra <Object>  0..n Extra information a particular event may need.  These\nwill be documented with the event.  In the case of function events, this\nis the name of the function to execute on the host.  In the case of\ndelegate listeners, this is the event delegation specification., context <Object>  optionally change the value of 'this' in the callback, args* <Object>  0..n additional arguments to pass to the callback.", "type": "method", "description": "after() is a unified interface for subscribing to\nmost events exposed by YUI.  This includes custom events,\nDOM events, and AOP events.  This works the same way as\nthe on() function, only it operates after any default\nbehavior for the event has executed. @see <code>on</code> for more \ninformation."}, {"name": "after", "url": "Do.html#method_after", "access": "", "host": "Do", "params": "fn <Function>   the function to execute, obj <Object>  the object hosting the method to displace, sFn <string>   the name of the method to displace, c <Object>  The execution context for fn, arg* <mixed>   0..n additional arguments to supply to the subscriber", "type": "method", "description": "Execute the supplied method after the specified function"}, {"name": "after", "url": "CustomEvent.html#method_after", "access": "", "host": "CustomEvent", "params": "fn <Function>  The function to execute, context <object>   optional execution context., arg* <mixed>   0..n additional arguments to supply to the subscriber\nwhen the event fires.", "type": "method", "description": "Listen for this event after the normal subscribers have been notified and\nthe default behavior has been applied.  If a normal subscriber prevents the \ndefault behavior, it also prevents after listeners from firing."}, {"name": "after", "url": "EventTarget.html#method_after", "access": "", "host": "EventTarget", "params": "type <string>        The type of the event, fn <Function>   The callback, context <object>   optional execution context., arg* <mixed>   0..n additional arguments to supply to the subscriber", "type": "method", "description": "Subscribe to a custom event hosted by this object.  The\nsupplied callback will execute after any listeners add\nvia the subscribe method, and after the default function,\nif configured for the event, has executed."}, {"name": "_afterActiveDescendantChange", "url": "plugin.NodeMenuNav.html#method__afterActiveDescendantChange", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the Attribute change event., menuNav <NodeMenuNav>  Object representing the NodeMenuNav instance.", "type": "method", "description": "\"activeDescendantChange\" event handler for menu's \nFocus Manager."}, {"name": "_afterActiveDescendantChange", "url": "WidgetParent.html#method__afterActiveDescendantChange", "access": "protected", "host": "WidgetParent", "params": "event <EventFacade>  The event facade for the attribute change.", "type": "method", "description": "Attribute change listener for the <code>activeDescendant</code> \nattribute, responsible for setting the value of the \nparent's <code>activeDescendant</code> attribute."}, {"name": "_afterActiveDescendantChange", "url": "plugin.NodeFocusManager.html#method__afterActiveDescendantChange", "access": "protected", "host": "plugin.NodeFocusManager", "params": "event <Object>   Object representing the change event.", "type": "method", "description": "afterChange event handler for the \n\"activeDescendant\" attribute."}, {"name": "_afterAddButton", "url": "Toolbar.html#method__afterAddButton", "access": "protected", "host": "Toolbar", "params": "event <EventFacade> ", "type": "method", "description": "Syncs the UI after a button is added."}, {"name": "_afterAlign", "url": "YUI.html#method__afterAlign", "access": "protected", "host": "YUI", "params": "e < EventFacade >   The drag:align event", "type": "method", "description": "Dispatch the new position of the DD into the value setting operations."}, {"name": "_afterAlignChange", "url": "WidgetPositionAlign.html#method__afterAlignChange", "access": "protected", "host": "WidgetPositionAlign", "params": "e <EventFacade>  The event facade for the attribute change", "type": "method", "description": "Default attribute change listener for the align attribute, responsible\nfor updating the UI, in response to attribute changes."}, {"name": "_afterBodyChange", "url": "WidgetStdMod.html#method__afterBodyChange", "access": "protected", "host": "WidgetStdMod", "params": "e <EventFacade>  The event facade for the attribute change", "type": "method", "description": "Default attribute change listener for the bodyContent attribute, responsible\nfor updating the UI, in response to attribute changes."}, {"name": "_afterBodyChange", "url": "Tooltip.html#method__afterBodyChange", "access": "protected", "host": "Tooltip", "params": "e <EventFacade> ", "type": "method", "description": "Fires after the attribute <code>bodyContent</code> change."}, {"name": "_afterCacheLimitChange", "url": "Plugin.ConsoleFilters.html#method__afterCacheLimitChange", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "e <Event>   the attribute change event object", "type": "method", "description": "Trims the cache of entries to the appropriate new length."}, {"name": "_afterCategoryChange", "url": "Plugin.ConsoleFilters.html#method__afterCategoryChange", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "e <Event>   the attribute change event object", "type": "method", "description": "Triggers the Console to update if a known category filter\nchanges value (e.g. visible => hidden).  Updates the appropriate\ncheckbox's checked state if necessary."}, {"name": "_afterClearConsole", "url": "Plugin.ConsoleFilters.html#method__afterClearConsole", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "method", "description": "Flushes the cached entries after a call to the Console's clearConsole()."}, {"name": "_afterCollapsedChange", "url": "Console.html#method__afterCollapsedChange", "access": "protected", "host": "Console", "params": "e <Event>   Custom event for the attribute change", "type": "method", "description": "Updates the className of the contentBox, which should trigger CSS to\nhide or show the body and footer sections depending on the new value."}, {"name": "_afterCollapsedChange", "url": "Plugin.Console.html#method__afterCollapsedChange", "access": "protected", "host": "Plugin.Console", "params": "e <Event>   Custom event for the attribute change", "type": "method", "description": "Updates the className of the contentBox, which should trigger CSS to\nhide or show the body and footer sections depending on the new value."}, {"name": "_afterCollapsedChange", "url": "Panel.html#method__afterCollapsedChange", "access": "protected", "host": "Panel", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of\n<a href=\"Panel.html#config_collapsed\">collapsed</a> change."}, {"name": "_afterComponentVisibleChange", "url": "Component.html#method__afterComponentVisibleChange", "access": "protected", "host": "Component", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"Component.html#config_visible\">visible</a> attribute change."}, {"name": "_afterConsoleLimitChange", "url": "Console.html#method__afterConsoleLimitChange", "access": "protected", "host": "Console", "params": "e <Event>   Custom event for the attribute change", "type": "method", "description": "Calls this._trimOldEntries() in response to changes in the configured\nconsoleLimit attribute."}, {"name": "_afterConsoleLimitChange", "url": "Plugin.Console.html#method__afterConsoleLimitChange", "access": "protected", "host": "Plugin.Console", "params": "e <Event>   Custom event for the attribute change", "type": "method", "description": "Calls this._trimOldEntries() in response to changes in the configured\nconsoleLimit attribute."}, {"name": "_afterConstrainChange", "url": "WidgetPositionConstrain.html#method__afterConstrainChange", "access": "protected", "host": "WidgetPositionConstrain", "params": "e <EventFacade>  The event facade", "type": "method", "description": "After change listener for the \"constrain\" attribute, responsible\nfor updating the UI, in response to attribute changes."}, {"name": "_afterCssClassChange", "url": "Component.html#method__afterCssClassChange", "access": "protected", "host": "Component", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"Component.html#config_cssClass\">cssClass</a> attribute change."}, {"name": "_afterDestroyChild", "url": "WidgetParent.html#method__afterDestroyChild", "access": "protected", "host": "WidgetParent", "params": "event <EventFacade>  The event facade for the attribute change.", "type": "method", "description": "Destroy event listener for each child Widget, responsible for removing \nthe destroyed child Widget from the parent's internal array of children\n(_items property)."}, {"name": "_afterDisabledChange", "url": "SliderBase.html#method__afterDisabledChange", "access": "protected", "host": "SliderBase", "params": "e <Event>   The disabledChange event object", "type": "method", "description": "Locks or unlocks the thumb."}, {"name": "_afterDisabledChangeDatePicker", "url": "DatePickerSelect.html#method__afterDisabledChangeDatePicker", "access": "protected", "host": "DatePickerSelect", "params": "event <EventFacade> ", "type": "method", "description": "Fired after\n<a href=\"DatePickerSelect.html#config_disabled\">disabled</a> is set."}, {"name": "_afterDrag", "url": "SliderBase.html#method__afterDrag", "access": "protected", "host": "SliderBase", "params": "e <Event>   the <code>drag:drag</code> event from the thumb", "type": "method", "description": "Dispatches the <code>thumbMove</code> event."}, {"name": "_afterFillHeightChange", "url": "WidgetStdMod.html#method__afterFillHeightChange", "access": "protected", "host": "WidgetStdMod", "params": "e <EventFacade>  The event facade for the attribute change", "type": "method", "description": "Default attribute change listener for the fillHeight attribute, responsible\nfor updating the UI, in response to attribute changes."}, {"name": "_afterFocusedChangeEditable", "url": "Editable.html#method__afterFocusedChangeEditable", "access": "protected", "host": "Editable", "params": "event <EventFacade> ", "type": "method", "description": "Fires the <a href=\"Editable.html#event_stopEditing\">stopEditing</a>\nevent."}, {"name": "_afterFooterChange", "url": "WidgetStdMod.html#method__afterFooterChange", "access": "protected", "host": "WidgetStdMod", "params": "e <EventFacade>  The event facade for the attribute change", "type": "method", "description": "Default attribute change listener for the footerContent attribute, responsible\nfor updating the UI, in response to attribute changes."}, {"name": "_afterHeaderChange", "url": "WidgetStdMod.html#method__afterHeaderChange", "access": "protected", "host": "WidgetStdMod", "params": "e <EventFacade>  The event facade for the attribute change", "type": "method", "description": "Default attribute change listener for the headerContent attribute, responsible\nfor updating the UI, in response to attribute changes."}, {"name": "_afterHideOnChange", "url": "OverlayContext.html#method__afterHideOnChange", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the <a href=\"OverlayContext.html#config_hideOn\">hideOn</a>\nattribute change."}, {"name": "afterHostEvent", "url": "Plugin.Base.html#method_afterHostEvent", "access": "", "host": "Plugin.Base", "params": "type <String | Object>  The event type., fn <Function>  The listener., context <Object>  The execution context. Defaults to the plugin instance.", "type": "method", "description": "Listens for the \"after\" moment of events fired by the host object.\nListeners attached through this method will be detached when the plugin is unplugged."}, {"name": "afterHostMethod", "url": "Plugin.Base.html#method_afterHostMethod", "access": "", "host": "Plugin.Base", "params": "The <String>  name of the method to inject the function after., fn <Function>  The function to inject., context <Object>  The execution context. Defaults to the plugin instance.", "type": "method", "description": "Injects a function to be executed after a given method on host object.\nThe function will be detached when the plugin is unplugged."}, {"name": "_afterLengthChange", "url": "SliderBase.html#method__afterLengthChange", "access": "protected", "host": "SliderBase", "params": "e <Event>   The lengthChange event object", "type": "method", "description": "Handles changes to the <code>length</code> attribute.  By default, it\ntriggers an update to the UI."}, {"name": "_afterLoadingChange", "url": "ImageViewer.html#method__afterLoadingChange", "access": "protected", "host": "ImageViewer", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"ImageViewer.html#config_loading\">loading</a> attribute change."}, {"name": "_afterMaxChange", "url": "SliderValueRange.html#method__afterMaxChange", "access": "protected", "host": "SliderValueRange", "params": "e < EventFacade >   The <code>max</code> attribute change event.", "type": "method", "description": "Update position according to new max value.  If the new max results\nin the current value being out of range, the value is set to the\ncloser of min or max."}, {"name": "_afterMaxChange", "url": "YUI.html#method__afterMaxChange", "access": "protected", "host": "YUI", "params": "e < EventFacade >   The <code>max</code> attribute change event.", "type": "method", "description": "Update position according to new max value.  If the new max results in\nthe current value being out of range, the value is set to the closer of\nmin or max."}, {"name": "_afterMinChange", "url": "SliderValueRange.html#method__afterMinChange", "access": "protected", "host": "SliderValueRange", "params": "e < EventFacade >   The <code>min</code> attribute change event.", "type": "method", "description": "Update position according to new min value.  If the new min results\nin the current value being out of range, the value is set to the\ncloser of min or max."}, {"name": "_afterMinChange", "url": "YUI.html#method__afterMinChange", "access": "protected", "host": "YUI", "params": "e < EventFacade >   The <code>min</code> attribute change event.", "type": "method", "description": "Update position according to new min value.  If the new min results in\nthe current value being out of range, the value is set to the closer of\nmin or max."}, {"name": "_afterPanelRender", "url": "Panel.html#method__afterPanelRender", "access": "protected", "host": "Panel", "params": "event <EventFacade> ", "type": "method", "description": "Fires after render phase."}, {"name": "_afterParentSelectedChange", "url": "WidgetParent.html#method__afterParentSelectedChange", "access": "protected", "host": "WidgetParent", "params": "event <EventFacade>  The event facade for the attribute change.", "type": "method", "description": "Attribute change listener for the <code>selected</code> \nattribute, responsible for syncing the selected state of all children to \nmatch that of their parent Widget."}, {"name": "_afterPausedChange", "url": "Console.html#method__afterPausedChange", "access": "protected", "host": "Console", "params": "e <Event>   Custom event for the attribute change", "type": "method", "description": "Updates the UI and schedules or cancels the print loop."}, {"name": "_afterPausedChange", "url": "Plugin.Console.html#method__afterPausedChange", "access": "protected", "host": "Plugin.Console", "params": "e <Event>   Custom event for the attribute change", "type": "method", "description": "Updates the UI and schedules or cancels the print loop."}, {"name": "_afterRemoveButton", "url": "Toolbar.html#method__afterRemoveButton", "access": "protected", "host": "Toolbar", "params": "event <EventFacade> ", "type": "method", "description": "Syncs the UI after a button is removed."}, {"name": "_afterRender", "url": "ImageViewer.html#method__afterRender", "access": "protected", "host": "ImageViewer", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the ImageViewer render phase."}, {"name": "_afterRenderer", "url": "Dialog.html#method__afterRenderer", "access": "protected", "host": "Dialog", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the render phase. Invoke\n<a href=\"Dialog.html#method__initButtons\">_initButtons</a>."}, {"name": "_afterResize", "url": "Resize.html#method__afterResize", "access": "protected", "host": "Resize", "params": "event <EventFacade>  resize:resize custom event", "type": "method", "description": "Fires after resize:resize event."}, {"name": "afters", "url": "CustomEvent.html#property_afters", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "'After' subscribers"}, {"name": "_afterSelectionChange", "url": "WidgetParent.html#method__afterSelectionChange", "access": "protected", "host": "WidgetParent", "params": "event <EventFacade>  The event facade for the attribute change.", "type": "method", "description": "Attribute change listener for the <code>selection</code> \nattribute, responsible for setting the value of the \nparent's <code>selected</code> attribute."}, {"name": "_afterSetChildren", "url": "TreeNode.html#method__afterSetChildren", "access": "protected", "host": "TreeNode", "params": "event <EventFacade> ", "type": "method", "description": "Fires after set children."}, {"name": "_afterSetCurrentMonth", "url": "DatePickerSelect.html#method__afterSetCurrentMonth", "access": "protected", "host": "DatePickerSelect", "params": "event <EventFacade> ", "type": "method", "description": "Fired after\n<a href=\"DatePickerSelect.html#config_currentMonth\">currentMonth</a> is set."}, {"name": "_afterSetDates", "url": "Calendar.html#method__afterSetDates", "access": "protected", "host": "Calendar", "params": "event <EventFacade>  select custom event", "type": "method", "description": "Fires after select event."}, {"name": "_afterSetLabel", "url": "Rating.html#method__afterSetLabel", "access": "protected", "host": "Rating", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"Rating.html#config_label\">label</a> attribute change."}, {"name": "_afterSetState", "url": "Paginator.html#method__afterSetState", "access": "protected", "host": "Paginator", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"Paginator.html#config_state\">state</a> attribute change."}, {"name": "_afterSetVisible", "url": "Dialog.html#method__afterSetVisible", "access": "protected", "host": "Dialog", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"Overlay.html#config_visible\">visible</a> attribute change."}, {"name": "_afterShimChange", "url": "WidgetStack.html#method__afterShimChange", "access": "protected", "host": "WidgetStack", "params": "e <EventFacade>  The event facade for the attribute change", "type": "method", "description": "Default attribute change listener for the shim attribute, responsible\nfor updating the UI, in response to attribute changes."}, {"name": "_afterShowArrowChange", "url": "OverlayContextPanel.html#method__afterShowArrowChange", "access": "protected", "host": "OverlayContextPanel", "params": "event <EventFacade> ", "type": "method", "description": "Fires after showArrow attribute changes."}, {"name": "_afterShowOnChange", "url": "OverlayContext.html#method__afterShowOnChange", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the <a href=\"OverlayContext.html#config_showOn\">showOn</a>\nattribute change."}, {"name": "_afterSourceChange", "url": "Plugin.ConsoleFilters.html#method__afterSourceChange", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "e <Event>   the attribute change event object", "type": "method", "description": "Triggers the Console to update if a known source filter\nchanges value (e.g. visible => hidden).  Updates the appropriate\ncheckbox's checked state if necessary."}, {"name": "_afterStringsChange", "url": "Console.html#method__afterStringsChange", "access": "protected", "host": "Console", "params": "e <Event>   Custom event for the attribute change", "type": "method", "description": "Updates the UI if changes are made to any of the strings in the strings\nattribute."}, {"name": "_afterStringsChange", "url": "Plugin.Console.html#method__afterStringsChange", "access": "protected", "host": "Plugin.Console", "params": "e <Event>   Custom event for the attribute change", "type": "method", "description": "Updates the UI if changes are made to any of the strings in the strings\nattribute."}, {"name": "_afterTargetChange", "url": "OverlayMask.html#method__afterTargetChange", "access": "protected", "host": "OverlayMask", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"Paginator.html#config_target\">target</a> attribute change."}, {"name": "_afterTitleChange", "url": "Panel.html#method__afterTitleChange", "access": "protected", "host": "Panel", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of\n<a href=\"Panel.html#config_title\">title</a> change."}, {"name": "_afterTriggerChange", "url": "OverlayContext.html#method__afterTriggerChange", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the <a href=\"OverlayContext.html#config_trigger\">trigger</a>\nattribute change."}, {"name": "_afterValueChange", "url": "SliderValueRange.html#method__afterValueChange", "access": "protected", "host": "SliderValueRange", "params": "e < EventFacade >   The <code>valueChange</code> event.", "type": "method", "description": "Propagate change to the thumb position unless the change originated\nfrom the thumbMove event."}, {"name": "_afterValueChange", "url": "YUI.html#method__afterValueChange", "access": "protected", "host": "YUI", "params": "e < EventFacade >   The <code>value</code> attribute change event.", "type": "method", "description": "Propagate change to the DD unless the change is coming from a DD event."}, {"name": "_afterVisibleChange", "url": "LoadingMask.html#method__afterVisibleChange", "access": "protected", "host": "LoadingMask", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"LoadingMask.html#config_visible\">visible</a> attribute change."}, {"name": "_afterVisibleChange", "url": "ImageViewer.html#method__afterVisibleChange", "access": "protected", "host": "ImageViewer", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"ImageViewer.html#config_visible\">visible</a> attribute change."}, {"name": "_afterVisibleChange", "url": "ImageGallery.html#method__afterVisibleChange", "access": "protected", "host": "ImageGallery", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"ImageViewer.html#config_visible\">visible</a> attribute change."}, {"name": "_afterVisibleChange", "url": "Console.html#method__afterVisibleChange", "access": "protected", "host": "Console", "params": "e <Event>   the visibleChange event", "type": "method", "description": "Makes adjustments to the UI if needed when the Console is hidden or shown"}, {"name": "_afterVisibleChange", "url": "Plugin.Console.html#method__afterVisibleChange", "access": "protected", "host": "Plugin.Console", "params": "e <Event>   the visibleChange event", "type": "method", "description": "Makes adjustments to the UI if needed when the Console is hidden or shown"}, {"name": "_afterVisibleChange", "url": "OverlayMask.html#method__afterVisibleChange", "access": "protected", "host": "OverlayMask", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"Paginator.html#config_visible\">visible</a> attribute change."}, {"name": "_afterXYChange", "url": "WidgetPosition.html#method__afterXYChange", "access": "protected", "host": "WidgetPosition", "params": "e <EventFacade>  The event facade for the attribute change", "type": "method", "description": "Default attribute change listener for the xy attribute, responsible\nfor updating the UI, in response to attribute changes."}, {"name": "_afterZIndexChange", "url": "WidgetStack.html#method__afterZIndexChange", "access": "protected", "host": "WidgetStack", "params": "e <EventFacade>  The event facade for the attribute change", "type": "method", "description": "Default attribute change listener for the zIndex attribute, responsible\nfor updating the UI, in response to attribute changes."}, {"name": "aggregate", "url": "YUI~oop.html#method_aggregate", "access": "", "host": "YUI~oop", "params": "r <Function>   the object to receive the augmentation, s <Function>   the object that supplies the properties to augment, ov <boolean>   if true, properties already on the receiver\nwill be overwritten if found on the supplier., wl <string[]>   a whitelist.  If supplied, only properties in \nthis list will be applied to the receiver.", "type": "method", "description": "Applies object properties from the supplier to the receiver.  If\nthe target has the property, and the property is an object, the target\nobject will be augmented with the supplier's value.  If the property\nis an array, the suppliers value will be appended to the target."}, {"name": "A.HTML._fragHTML5Shived", "url": "A.HTML5.html#property_A.HTML._fragHTML5Shived", "access": "protected", "host": "A.HTML5", "params": "", "type": "property", "description": "A global DocumentFragment already HTML5 shived, for performance\nreasons. (i.e., all nodes and its HTML5 children appended to this\nfragment iherits the styles on IE)."}, {"name": "A.io.request", "url": "A.io.html#method_A.io.request", "access": "", "host": "A.io", "params": "uri <String>  URI to be requested., config <Object>  Configuration Object for the <a href=\"io.html\">IO</a>.", "type": "method", "description": "Static method to invoke the <a href=\"IORequest.html\">IORequest</a>. Likewise <a href=\"io.html#method_io\">io</a>."}, {"name": "air", "url": "UA.html#property_air", "access": "", "host": "UA", "params": "", "type": "property", "description": "Adobe AIR version number or 0.  Only populated if webkit is detected.\nExample: 1.0"}, {"name": "align", "url": "Plugin.DDConstrained.html#method_align", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "method", "description": "Modifies the Drag.actXY method from the after drag:align event. This is where the constraining happens."}, {"name": "align", "url": "DD.Scroll.html#method_align", "access": "", "host": "DD.Scroll", "params": "", "type": "method", "description": "Called from the drag:align event to determine if we need to scroll."}, {"name": "align", "url": "OverlayContext.html#config_align", "access": "", "host": "OverlayContext", "params": "", "type": "config", "description": "Inherited from <a href=\"Overlay.html#config_align\">Overlay</a>."}, {"name": "align", "url": "OverlayContextPanel.html#method_align", "access": "", "host": "OverlayContextPanel", "params": "node <Node | String | null>  A reference (or selector string) for\nthe Node which with the OverlayContextPanel is to be aligned., points <Array[2]>  A two element array, specifying the points on\nthe OverlayContextPanel and node/viewport which need to be aligned.", "type": "method", "description": "Aligns the OverlayContextPanel to the provided node (or viewport) using the\nprovided points. Inherited from\n<a href=\"Overlay.html#method_align\">Overlay</a>."}, {"name": "align", "url": "WidgetPositionAlign.html#method_align", "access": "", "host": "WidgetPositionAlign", "params": "node <Node | String | null>  A reference (or selector string) for the Node which with the Widget is to be aligned.\nIf null is passed in, the Widget will be aligned with the viewport., points <Array[2]>  A two element array, specifying the points on the Widget and node/viewport which need to be aligned. \nThe first entry is the point on the Widget, and the second entry is the point on the node/viewport which need to align.\nValid point references are defined as static constants on the WidgetPositionAlign class. \ne.g. [WidgetPositionAlign.TL, WidgetPositionAlign.TR] will align the top-left corner of the Widget with the top-right corner of the node/viewport.", "type": "method", "description": "Aligns the Widget to the provided node (or viewport) using the provided\npoints. The method can be invoked directly, however it will result in \nthe align attribute being out of sync with current position of the of Widget."}, {"name": "align", "url": "WidgetPositionAlign.html#config_align", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "config", "description": ""}, {"name": "align", "url": "Tooltip.html#config_align", "access": "", "host": "Tooltip", "params": "", "type": "config", "description": "See <a href=\"Overlay.html#config_align\">OverlayContextPanel align</a>."}, {"name": "alignChange", "url": "OverlayContext.html#event_alignChange", "access": "", "host": "OverlayContext", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "alignChange", "url": "WidgetPositionAlign.html#event_alignChange", "access": "", "host": "WidgetPositionAlign", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "alignChange", "url": "Tooltip.html#event_alignChange", "access": "", "host": "Tooltip", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'align' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "alignPoints", "url": "OverlayMask.html#config_alignPoints", "access": "", "host": "OverlayMask", "params": "", "type": "config", "description": "Points to align the <a href=\"Overlay.html\">Overlay</a> used as\nmask."}, {"name": "alignPointsChange", "url": "OverlayMask.html#event_alignPointsChange", "access": "", "host": "OverlayMask", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'alignPoints' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "all", "url": "Node.html#method_all", "access": "", "host": "Node", "params": "selector <string>  The CSS selector to test against.", "type": "method", "description": "Retrieves a nodeList based on the given CSS selector."}, {"name": "all", "url": "A.NodeList.html#method_all", "access": "", "host": "A.NodeList", "params": "", "type": "method", "description": "See <a href=\"Node.html#method_all\">Node all</a>."}, {"name": "allowRollup", "url": "Loader.html#property_allowRollup", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Should we allow rollups"}, {"name": "alreadySelected", "url": "Calendar.html#method_alreadySelected", "access": "", "host": "Calendar", "params": "date <Date>  Date to be checked.", "type": "method", "description": "Check if a date is already selected."}, {"name": "alwaysShowContainer", "url": "AutoComplete.html#config_alwaysShowContainer", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "Always show the results container, instead of only showing when the \nuser is requesting them."}, {"name": "alwaysShowContainerChange", "url": "AutoComplete.html#event_alwaysShowContainerChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'alwaysShowContainer' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "alwaysShowHitArea", "url": "TreeNode.html#config_alwaysShowHitArea", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Always show the hitarea icon."}, {"name": "alwaysShowHitAreaChange", "url": "TreeNode.html#event_alwaysShowHitAreaChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'alwaysShowHitArea' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "alwaysVisible", "url": "Paginator.html#config_alwaysVisible", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "If true the Paginator will be always visible, even when the number\nof pages is 0. To hide the paginator controls automatically when\nthere is no pages to display use <code>false</code>."}, {"name": "alwaysVisibleChange", "url": "Paginator.html#event_alwaysVisibleChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'alwaysVisible' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "ancestor", "url": "Node.html#method_ancestor", "access": "", "host": "Node", "params": "fn <String | Function>  A selector string or boolean method for testing elements., testSelf <Boolean>  optional Whether or not to include the element in the scan \nIf a function is used, it receives the current node being tested as the only argument.", "type": "method", "description": "Returns the nearest ancestor that passes the test applied by supplied boolean method."}, {"name": "ancestor", "url": "Selector.html#method_ancestor", "access": "", "host": "Selector", "params": "element <HTMLElement>  An HTMLElement to start the query from., selector <String>  The CSS selector to test the node against., testSelf <Boolean>  optional Whether or not to include the element in the scan", "type": "method", "description": "A convenience function to emulate Y.Node's aNode.ancestor(selector)."}, {"name": "ancestors", "url": "A.Node.html#method_ancestors", "access": "", "host": "A.Node", "params": "selector <String>  A selector to filter the ancestor elements against.", "type": "method", "description": "<p>Returns the current ancestors of the node element. If a selector is\nspecified, the ancestors are filtered to match the selector.</p>\nExample:\n<pre><code>\nA.one('#nodeId').ancestors('div');\n</code></pre>"}, {"name": "anim", "url": "ImageViewer.html#event_anim", "access": "", "host": "ImageViewer", "params": "event <Event.Facade>  The load event.", "type": "event", "description": "Handles the anim event. Fired when the image anim ends."}, {"name": "anim", "url": "ImageViewer.html#config_anim", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "If <code>true</code> the navigation is animated."}, {"name": "anim", "url": "OverlayContextPanel.html#config_anim", "access": "", "host": "OverlayContextPanel", "params": "", "type": "config", "description": "Enable or disable the animation for hide and show. Used as the\n<a href=\"Anim.html\">Anim</a> configuration attributes.\n<pre><code>anim: {\nshow: {\nduration: .9\n},\nhide: {\nduration: .2\n}\n}\n</code></pre>"}, {"name": "anim", "url": "Tooltip.html#config_anim", "access": "", "host": "Tooltip", "params": "", "type": "config", "description": "See <a href=\"OverlayContextPanel.html#config_anim\">OverlayContextPanel anim</a>."}, {"name": "animChange", "url": "ImageViewer.html#event_animChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "animChange", "url": "OverlayContextPanel.html#event_animChange", "access": "", "host": "OverlayContextPanel", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "animChange", "url": "Tooltip.html#event_animChange", "access": "", "host": "Tooltip", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'anim' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "animHide", "url": "Plugin.WidgetAnim.html#config_animHide", "access": "", "host": "Plugin.WidgetAnim", "params": "", "type": "config", "description": "Default animation instance used for hiding the widget (opacity fade-out)"}, {"name": "animHideChange", "url": "Plugin.WidgetAnim.html#event_animHideChange", "access": "", "host": "Plugin.WidgetAnim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'animHide' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "animShow", "url": "Plugin.WidgetAnim.html#config_animShow", "access": "", "host": "Plugin.WidgetAnim", "params": "", "type": "config", "description": "Default animation instance used for showing the widget (opacity fade-in)"}, {"name": "animShowChange", "url": "Plugin.WidgetAnim.html#event_animShowChange", "access": "", "host": "Plugin.WidgetAnim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'animShow' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "A.Node.DOM_EVENTS.input", "url": "AUI~event~input.html#property_A.Node.DOM_EVENTS.input", "access": "", "host": "AUI~event~input", "params": "", "type": "property", "description": "A.Node.DOM_EVENTS.input event."}, {"name": "A.Plugin.IO.ATTRS", "url": "A.Plugin.IO.html#property_A.Plugin.IO.ATTRS", "access": "", "host": "A.Plugin.IO", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the A.Plugin.IO."}, {"name": "A.Plugin.IO.NAME", "url": "A.Plugin.IO.html#property_A.Plugin.IO.NAME", "access": "", "host": "A.Plugin.IO", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "A.Plugin.IO.NS", "url": "A.Plugin.IO.html#property_A.Plugin.IO.NS", "access": "", "host": "A.Plugin.IO", "params": "", "type": "property", "description": "Static property provides a string to identify the namespace."}, {"name": "append", "url": "Node.html#method_append", "access": "", "host": "Node", "params": "content <String | Y.Node | HTMLElement>  The content to insert", "type": "method", "description": "Inserts the content as the lastChild of the node."}, {"name": "append", "url": "NodeList.html#method_append", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Called on each Node instance"}, {"name": "appendChild", "url": "Node.html#method_appendChild", "access": "", "host": "Node", "params": "node <HTMLElement | Node>  Node to be appended", "type": "method", "description": "Passes through to DOM method."}, {"name": "_appendChild", "url": "TreeData.html#method__appendChild", "access": "protected", "host": "TreeData", "params": "node <TreeNode> , cancelBubbling <boolean> ", "type": "method", "description": "Append a child node to the TreeData."}, {"name": "appendChild", "url": "TreeData.html#method_appendChild", "access": "", "host": "TreeData", "params": "node <TreeNode> , cancelBubbling <boolean> ", "type": "method", "description": "Append a child node to the TreeData."}, {"name": "appendOrder", "url": "DatePickerSelect.html#config_appendOrder", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "The order the selects elements are appended to the\n<a href=\"DatePickerSelect.html#config_srcNode\">srcNode</a>."}, {"name": "appendOrderChange", "url": "DatePickerSelect.html#event_appendOrderChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'appendOrder' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_appendState", "url": "TreeViewDD.html#method__appendState", "access": "protected", "host": "TreeViewDD", "params": "nodeContent <Node> ", "type": "method", "description": "Set the append CSS state on the passed <code>nodeContent</code>."}, {"name": "appendTo", "url": "A.Node.html#method_appendTo", "access": "", "host": "A.Node", "params": "selector <Node | String>  A selector, element, HTML string, Node", "type": "method", "description": "<p>Insert the node instance to the end of the <code>selector</code>\nelement.</p>\nExample:\n<pre><code>var node = A.one('#nodeId');\n// using another Node instance\nvar body = A.one('body');\nnode.appendTo(body);\n// using a CSS selector\nnode.appendTo('#container');\n</code></pre>"}, {"name": "apply", "url": "DataSchema.Array.html#method_apply", "access": "", "host": "DataSchema.Array", "params": "schema <Object>   Schema to apply., data <Object>   Array data.", "type": "method", "description": "Applies a given schema to given Array data."}, {"name": "apply", "url": "DataSchema.Base.html#method_apply", "access": "", "host": "DataSchema.Base", "params": "schema <Object>   Schema to apply., data <Object>   Data.", "type": "method", "description": "Overridable method returns data as-is."}, {"name": "apply", "url": "DataSchema.JSON.html#method_apply", "access": "", "host": "DataSchema.JSON", "params": "schema <Object>   Schema to apply., data <Object>   JSON data.", "type": "method", "description": "Applies a given schema to given JSON data."}, {"name": "apply", "url": "DataSchema.XML.html#method_apply", "access": "", "host": "DataSchema.XML", "params": "schema <Object>   Schema to apply., data <XMLDoc>   XML document.", "type": "method", "description": "Applies a given schema to given XML data."}, {"name": "apply", "url": "DataSchema.Text.html#method_apply", "access": "", "host": "DataSchema.Text", "params": "schema <Object>   Schema to apply., data <Object>   Text data.", "type": "method", "description": "Applies a given schema to given delimited text data."}, {"name": "applyConfig", "url": "CustomEvent.html#method_applyConfig", "access": "", "host": "CustomEvent", "params": "o <Object>  hash of properties to apply, force <boolean>   if true, properties that exist on the event \nwill be overwritten.", "type": "method", "description": "Apply configuration properties.  Only applies the CONFIG whitelist"}, {"name": "applyLocalFilter", "url": "AutoComplete.html#config_applyLocalFilter", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "If set to true, the <a href=\"AutoComplete.html#method_filterResults\">filterResults</a> \nmethod will be run on the response from the data source."}, {"name": "applyLocalFilterChange", "url": "AutoComplete.html#event_applyLocalFilterChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'applyLocalFilter' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_applyParsedConfig", "url": "Widget.html#method__applyParsedConfig", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": ""}, {"name": "_applyParser", "url": "Widget.html#method__applyParser", "access": "protected", "host": "Widget", "params": "config <Object>   User configuration object (will be populated with values from Node)", "type": "method", "description": "Utilitity method used to apply the <code>HTML_PARSER</code> configuration for the \ninstance, to retrieve config data values."}, {"name": "applyTo", "url": "YUI.html#method_applyTo", "access": "", "host": "YUI", "params": "id <string>   the YUI instance id, method <string>   the name of the method to exectute.\nEx: 'Object.keys', args <Array>   the arguments to apply to the method", "type": "method", "description": "Executes a method on a YUI instance with\nthe specified id if the specified method is whitelisted."}, {"name": "areEqual", "url": "Test.Assert.html#method_areEqual", "access": "", "host": "Test.Assert", "params": "expected <Object>  The expected value., actual <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is equal to another. This uses the double equals sign\nso type cohersion may occur."}, {"name": "areNotEqual", "url": "Test.Assert.html#method_areNotEqual", "access": "", "host": "Test.Assert", "params": "unexpected <Object>  The unexpected value., actual <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is not equal to another. This uses the double equals sign\nso type cohersion may occur."}, {"name": "areNotSame", "url": "Test.Assert.html#method_areNotSame", "access": "", "host": "Test.Assert", "params": "unexpected <Object>  The unexpected value., actual <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is not the same as another. This uses the triple equals sign\nso no type cohersion may occur."}, {"name": "areSame", "url": "Test.Assert.html#method_areSame", "access": "", "host": "Test.Assert", "params": "expected <Object>  The expected value., actual <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is the same as another. This uses the triple equals sign\nso no type cohersion may occur."}, {"name": "_args", "url": "DelayedTask.html#property__args", "access": "protected", "host": "DelayedTask", "params": "", "type": "property", "description": "Stores the passed <code>args</code> attribute."}, {"name": "args", "url": "Subscriber.html#property_args", "access": "", "host": "Subscriber", "params": "", "type": "property", "description": "Additional arguments to propagate to the subscriber"}, {"name": "arguments", "url": "IORequest.html#config_arguments", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "See <a href=\"http://developer.yahoo.com/yui/3/io/#configuration\">IO\nConfiguration</a>."}, {"name": "argumentsChange", "url": "IORequest.html#event_argumentsChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'arguments' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Array.every", "url": "YUI~array~extras.html#method_Array.every", "access": "", "host": "YUI~array~extras", "params": "a <Array>   the array to iterate, f <Function>   the function to execute on each item, o <Object>  Optional context object", "type": "method", "description": "Executes the supplied function on each item in the array."}, {"name": "Array.filter", "url": "YUI~array~extras.html#method_Array.filter", "access": "", "host": "YUI~array~extras", "params": "a <Array>   the array to iterate, f <Function>   the function to execute on each item, o <Object>  Optional context object", "type": "method", "description": "Executes the supplied function on each item in the array.\nReturns a new array containing the items that the supplied\nfunction returned true for."}, {"name": "Array.find", "url": "YUI~array~extras.html#method_Array.find", "access": "", "host": "YUI~array~extras", "params": "a <Array>   the array to search, f <Function>   the function to execute on each item. \nIteration is stopped as soon as this function returns true\non an item., o <Object>  Optional context object", "type": "method", "description": "Executes the supplied function on each item in the array,\nsearching for the first item that matches the supplied\nfunction."}, {"name": "Array.grep", "url": "YUI~array~extras.html#method_Array.grep", "access": "", "host": "YUI~array~extras", "params": "a <Array>   a collection to iterate over, pattern <RegExp>   The regular expression to test against \neach item", "type": "method", "description": "Iterates over an array, returning a new array of all the elements\nthat match the supplied regular expression"}, {"name": "Array.lastIndexOf", "url": "YUI~array~extras.html#method_Array.lastIndexOf", "access": "", "host": "YUI~array~extras", "params": "a <Array>   the array to search, val <Object>  the value to search for", "type": "method", "description": "Returns the index of the last item in the array\nthat contains the specified value, -1 if the\nvalue isn't found."}, {"name": "Array.map", "url": "YUI~array~extras.html#method_Array.map", "access": "", "host": "YUI~array~extras", "params": "a <Array>   the array to iterate, f <Function>   the function to execute on each item, o <Object>  Optional context object", "type": "method", "description": "Executes the supplied function on each item in the array."}, {"name": "Array.partition", "url": "YUI~array~extras.html#method_Array.partition", "access": "", "host": "YUI~array~extras", "params": "a <Array>   a collection to iterate over, o <Object>  Optional execution context of f.", "type": "method", "description": "Partitions an array into two new arrays, one with the items\nthat match the supplied function, and one with the items that\ndo not."}, {"name": "Array.reduce", "url": "YUI~array~extras.html#method_Array.reduce", "access": "", "host": "YUI~array~extras", "params": "a <Array>   the array to iterate, init <Object>  The initial value to start from, f <Function>   the function to execute on each item. It\nis responsible for returning the updated value of the\ncomputation., o <Object>  Optional context object", "type": "method", "description": "Executes the supplied function on each item in the array.\nReduce \"folds\" the array into a single value."}, {"name": "Array.reject", "url": "YUI~array~extras.html#method_Array.reject", "access": "", "host": "YUI~array~extras", "params": "a <Array>   the array to iterate, f <Function>   the function to execute on each item, o <Object>  Optional context object", "type": "method", "description": "The inverse of filter. Executes the supplied function on each item. \nReturns a new array containing the items that the supplied\nfunction returned *false* for."}, {"name": "Array.unique", "url": "YUI~array~extras.html#method_Array.unique", "access": "", "host": "YUI~array~extras", "params": "a <Array>   the array to find the subset of uniques for, sort <bool>   flag to denote if the array is sorted or not. Defaults to false, the more general operation", "type": "method", "description": "Returns a copy of the array with the duplicate entries removed"}, {"name": "Array.zip", "url": "YUI~array~extras.html#method_Array.zip", "access": "", "host": "YUI~array~extras", "params": "a <Array>   a collection to iterate over, a2 <Array>   another collection whose members will be \npaired with members of the first parameter", "type": "method", "description": "Creates an array of arrays by pairing the corresponding\nelements of two arrays together into a new array."}, {"name": "arrow", "url": "OverlayContextPanel.html#config_arrow", "access": "", "host": "OverlayContextPanel", "params": "", "type": "config", "description": "Position where the arrow will be placed. See\n<a href=\"OverlayContextPanel.html#config_showArrow\">showArrow</a>. If it's\nnot set, it will get the value set on the\n<a href=\"OverlayContext.html#config_align\">align</a> point. Here is a\nlist of valid arrows 'bc', 'bl', 'br', 'cc', 'lb', 'lc', 'lt', 'rb',\n'rc', 'rl'."}, {"name": "arrowChange", "url": "OverlayContextPanel.html#event_arrowChange", "access": "", "host": "OverlayContextPanel", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'arrow' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "arrowLeftEl", "url": "ImageViewer.html#config_arrowLeftEl", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "The element to be used as arrow left."}, {"name": "arrowLeftElChange", "url": "ImageViewer.html#event_arrowLeftElChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'arrowLeftEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "arrowRightEl", "url": "ImageViewer.html#config_arrowRightEl", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "The element to be used as arrow right."}, {"name": "arrowRightElChange", "url": "ImageViewer.html#event_arrowRightElChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'arrowRightEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "async", "url": "CustomEvent.html#property_async", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "fireOnce listeners will fire syncronously unless async\nis set to true"}, {"name": "asyncMode", "url": "DataSource.Get.html#config_asyncMode", "access": "", "host": "DataSource.Get", "params": "", "type": "config", "description": "Defines request/response management in the following manner:\n<dl>\n<!--<dt>queueRequests</dt>\n<dd>If a request is already in progress, wait until response is\nreturned before sending the next request.</dd>\n<dt>cancelStaleRequests</dt>\n<dd>If a request is already in progress, cancel it before\nsending the next request.</dd>-->\n<dt>ignoreStaleResponses</dt>\n<dd>Send all requests, but handle only the response for the most\nrecently sent request.</dd>\n<dt>allowAll</dt>\n<dd>Send all requests and handle all responses.</dd>\n</dl>"}, {"name": "asyncModeChange", "url": "DataSource.Get.html#event_asyncModeChange", "access": "", "host": "DataSource.Get", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'asyncMode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "AsyncQueue.defaults", "url": "AsyncQueue.html#property_AsyncQueue.defaults", "access": "", "host": "AsyncQueue", "params": "", "type": "property", "description": "<p>Static default values used to populate callback configuration properties.\nPreconfigured defaults include:</p>\n<ul>\n<li><code>autoContinue</code>: <code>true</code></li>\n<li><code>iterations</code>: 1</li>\n<li><code>timeout</code>: 10 (10ms between callbacks)</li>\n<li><code>until</code>: (function to run until iterations &lt;= 0)</li>\n</ul>"}, {"name": "A.TreeNode.nodeTypes", "url": "TreeNode.html#property_A.TreeNode.nodeTypes", "access": "", "host": "TreeNode", "params": "", "type": "property", "description": "TreeNode types hash map.\n<pre><code>A.TreeNode.nodeTypes = {\ntask: A.TreeNodeTask,\ncheck: A.TreeNodeCheck,\nnode: A.TreeNode,\nio: A.TreeNodeIO\n};</code></pre>"}, {"name": "attach", "url": "Event.html#method_attach", "access": "", "host": "Event", "params": "type <String>      The type of event to append, fn <Function>         The method the event invokes, el <String|HTMLElement|Array|NodeList>  An id, an element \nreference, or a collection of ids and/or elements to assign the \nlistener to., context <Object>  optional context object, args <Boolean|object>  0..n arguments to pass to the callback", "type": "method", "description": "Adds an event listener"}, {"name": "attaching", "url": "Loader.html#property_attaching", "access": "", "host": "Loader", "params": "", "type": "property", "description": "A list of modules to attach to the YUI instance when complete.\nIf not supplied, the sorted list of dependencies are applied."}, {"name": "_attachKeyHandler", "url": "plugin.NodeFocusManager.html#method__attachKeyHandler", "access": "protected", "host": "plugin.NodeFocusManager", "params": "", "type": "method", "description": "Attaches the \"key\" event handlers used to support the \"keys\"\nattribute."}, {"name": "attr", "url": "A.Node.html#method_attr", "access": "", "host": "A.Node", "params": "name <String>  The name of the attribute, value <String>  The value of the attribute to be set. Optional.", "type": "method", "description": "<p>Get or Set the value of an attribute for the first element in the\nset of matched elements. If only the <code>name</code> is passed it\nworks as a getter.</p>\nExample:\n<pre><code>var node = A.one('#nodeId');\nnode.attr('title', 'Setting a new title attribute');\n// Alert the value of the title attribute: 'Setting a new title attribute'\nalert( node.attr('title') );\n</code></pre>"}, {"name": "attrAdded", "url": "Attribute.html#method_attrAdded", "access": "", "host": "Attribute", "params": "name <String>  The name of the attribute to check.", "type": "method", "description": "Checks if the given attribute has been added to the host"}, {"name": "Attribute._ATTR_CFG", "url": "Attribute.html#property_Attribute._ATTR_CFG", "access": "protected", "host": "Attribute", "params": "", "type": "property", "description": "The list of properties which can be configured for \neach attribute (e.g. setter, getter, writeOnce etc.).\nThis property is used internally as a whitelist for faster\nY.mix operations."}, {"name": "Attribute.INVALID_VALUE", "url": "Attribute.html#property_Attribute.INVALID_VALUE", "access": "", "host": "Attribute", "params": "", "type": "property", "description": "<p>The value to return from an attribute setter in order to prevent the set from going through.</p>\n<p>You can return this value from your setter if you wish to combine validator and setter \nfunctionality into a single setter function, which either returns the massaged value to be stored or \nAttribute.INVALID_VALUE to prevent invalid values from being stored.</p>"}, {"name": "ATTRS", "url": "Node.html#property_ATTRS", "access": "", "host": "Node", "params": "", "type": "property", "description": "Static collection of configuration attributes for special handling"}, {"name": "ATTRS", "url": "SliderValueRange.html#property_ATTRS", "access": "protected", "host": "SliderValueRange", "params": "", "type": "property", "description": "Attributes that will be added onto host class."}, {"name": "ATTRS", "url": "YUI.html#property_ATTRS", "access": "protected", "host": "YUI", "params": "", "type": "property", "description": "Plugin attributes."}, {"name": "augment", "url": "YUI~oop.html#method_augment", "access": "", "host": "YUI~oop", "params": "r <Function>   the object to receive the augmentation, s <Function>   the object that supplies the properties to augment, ov <boolean>   if true, properties already on the receiver\nwill be overwritten if found on the supplier., wl <string[]>   a whitelist.  If supplied, only properties in \nthis list will be applied to the receiver., args <Array | Any>   arg or arguments to apply to the supplier\nconstructor when initializing.", "type": "method", "description": "Applies prototype properties from the supplier to the receiver.\nThe receiver can be a constructor or an instance."}, {"name": "AutoComplete.ATTRS", "url": "AutoComplete.html#property_AutoComplete.ATTRS", "access": "", "host": "AutoComplete", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the AutoComplete."}, {"name": "AutoComplete.NAME", "url": "AutoComplete.html#property_AutoComplete.NAME", "access": "", "host": "AutoComplete", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "autoHide", "url": "Resize.html#config_autoHide", "access": "", "host": "Resize", "params": "", "type": "config", "description": "False to ensure that the resize handles are always visible, true to\ndisplay them only when the user mouses over the resizable borders."}, {"name": "autoHideChange", "url": "Resize.html#event_autoHideChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'autoHide' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "autoHighlight", "url": "AutoComplete.html#config_autoHighlight", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "Automatically highlight the first item in the list when the results are\nmade visible."}, {"name": "autoHighlightChange", "url": "AutoComplete.html#event_autoHighlightChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'autoHighlight' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "autoLoad", "url": "IORequest.html#config_autoLoad", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "If <code>true</code> invoke the\n<a href=\"IORequest.html#method_start\">start</a> method automatically,\ninitializing the IO transaction."}, {"name": "autoLoadChange", "url": "IORequest.html#event_autoLoadChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'autoLoad' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "autoPlay", "url": "ImageGallery.html#config_autoPlay", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "If <code>true</code> the slide show will be played when the\nImageGallery is displayed."}, {"name": "autoPlayChange", "url": "ImageGallery.html#event_autoPlayChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'autoPlay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_autoStart", "url": "IORequest.html#method__autoStart", "access": "protected", "host": "IORequest", "params": "", "type": "method", "description": "Invoke the <code>start</code> method (autoLoad attribute)."}, {"name": "_autoStart", "url": "A.Plugin.IO.html#method__autoStart", "access": "protected", "host": "A.Plugin.IO", "params": "", "type": "method", "description": "Invoke the <code>start</code> method (autoLoad attribute)."}, {"name": "autoSubmenuDisplay", "url": "plugin.NodeMenuNav.html#config_autoSubmenuDisplay", "access": "", "host": "plugin.NodeMenuNav", "params": "", "type": "config", "description": "Boolean indicating if submenus are automatically made visible when the \nuser mouses over the menu's items."}, {"name": "autoSubmenuDisplayChange", "url": "plugin.NodeMenuNav.html#event_autoSubmenuDisplayChange", "access": "", "host": "plugin.NodeMenuNav", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'autoSubmenuDisplay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "available", "url": "YUI.html#event_available", "access": "", "host": "YUI", "params": "type <string>   'available', fn <function>   the callback function to execute., el <string|HTMLElement|collection>   the element(s) to attach, context <Object>  optional argument that specifies what 'this' refers to., args* <Object>  0..n additional arguments to pass on to the callback function.\nThese arguments will be added after the event object.", "type": "event", "description": "Executes the callback as soon as the specified element \nis detected in the DOM."}, {"name": "axis", "url": "SliderBase.html#property_axis", "access": "protected", "host": "SliderBase", "params": "", "type": "property", "description": "The configured axis, stored for fast lookup since it's a writeOnce\nattribute.  This is for use by extension classes.  For\nimplementation code, use <code>get( &quot;axis&quot; )</code> for\nauthoritative source.  Never write to this property."}, {"name": "axis", "url": "SliderBase.html#config_axis", "access": "", "host": "SliderBase", "params": "", "type": "config", "description": "Axis upon which the Slider's thumb moves.  &quot;x&quot; for\nhorizontal, &quot;y&quot; for vertical."}, {"name": "axis", "url": "YUI.html#config_axis", "access": "", "host": "YUI", "params": "", "type": "config", "description": "Which movement axis to monitor for value association.  Allowable\nvalues are &quot;x&quot; and &quot;y&quot;.  This will default based\non the host Drag instance's configured <code>stickX</code> or\n<code>stickY</code> (via DDConstrained config), or &quot;x&quot; if\nneither is defined."}, {"name": "axisChange", "url": "SliderBase.html#event_axisChange", "access": "", "host": "SliderBase", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'axis' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "axisChange", "url": "YUI.html#event_axisChange", "access": "", "host": "YUI", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'axis' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "backBoth", "url": "Easing.html#method_backBoth", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation, s <Number>  Overshoot (optional)", "type": "method", "description": "Backtracks slightly, then reverses direction, overshoots end, \nthen reverses and comes back to end."}, {"name": "background", "url": "OverlayMask.html#config_background", "access": "", "host": "OverlayMask", "params": "", "type": "config", "description": "Background color of the mask."}, {"name": "backgroundChange", "url": "OverlayMask.html#event_backgroundChange", "access": "", "host": "OverlayMask", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'background' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "backIn", "url": "Easing.html#method_backIn", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation, s <Number>  Overshoot (optional)", "type": "method", "description": "Backtracks slightly, then reverses direction and moves to end."}, {"name": "backOut", "url": "Easing.html#method_backOut", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation, s <Number>  Overshoot (optional)", "type": "method", "description": "Overshoots end, then reverses and comes back to end."}, {"name": "base", "url": "Loader.html#property_base", "access": "", "host": "Loader", "params": "", "type": "property", "description": "The base directory."}, {"name": "base", "url": "config.html#property_base", "access": "", "host": "config", "params": "", "type": "property", "description": "Base directory for dynamic loading"}, {"name": "Base.ATTRS", "url": "Base.html#property_Base.ATTRS", "access": "", "host": "Base", "params": "", "type": "property", "description": "The default set of attributes which will be available for instances of this class, and \ntheir configuration. In addition to the configuration properties listed by \nAttribute's <a href=\"Attribute.html#method_addAttr\">addAttr</a> method, the attribute \ncan also be configured with a \"cloneDefaultValue\" property, which defines how the statically\ndefined value field should be protected (\"shallow\", \"deep\" and false are supported values). \nBy default if the value is an object literal or an array it will be \"shallow\" cloned, to \nprotect the default value."}, {"name": "Base.build", "url": "Base.html#method_Base.build", "access": "", "host": "Base", "params": "name <Function>  The name of the new class. Used to defined the NAME property for the new class., main <Function>  The main class on which to base the built class, extensions <Function[]>  The set of extension classes which will be\naugmented/aggregated to the built class., cfg <Object>  Optional. Build configuration for the class (see description).", "type": "method", "description": "<p>\nBuilds a custom constructor function (class) from the\nmain function, and array of extension functions (classes)\nprovided. The NAME field for the constructor function is \ndefined by the first argument passed in.\n</p>\n<p>\nThe cfg object supports the following properties\n</p>\n<dl>\n<dt>dynamic &#60;boolean&#62;</dt>\n<dd>\n<p>If true (default), a completely new class\nis created which extends the main class, and acts as the \nhost on which the extension classes are augmented.</p>\n<p>If false, the extensions classes are augmented directly to\nthe main class, modifying the main class' prototype.</p>\n</dd>\n<dt>aggregates &#60;String[]&#62;</dt>\n<dd>An array of static property names, which will get aggregated\non to the built class, in addition to the default properties build \nwill always aggregate as defined by the main class' static _buildCfg\nproperty.\n</dd>\n</dl>"}, {"name": "Base.create", "url": "Base.html#method_Base.create", "access": "", "host": "Base", "params": "name <Function>  The name of the newly created class. Used to defined the NAME property for the new class., main <Function>  The base class which the new class should extend. This class needs to be Base or a class derived from base (e.g. Widget)., extensions <Function[]>  The list of extensions which will be mixed into the built class.", "type": "method", "description": "<p>Creates a new class (constructor function) which extends the base class passed in as the second argument, \nand mixes in the array of extensions provided.</p>\n<p>Prototype properties or methods can be added to the new class, using the px argument (similar to Y.extend).</p>\n<p>Static properties or methods can be added to the new class, using the sx argument (similar to Y.extend).</p>\n<p>\n</p>"}, {"name": "Base.mix", "url": "Base.html#method_Base.mix", "access": "", "host": "Base", "params": "main <Function>  The existing class into which the extensions should be mixed.  The class needs to be Base or class derived from base (e.g. Widget), extensions <Function[]>  The set of extension classes which will mixed into the existing main class.", "type": "method", "description": "<p>Mixes in a list of extensions to an existing class.</p>"}, {"name": "baseName", "url": "DatePickerSelect.html#config_baseName", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "A basename to identify the select elements from this\nDatePickerSelect."}, {"name": "Base.NAME", "url": "Base.html#property_Base.NAME", "access": "", "host": "Base", "params": "", "type": "property", "description": "<p>\nThe string to be used to identify instances of \nthis class, for example in prefixing events.\n</p>\n<p>\nClasses extending Base, should define their own\nstatic NAME property, which should be camelCase by\nconvention (e.g. MyClass.NAME = \"myClass\";).\n</p>"}, {"name": "baseNameChange", "url": "DatePickerSelect.html#event_baseNameChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'baseName' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Base.plug", "url": "Base.html#method_Base.plug", "access": "", "host": "Base", "params": "", "type": "method", "description": "Alias for <a href=\"Plugin.Host.html#method_Plugin.Host.plug\">Plugin.Host.plug</a>. See aliased \nmethod for argument and return value details."}, {"name": "Base.unplug", "url": "Base.html#method_Base.unplug", "access": "", "host": "Base", "params": "", "type": "method", "description": "Alias for <a href=\"Plugin.Host.html#method_Plugin.Host.unplug\">Plugin.Host.unplug</a>. See the \naliased method for argument and return value details."}, {"name": "before", "url": "Do.html#method_before", "access": "", "host": "Do", "params": "fn <Function>   the function to execute, obj <Object>  the object hosting the method to displace, sFn <string>   the name of the method to displace, c <Object>  The execution context for fn, arg* <mixed>   0..n additional arguments to supply to the subscriber\nwhen the event fires.", "type": "method", "description": "Execute the supplied method before the specified function"}, {"name": "before", "url": "EventTarget.html#method_before", "access": "", "host": "EventTarget", "params": "", "type": "method", "description": "Executes the callback before a DOM event, custom event\nor method.  If the first argument is a function, it\nis assumed the target is a method.  For DOM and custom\nevents, this is an alias for Y.on.\nFor DOM and custom events:\ntype, callback, context, 0-n arguments\nFor methods:\ncallback, object (method host), methodName, context, 0-n arguments"}, {"name": "_beforeDefDataFn\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n</dl>", "url": "DataSourceArraySchema.html#method__beforeDefDataFn\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n</dl>", "access": "protected", "host": "DataSourceArraySchema", "params": "", "type": "method", "description": "Parses raw data into a normalized response."}, {"name": "_beforeDefDataFn\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n</dl>", "url": "DataSourceJSONSchema.html#method__beforeDefDataFn\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n</dl>", "access": "protected", "host": "DataSourceJSONSchema", "params": "", "type": "method", "description": "Parses raw data into a normalized response."}, {"name": "_beforeDefDataFn\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n</dl>", "url": "DataSourceXMLSchema.html#method__beforeDefDataFn\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n</dl>", "access": "protected", "host": "DataSourceXMLSchema", "params": "", "type": "method", "description": "Parses raw data into a normalized response."}, {"name": "_beforeDefDataFn\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n</dl>", "url": "DataSourceTextSchema.html#method__beforeDefDataFn\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n</dl>", "access": "protected", "host": "DataSourceTextSchema", "params": "", "type": "method", "description": "Parses raw data into a normalized response."}, {"name": "_beforeDefRequestFn", "url": "DataSourceCache.html#method__beforeDefRequestFn", "access": "protected", "host": "DataSourceCache", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object.</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n</dl>", "type": "method", "description": "First look for cached response, then send request to live data."}, {"name": "_beforeDefResponseFn", "url": "DataSourceCache.html#method__beforeDefResponseFn", "access": "protected", "host": "DataSourceCache", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n<dt>response (Object)</dt> <dd>Normalized response object with the following properties:\n<dl>\n<dt>cached (Object)</dt> <dd>True when response is cached.</dd>\n<dt>results (Object)</dt> <dd>Parsed results.</dd>\n<dt>meta (Object)</dt> <dd>Parsed meta data.</dd>\n<dt>error (Object)</dt> <dd>Error object.</dd>\n</dl>\n</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n</dl>", "type": "method", "description": "Adds data to cache before returning data."}, {"name": "_beforeHideOnChange", "url": "OverlayContext.html#method__beforeHideOnChange", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Fires before the <a href=\"OverlayContext.html#config_hideOn\">hideOn</a>\nattribute change."}, {"name": "beforeHostMethod", "url": "Plugin.Base.html#method_beforeHostMethod", "access": "", "host": "Plugin.Base", "params": "The <String>  name of the method to inject the function before., fn <Function>  The function to inject., context <Object>  The execution context. Defaults to the plugin instance.", "type": "method", "description": "Injects a function to be executed before a given method on host object.\nThe function will be detached when the plugin is unplugged."}, {"name": "_beforeSetState", "url": "Paginator.html#method__beforeSetState", "access": "protected", "host": "Paginator", "params": "event <EventFacade> ", "type": "method", "description": "Fires before the value of the\n<a href=\"Paginator.html#config_state\">state</a> attribute change."}, {"name": "_beforeShow", "url": "OverlayContextPanel.html#method__beforeShow", "access": "protected", "host": "OverlayContextPanel", "params": "event <EventFacade> ", "type": "method", "description": "Fires before show the OverlayContextPanel."}, {"name": "_beforeShowOnChange", "url": "OverlayContext.html#method__beforeShowOnChange", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Fires before the <a href=\"OverlayContext.html#config_showOn\">showOn</a>\nattribute change."}, {"name": "_beforeTriggerChange", "url": "OverlayContext.html#method__beforeTriggerChange", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Fires before the <a href=\"OverlayContext.html#config_trigger\">trigger</a>\nattribute change."}, {"name": "begin", "url": "Test.Runner.html#event_begin", "access": "", "host": "Test.Runner", "params": "", "type": "event", "description": "Fires when the run() method is called."}, {"name": "behaviors", "url": "Anim.html#property_behaviors", "access": "", "host": "Anim", "params": "", "type": "property", "description": "Bucket for custom getters and setters"}, {"name": "bgUrl", "url": "ImgLoadImgObj.html#config_bgUrl", "access": "", "host": "ImgLoadImgObj", "params": "", "type": "config", "description": "Background URL for the image.\nFor an image whose URL is specified by \"<code>background-image</code>\" in the element's style."}, {"name": "bgUrlChange", "url": "ImgLoadImgObj.html#event_bgUrlChange", "access": "", "host": "ImgLoadImgObj", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'bgUrl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "bind", "url": "YUI~oop.html#method_bind", "access": "", "host": "YUI~oop", "params": "f <Function|String>   the function to bind, or a function name\nto execute on the context object, c <Object>  the execution context, args* <Object>  0..n arguments to include before the arguments the \nfunction is executed with.", "type": "method", "description": "Returns a function that will execute the supplied function in the\nsupplied object's context, optionally adding any additional\nsupplied parameters to the beginning of the arguments collection the \nsupplied to the function."}, {"name": "_bindAOP", "url": "ParseContent.html#method__bindAOP", "access": "protected", "host": "ParseContent", "params": "", "type": "method", "description": "Bind listeners on the <code>insert</code> and <code>setContent</code>\nmethods of the Node instance where you are plugging the ParseContent.\nThese listeners are responsible for intercept the HTML passed and parse\nthem."}, {"name": "_bindClickableRail", "url": "ClickableRail.html#method__bindClickableRail", "access": "protected", "host": "ClickableRail", "params": "", "type": "method", "description": "Attaches DOM event subscribers to support rail interaction."}, {"name": "_bindDOM", "url": "Widget.html#method__bindDOM", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Sets up DOM listeners, on elements rendered by the widget."}, {"name": "_bindDOMEvents", "url": "Paginator.html#method__bindDOMEvents", "access": "protected", "host": "Paginator", "params": "", "type": "method", "description": "Bind DOM events on the Paginator UI."}, {"name": "_bindDragDrop", "url": "TreeViewDD.html#method__bindDragDrop", "access": "protected", "host": "TreeViewDD", "params": "", "type": "method", "description": "Bind DragDrop events."}, {"name": "_bindOverlayMaskUI", "url": "LoadingMask.html#method__bindOverlayMaskUI", "access": "protected", "host": "LoadingMask", "params": "", "type": "method", "description": "Bind events to the\n<a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>."}, {"name": "_bindPaginatorUI", "url": "TreeNodeIO.html#method__bindPaginatorUI", "access": "protected", "host": "TreeNodeIO", "params": "", "type": "method", "description": "Bind events to the paginator \"show more\" link."}, {"name": "_bindParseContent", "url": "A.Plugin.IO.html#method__bindParseContent", "access": "protected", "host": "A.Plugin.IO", "params": "", "type": "method", "description": "Bind the ParseContent plugin on the <code>instance</code>."}, {"name": "_bindSelectEvents", "url": "DatePickerSelect.html#method__bindSelectEvents", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Bind events on each select element (change, keypress, etc)."}, {"name": "_bindThumbDD", "url": "SliderBase.html#method__bindThumbDD", "access": "protected", "host": "SliderBase", "params": "", "type": "method", "description": "Makes the thumb draggable and constrains it to the rail."}, {"name": "_bindToolbarUI", "url": "ImageGallery.html#method__bindToolbarUI", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Bind the Toolbar UI for the play and pause buttons."}, {"name": "bindUI", "url": "Plugin.ConsoleFilters.html#method_bindUI", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "method", "description": "Binds to checkbox click events and internal attribute change events to\nmaintain the UI state."}, {"name": "bindUI", "url": "Toolbar.html#method_bindUI", "access": "protected", "host": "Toolbar", "params": "", "type": "method", "description": "Bind the events on the Toolbar UI. Lifecycle."}, {"name": "bindUI", "url": "Calendar.html#method_bindUI", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Bind the events on the Calendar UI. Lifecycle."}, {"name": "bindUI", "url": "DatePickerSelect.html#method_bindUI", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Bind the events on the DatePickerSelect UI. Lifecycle."}, {"name": "bindUI", "url": "LoadingMask.html#method_bindUI", "access": "protected", "host": "LoadingMask", "params": "", "type": "method", "description": "Bind the events on the LoadingMask UI. Lifecycle."}, {"name": "bindUI", "url": "Editable.html#method_bindUI", "access": "protected", "host": "Editable", "params": "", "type": "method", "description": "Bind the events on the Editable UI. Lifecycle."}, {"name": "bindUI", "url": "Textboxlist.html#method_bindUI", "access": "protected", "host": "Textboxlist", "params": "", "type": "method", "description": "Bind the events on the Textboxlist UI. Lifecycle."}, {"name": "bindUI", "url": "Resize.html#method_bindUI", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Bind the events on the Resize UI. Lifecycle."}, {"name": "bindUI", "url": "Rating.html#method_bindUI", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Bind the events on the Rating UI. Lifecycle."}, {"name": "bindUI", "url": "Paginator.html#method_bindUI", "access": "protected", "host": "Paginator", "params": "", "type": "method", "description": "Bind the events on the Paginator UI. Lifecycle."}, {"name": "bindUI", "url": "ColorPicker.html#method_bindUI", "access": "protected", "host": "ColorPicker", "params": "", "type": "method", "description": "Bind the events on the ColorPicker UI. Lifecycle."}, {"name": "_bindUI", "url": "Widget.html#method__bindUI", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Sets up DOM and CustomEvent listeners for the widget."}, {"name": "bindUI", "url": "Widget.html#method_bindUI", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Configures/Sets up listeners to bind Widget State to UI/DOM\nThis method is not called by framework and is not chained \nautomatically for the class hierarchy."}, {"name": "bindUI", "url": "LiveSearch.html#method_bindUI", "access": "protected", "host": "LiveSearch", "params": "", "type": "method", "description": "Bind the events on the LiveSearch UI. Lifecycle."}, {"name": "bindUI", "url": "ImageViewer.html#method_bindUI", "access": "protected", "host": "ImageViewer", "params": "", "type": "method", "description": "Bind the events on the ImageViewer UI. Lifecycle."}, {"name": "bindUI", "url": "ImageGallery.html#method_bindUI", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Bind the events on the ImageGallery UI. Lifecycle."}, {"name": "bindUI", "url": "SliderBase.html#method_bindUI", "access": "protected", "host": "SliderBase", "params": "", "type": "method", "description": "Creates the Y.DD.Drag instance used to handle the thumb movement and\nbinds Slider interaction to the configured value model."}, {"name": "bindUI", "url": "CharCounter.html#method_bindUI", "access": "protected", "host": "CharCounter", "params": "", "type": "method", "description": "Bind the events on the CharCounter UI. Lifecycle."}, {"name": "bindUI", "url": "Dialog.html#method_bindUI", "access": "protected", "host": "Dialog", "params": "", "type": "method", "description": "Bind the events on the Dialog UI. Lifecycle."}, {"name": "bindUI", "url": "Console.html#method_bindUI", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Set up event listeners to wire up the UI to the internal state."}, {"name": "bindUI", "url": "Plugin.Console.html#method_bindUI", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Set up event listeners to wire up the UI to the internal state."}, {"name": "bindUI", "url": "OverlayContext.html#method_bindUI", "access": "protected", "host": "OverlayContext", "params": "", "type": "method", "description": "Bind the events on the OverlayContext UI. Lifecycle."}, {"name": "bindUI", "url": "OverlayContextPanel.html#method_bindUI", "access": "protected", "host": "OverlayContextPanel", "params": "", "type": "method", "description": "Bind the events on the OverlayContextPanel UI. Lifecycle."}, {"name": "bindUI", "url": "OverlayMask.html#method_bindUI", "access": "protected", "host": "OverlayMask", "params": "", "type": "method", "description": "Bind the events on the OverlayMask UI. Lifecycle."}, {"name": "bindUI", "url": "AutoComplete.html#method_bindUI", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Bind the events on the AutoComplete UI. Lifecycle."}, {"name": "bindUI", "url": "TreeNode.html#method_bindUI", "access": "protected", "host": "TreeNode", "params": "", "type": "method", "description": "Bind the events on the TreeNode UI. Lifecycle."}, {"name": "bindUI", "url": "TreeNodeIO.html#method_bindUI", "access": "protected", "host": "TreeNodeIO", "params": "", "type": "method", "description": "Bind the events on the TreeNodeIO UI. Lifecycle."}, {"name": "bindUI", "url": "TreeView.html#method_bindUI", "access": "protected", "host": "TreeView", "params": "", "type": "method", "description": "Bind the events on the TreeView UI. Lifecycle."}, {"name": "bindUI", "url": "TreeViewDD.html#method_bindUI", "access": "protected", "host": "TreeViewDD", "params": "", "type": "method", "description": "Bind the events on the TreeViewDD UI. Lifecycle."}, {"name": "bindUI", "url": "Tooltip.html#method_bindUI", "access": "protected", "host": "Tooltip", "params": "", "type": "method", "description": "Bind the events on the Tooltip UI. Lifecycle."}, {"name": "bindUI", "url": "A.Plugin.IO.html#method_bindUI", "access": "protected", "host": "A.Plugin.IO", "params": "", "type": "method", "description": "Bind the events on the A.Plugin.IO UI. Lifecycle."}, {"name": "_bindUIParent", "url": "WidgetParent.html#method__bindUIParent", "access": "protected", "host": "WidgetParent", "params": "", "type": "method", "description": "Sets up DOM and CustomEvent listeners for the parent widget.\n<p>\nThis method in invoked after bindUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_bindUIPosConstrained", "url": "WidgetPositionConstrain.html#method__bindUIPosConstrained", "access": "protected", "host": "WidgetPositionConstrain", "params": "", "type": "method", "description": "Binds event listeners responsible for updating the UI state in response to \nWidget constrained positioning related state changes.\n<p>\nThis method is invoked after bindUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_bindUIPosition", "url": "WidgetPosition.html#method__bindUIPosition", "access": "protected", "host": "WidgetPosition", "params": "", "type": "method", "description": "Binds event listeners responsible for updating the UI state in response to \nWidget position related state changes.\n<p>\nThis method in invoked after bindUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_bindUIStack", "url": "WidgetStack.html#method__bindUIStack", "access": "protected", "host": "WidgetStack", "params": "", "type": "method", "description": "Binds event listeners responsible for updating the UI state in response to \nWidget stack related state changes.\n<p>\nThis method is invoked after bindUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_bindUIStack", "url": "WidgetPositionAlign.html#method__bindUIStack", "access": "protected", "host": "WidgetPositionAlign", "params": "", "type": "method", "description": "Binds event listeners responsible for updating the UI state in response to \nWidget extended positioning related state changes.\n<p>\nThis method is invoked after bindUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_bindUIStdMod", "url": "WidgetStdMod.html#method__bindUIStdMod", "access": "protected", "host": "WidgetStdMod", "params": "", "type": "method", "description": "Binds event listeners responsible for updating the UI state in response to \nWidget standard module related state changes.\n<p>\nThis method is invoked after bindUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_bindValueLogic", "url": "SliderBase.html#method__bindValueLogic", "access": "protected", "host": "SliderBase", "params": "", "type": "method", "description": "Stub implementation.  Override this (presumably in a class extension) to\ninitialize any value logic that depends on the presence of the Drag\ninstance."}, {"name": "_bindValueLogic", "url": "SliderValueRange.html#method__bindValueLogic", "access": "protected", "host": "SliderValueRange", "params": "", "type": "method", "description": "Override of stub method in SliderBase that is called at the end of\nits bindUI stage of render().  Subscribes to internal events to\ntrigger UI and related state updates."}, {"name": "_blockMouseEvent", "url": "plugin.NodeMenuNav.html#property__blockMouseEvent", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Boolean indicating whether or not to handle the \n\"mouseover\" event."}, {"name": "blur", "url": "Node.html#method_blur", "access": "", "host": "Node", "params": "", "type": "method", "description": "Passes through to DOM method."}, {"name": "blur", "url": "Widget.html#method_blur", "access": "", "host": "Widget", "params": "", "type": "method", "description": "Causes the Widget to lose focus by setting the \"focused\" attribute \nto \"false\""}, {"name": "blur", "url": "YUI.html#event_blur", "access": "", "host": "YUI", "params": "type <string>   'blur', fn <function>   the callback function to execute, o <string|HTMLElement|collection>   the element(s) to bind, context <Object>  optional context object, args <Object>  0..n additional arguments to provide to the listener.", "type": "event", "description": "Adds a DOM blur listener.  Uses the focusout event in IE, \nDOMFocusOut for Opera and Webkit, and the capture phase for Gecko so that\nthe event propagates in a way that enables event delegation."}, {"name": "blur", "url": "plugin.NodeFocusManager.html#method_blur", "access": "", "host": "plugin.NodeFocusManager", "params": "", "type": "method", "description": "Blurs the current active descendant and sets the \n<code>focused</code> attribute to false."}, {"name": "_body", "url": "Console.html#property__body", "access": "protected", "host": "Console", "params": "", "type": "property", "description": "Reference to the Node instance that will house the console messages."}, {"name": "_body", "url": "Plugin.Console.html#property__body", "access": "protected", "host": "Plugin.Console", "params": "", "type": "property", "description": "Reference to the Node instance that will house the console messages."}, {"name": "bodyContent", "url": "WidgetStdMod.html#config_bodyContent", "access": "", "host": "WidgetStdMod", "params": "", "type": "config", "description": "The content to be added to the body section. This will replace any existing content\nin the body. If you want to append, or insert new content, use the <a href=\"#method_setStdModContent\">setStdModContent</a> method."}, {"name": "bodyContent", "url": "Dialog.html#config_bodyContent", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "See <a href=\"WidgetStdMod.html#config_bodyContent\">WidgetStdMod bodyContent</a>."}, {"name": "bodyContentChange", "url": "WidgetStdMod.html#event_bodyContentChange", "access": "", "host": "WidgetStdMod", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "bodyContentChange", "url": "Dialog.html#event_bodyContentChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'bodyContent' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "bootstrap", "url": "config.html#property_bootstrap", "access": "", "host": "config", "params": "", "type": "property", "description": "Allows the YUI seed file to fetch the loader component and library\nmetadata to dynamically load additional dependencies."}, {"name": "borderStyle", "url": "Plugin.DDProxy.html#config_borderStyle", "access": "", "host": "Plugin.DDProxy", "params": "", "type": "config", "description": "The default border style for the border of the proxy. Default: 1px solid #808080"}, {"name": "borderStyleChange", "url": "Plugin.DDProxy.html#event_borderStyleChange", "access": "", "host": "Plugin.DDProxy", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'borderStyle' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "bounceBoth", "url": "Easing.html#method_bounceBoth", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation", "type": "method", "description": "Bounces off start and end."}, {"name": "bounceIn", "url": "Easing.html#method_bounceIn", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation", "type": "method", "description": "Bounce off of start."}, {"name": "bounceOut", "url": "Easing.html#method_bounceOut", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation", "type": "method", "description": "Bounces off end."}, {"name": "boundingBox", "url": "Widget.html#config_boundingBox", "access": "", "host": "Widget", "params": "", "type": "config", "description": "The outermost DOM node for the Widget, used for sizing and positioning \nof a Widget as well as a containing element for any decorator elements used \nfor skinning."}, {"name": "boundingBoxChange", "url": "Widget.html#event_boundingBoxChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'boundingBox' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "BOUNDING_TEMPLATE", "url": "Widget.html#property_BOUNDING_TEMPLATE", "access": "", "host": "Widget", "params": "", "type": "property", "description": "Property defining the markup template for bounding box."}, {"name": "BOUNDING_TEMPLATE", "url": "SliderBase.html#property_BOUNDING_TEMPLATE", "access": "", "host": "SliderBase", "params": "", "type": "property", "description": "Bounding box template that will contain the Slider's DOM subtree.  &lt;span&gt;s are used to support inline-block styling."}, {"name": "BOUNDING_TEMPLATE", "url": "TreeNode.html#property_BOUNDING_TEMPLATE", "access": "protected", "host": "TreeNode", "params": "", "type": "property", "description": "Replaced BOUNDING_TEMPLATE with NODE_BOUNDING_TEMPLATE."}, {"name": "bringToTop", "url": "OverlayManager.html#method_bringToTop", "access": "", "host": "OverlayManager", "params": "overlay <Overlay>  Instance of\n<a href=\"Overlay.html\">Overlay</a>.", "type": "method", "description": "Set the passed overlay zIndex to the highest value."}, {"name": "broadcast", "url": "CustomEvent.html#property_broadcast", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "If 0, this event does not broadcast.  If 1, the YUI instance is notified\nevery time this event fires.  If 2, the YUI instance and the YUI global\n(if event is enabled on the global) are notified every time this event\nfires."}, {"name": "bubble", "url": "EventTarget.html#method_bubble", "access": "", "host": "EventTarget", "params": "evt <Event.Custom>   the custom event to propagate", "type": "method", "description": "Propagate an event.  Requires the event-custom-complex module."}, {"name": "bubbleEvent", "url": "TreeData.html#method_bubbleEvent", "access": "", "host": "TreeData", "params": "eventType <String> , args <Array> , cancelBubbling <boolean> , stopActionPropagation <boolean> ", "type": "method", "description": "Bubble event to all parent nodes."}, {"name": "bubbles", "url": "DD.Drag.html#config_bubbles", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "Controls the default bubble parent for this Drag instance. Default: Y.DD.DDM. Set to false to disable bubbling. Use bubbleTargets in config"}, {"name": "bubbles", "url": "DD.Drop.html#config_bubbles", "access": "", "host": "DD.Drop", "params": "", "type": "config", "description": "Controls the default bubble parent for this Drop instance. Default: Y.DD.DDM. Set to false to disable bubbling. Use bubbleTargets in config."}, {"name": "bubbles", "url": "CustomEvent.html#property_bubbles", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "Specifies whether or not a subscriber can stop the event propagation\nvia stopPropagation(), stopImmediatePropagation(), or halt()\nEvents can only bubble if emitFacade is true."}, {"name": "bubblesChange", "url": "DD.Drag.html#event_bubblesChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'bubbles' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "bubblesChange", "url": "DD.Drop.html#event_bubblesChange", "access": "", "host": "DD.Drop", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'bubbles' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "buffer", "url": "DD.Scroll.html#config_buffer", "access": "", "host": "DD.Scroll", "params": "", "type": "config", "description": "The number of pixels from the edge of the screen to turn on scrolling. Default: 30"}, {"name": "buffer", "url": "Console.html#property_buffer", "access": "protected", "host": "Console", "params": "", "type": "property", "description": "Array of normalized message objects awaiting printing."}, {"name": "buffer", "url": "Plugin.Console.html#property_buffer", "access": "protected", "host": "Plugin.Console", "params": "", "type": "property", "description": "Array of normalized message objects awaiting printing."}, {"name": "bufferChange", "url": "DD.Scroll.html#event_bufferChange", "access": "", "host": "DD.Scroll", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'buffer' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_buildHandle", "url": "Resize.html#method__buildHandle", "access": "protected", "host": "Resize", "params": "handle <String>  Handle name ('t', 'tr', 'b', ...).", "type": "method", "description": "Creates the handle element based on the handle name and initialize the\nDragDrop on it."}, {"name": "button", "url": "DOMEventFacade.html#property_button", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "The button that was pushed."}, {"name": "button", "url": "AutoComplete.html#config_button", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "To use a button"}, {"name": "buttonChange", "url": "AutoComplete.html#event_buttonChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'button' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "ButtonItem.ATTRS", "url": "ButtonItem.html#property_ButtonItem.ATTRS", "access": "", "host": "ButtonItem", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the ButtonItem."}, {"name": "ButtonItem.HTML_PARSER", "url": "ButtonItem.html#property_ButtonItem.HTML_PARSER", "access": "", "host": "ButtonItem", "params": "", "type": "property", "description": "Object hash, defining how attribute values are to be parsed from\nmarkup contained in the widget's content box."}, {"name": "ButtonItem.NAME", "url": "ButtonItem.html#property_ButtonItem.NAME", "access": "", "host": "ButtonItem", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "buttonNode", "url": "DatePickerSelect.html#config_buttonNode", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "DOM Node to display the button of the DatePickerSelect. If not\nspecified try to query using HTML_PARSER an element inside\ncontentBox which matches <code>aui-buttonitem</code>."}, {"name": "buttonNodeChange", "url": "DatePickerSelect.html#event_buttonNodeChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'buttonNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "buttons", "url": "Dialog.html#config_buttons", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "<p>Array of object literals, each containing a set of properties\ndefining a button to be appended into the Dialog's footer. Each\nbutton object in the buttons array can have two properties:</p>\n<dl>\n<dt>text:</dt>\n<dd>\nThe text that will display on the face of the button. The text can include\nHTML, as long as it is compliant with HTML Button specifications.\n</dd>\n<dt>handler:</dt>\n<dd>\nA reference to a function that should fire when the button is clicked.\n(In this case scope of this function is always its Dialog instance.)\n</dd>\n</dl>"}, {"name": "buttonsChange", "url": "Dialog.html#event_buttonsChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'buttons' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "byId", "url": "DOM.html#method_byId", "access": "", "host": "DOM", "params": "id <String>  the id attribute, doc <Object>  optional The document to search. Defaults to current document", "type": "method", "description": "Returns the HTMLElement with the given ID (Wrapper for document.getElementById)."}, {"name": "cache", "url": "TreeNodeIO.html#config_cache", "access": "", "host": "TreeNodeIO", "params": "", "type": "config", "description": "Whether the current TreeNode should cache the loaded content or not."}, {"name": "cache", "url": "IORequest.html#config_cache", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "If <code>false</code> the current timestamp will be appended to the\nurl, avoiding the url to be cached."}, {"name": "cacheChange", "url": "TreeNodeIO.html#event_cacheChange", "access": "", "host": "TreeNodeIO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'cache' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "cacheChange", "url": "IORequest.html#event_cacheChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'cache' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "cached", "url": "YUI.html#method_cached", "access": "", "host": "YUI", "params": "source <function>   the function to memoize, cache <Object>  an optional cache seed, refetch <Object>  if supplied, this value is tested against the cached\nvalue.  If the values are equal, the wrapped function is executed again.", "type": "method", "description": "Returns a wrapper for a function which caches the\nreturn value of that function, keyed off of the combined \nargument values."}, {"name": "_cacheLimit", "url": "Plugin.ConsoleFilters.html#property__cacheLimit", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "property", "description": "Maximum number of entries to store in the message cache."}, {"name": "cacheLimit", "url": "Plugin.ConsoleFilters.html#config_cacheLimit", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "config", "description": "Maximum number of entries to store in the message cache.  Use this to\nlimit the memory footprint in environments with heavy log usage.\nBy default, there is no limit (Number.POSITIVE_INFINITY)."}, {"name": "cacheLimitChange", "url": "Plugin.ConsoleFilters.html#event_cacheLimitChange", "access": "", "host": "Plugin.ConsoleFilters", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'cacheLimit' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_cacheOffset", "url": "YUI.html#method__cacheOffset", "access": "protected", "host": "YUI", "params": "", "type": "method", "description": "Captures the current top left of the DD's constraining node or region to\navoid excessive DOM lookups at run time."}, {"name": "cacheRegion", "url": "Plugin.DDConstrained.html#config_cacheRegion", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "Should the region be cached for performace. Default: true"}, {"name": "cacheRegionChange", "url": "Plugin.DDConstrained.html#event_cacheRegionChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'cacheRegion' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "caja", "url": "UA.html#property_caja", "access": "", "host": "UA", "params": "", "type": "property", "description": "Google Caja version number or 0."}, {"name": "calculate", "url": "Loader.html#method_calculate", "access": "", "host": "Loader", "params": "o <Object>  optional options object, type <Object>  optional argument to prune modules", "type": "method", "description": "Calculates the dependency tree, the result is stored in the sorted \nproperty"}, {"name": "_calculateFactor", "url": "SliderValueRange.html#method__calculateFactor", "access": "protected", "host": "SliderValueRange", "params": "", "type": "method", "description": "Calculates and caches\n(range between max and min) / (rail length)\nfor fast runtime calculation of position -&gt; value."}, {"name": "_calculateFactor", "url": "YUI.html#method__calculateFactor", "access": "protected", "host": "YUI", "params": "", "type": "method", "description": "Calculates and caches (range between max and min) / (constraining node\nor region width or height) for fast runtime calculation of position\n-&gt; value."}, {"name": "calculateRange", "url": "Paginator.html#method_calculateRange", "access": "", "host": "Paginator", "params": "name <Type>  description", "type": "method", "description": "Create a range to display on the pageLinks, keep the current page on\ncenter."}, {"name": "Calendar.ATTRS", "url": "Calendar.html#property_Calendar.ATTRS", "access": "", "host": "Calendar", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the Calendar."}, {"name": "Calendar.NAME", "url": "Calendar.html#property_Calendar.NAME", "access": "", "host": "Calendar", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "callSWF", "url": "YAHOO.widget.SWF.html#method_callSWF", "access": "", "host": "YAHOO.widget.SWF", "params": "func <String>   the name of the function to call, args <Object>   the set of arguments to pass to the function.", "type": "method", "description": "Calls a specific function exposed by the SWF's\nExternalInterface."}, {"name": "cancel", "url": "Editable.html#method_cancel", "access": "", "host": "Editable", "params": "", "type": "method", "description": "Cancel the editable. Return to the original state."}, {"name": "cancel", "url": "Editable.html#event_cancel", "access": "", "host": "Editable", "params": "event <Event.Facade>  The cancel event.", "type": "event", "description": "Handles the cancel event."}, {"name": "cancel", "url": "DelayedTask.html#method_cancel", "access": "", "host": "DelayedTask", "params": "", "type": "method", "description": "Cancel the delayed task in case it's running (i.e., clearInterval from\nthe current running <a href=\"DelayedTask.html#property__id\">_id</a>)."}, {"name": "_cancelAutoHide", "url": "OverlayContext.html#method__cancelAutoHide", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Cancel hide event if the user does some interaction with the\nOverlayContext (focus, click or mouseover)."}, {"name": "cancelButton", "url": "Editable.html#config_cancelButton", "access": "", "host": "Editable", "params": "", "type": "config", "description": "<a href=\"ButtonItem.html\">ButtonItem</a> constructor Object for the\ncancelButton."}, {"name": "cancelButtonChange", "url": "Editable.html#event_cancelButtonChange", "access": "", "host": "Editable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'cancelButton' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_cancelHideSubmenuTimer", "url": "plugin.NodeMenuNav.html#method__cancelHideSubmenuTimer", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "method", "description": "Cancels the timer used to hide a submenu."}, {"name": "cancellableHide", "url": "OverlayContext.html#config_cancellableHide", "access": "", "host": "OverlayContext", "params": "", "type": "config", "description": "Cancel auto hide delay if the user interact with the Overlay\n(focus, click, mouseover)"}, {"name": "cancellableHideChange", "url": "OverlayContext.html#event_cancellableHideChange", "access": "", "host": "OverlayContext", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'cancellableHide' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_cancelPrintLoop", "url": "Console.html#method__cancelPrintLoop", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Clears the timeout for printing buffered messages."}, {"name": "_cancelPrintLoop", "url": "Plugin.Console.html#method__cancelPrintLoop", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Clears the timeout for printing buffered messages."}, {"name": "_cancelShowSubmenuTimer", "url": "plugin.NodeMenuNav.html#method__cancelShowSubmenuTimer", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "method", "description": "Cancels the timer used to show a submenu."}, {"name": "_cancelTimer", "url": "ImageGallery.html#method__cancelTimer", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Cancel the timer between slides."}, {"name": "_canFireCustomEvent", "url": "Rating.html#method__canFireCustomEvent", "access": "protected", "host": "Rating", "params": "event <EventFacade> ", "type": "method", "description": "Check if the Rating element can fire the custom events. Disabled\nelements won't fire nothing."}, {"name": "canReset", "url": "Rating.html#config_canReset", "access": "", "host": "Rating", "params": "", "type": "config", "description": "If <code>true</code> could be reseted (i.e., have no values\nselected)."}, {"name": "canResetChange", "url": "Rating.html#event_canResetChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'canReset' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "caption", "url": "ImageViewer.html#config_caption", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "The caption of the displayed image."}, {"name": "captionChange", "url": "ImageViewer.html#event_captionChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'caption' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "captionEl", "url": "ImageViewer.html#config_captionEl", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "The element to be used as caption."}, {"name": "captionElChange", "url": "ImageViewer.html#event_captionElChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'captionEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "captionFromTitle", "url": "ImageViewer.html#config_captionFromTitle", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "If <code>true</code> the <a\nhref=\"ImageViewer.html#config_caption\">caption</a> will be pulled\nfrom the title DOM attribute."}, {"name": "captionFromTitleChange", "url": "ImageViewer.html#event_captionFromTitleChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'captionFromTitle' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_categories", "url": "Plugin.ConsoleFilters.html#property__categories", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "property", "description": "The container node created to house the category filters."}, {"name": "category", "url": "Plugin.ConsoleFilters.html#config_category", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "config", "description": "<p>Map of entry categories to their visibility status.  Update a\nparticular category's visibility by setting the subattribute to true\n(visible) or false (hidden).</p>\n<p>For example, yconsole.filter.set('category.info', false) to hide\nlog entries with the category/logLevel of 'info'.</p>\n<p>Similarly, yconsole.filter.get('category.warn') will return a\nboolean indicating whether that category is currently being included\nin the UI.</p>\n<p>Unlike the YUI instance configuration's logInclude and logExclude\nproperties, filtered entries are only hidden from the UI, but\ncan be made visible again.</p>"}, {"name": "categoryChange", "url": "Plugin.ConsoleFilters.html#event_categoryChange", "access": "", "host": "Plugin.ConsoleFilters", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'category' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "cause", "url": "Assert.UnexpectedError.html#property_cause", "access": "", "host": "Assert.UnexpectedError", "params": "", "type": "property", "description": "The unexpected error that occurred."}, {"name": "center", "url": "Plugin.Align.html#method_center", "access": "", "host": "Plugin.Align", "params": "", "type": "method", "description": "Aligns the center of a node to the center of another node or region."}, {"name": "center", "url": "A.Node.html#method_center", "access": "", "host": "A.Node", "params": "centerWith <Node | String>  Node to center with", "type": "method", "description": "<p>Centralize the current Node instance with the passed\n<code>centerWith</code> Node, if not specified, the body will be\nused.</p>\nExample:\n<pre><code>var node = A.one('#nodeId');\n// Center the <code>node</code> with the <code>#container</code>.\nnode.center('#container');\n</code></pre>"}, {"name": "centered", "url": "ImageViewer.html#config_centered", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "If <code>true</code> the Overlay with the image will be positioned\non the center of the viewport."}, {"name": "centered", "url": "WidgetPositionAlign.html#method_centered", "access": "", "host": "WidgetPositionAlign", "params": "node <Node | String>  Optional. A node reference or selector string defining the node \ninside which the Widget is to be centered. If not passed in, the Widget will be centered in the \nviewport.", "type": "method", "description": "Centers the container in the viewport, or if a node is passed in,\nthe node."}, {"name": "centered", "url": "WidgetPositionAlign.html#config_centered", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "config", "description": "A convenience attribute, which can be used as a shortcut for the align attribute.\nIf set to true, the Widget is centered in the viewport. If set to a node reference or valid selector string,\nthe Widget will be centered within the node. If set the false, no center positioning is applied."}, {"name": "centeredChange", "url": "ImageViewer.html#event_centeredChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "centeredChange", "url": "WidgetPositionAlign.html#event_centeredChange", "access": "", "host": "WidgetPositionAlign", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'centered' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "centerMessage", "url": "LoadingMask.html#method_centerMessage", "access": "", "host": "LoadingMask", "params": "", "type": "method", "description": "Center the\n<a href=\"LoadingMask.html#config_messageEl\">messageEl</a> with the\n<a href=\"LoadingMask.html#config_target\">target</a> node."}, {"name": "cfg", "url": "IORequest.html#config_cfg", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "Object containing all the\n<a href=\"io.html#configattributes\">IO Configuration Attributes</a>.\nThis Object is passed to the <code>A.io</code> internally."}, {"name": "cfgChange", "url": "IORequest.html#event_cfgChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'cfg' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "changeHeightHandles", "url": "Resize.html#config_changeHeightHandles", "access": "", "host": "Resize", "params": "", "type": "config", "description": "Whether the handle being dragged can change the height."}, {"name": "changeHeightHandlesChange", "url": "Resize.html#event_changeHeightHandlesChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'changeHeightHandles' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "changeLeftHandles", "url": "Resize.html#config_changeLeftHandles", "access": "", "host": "Resize", "params": "", "type": "config", "description": "Whether the handle being dragged can change the left."}, {"name": "changeLeftHandlesChange", "url": "Resize.html#event_changeLeftHandlesChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'changeLeftHandles' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "changeRequest", "url": "Paginator.html#method_changeRequest", "access": "", "host": "Paginator", "params": "", "type": "method", "description": "Fires <a href=\"Paginator.html#event_changeRequest\">changeRequest</a>\nevent. This is the most important event because it's responsible to\nupdate the UI, invoked <code>.setState(newState)</code> to update the\nUI."}, {"name": "_changeRequest", "url": "ImageGallery.html#method__changeRequest", "access": "protected", "host": "ImageGallery", "params": "event <EventFacade> ", "type": "method", "description": "Change the UI when click on a thumbnail."}, {"name": "changeTopHandles", "url": "Resize.html#config_changeTopHandles", "access": "", "host": "Resize", "params": "", "type": "config", "description": "Whether the handle being dragged can change the top."}, {"name": "changeTopHandlesChange", "url": "Resize.html#event_changeTopHandlesChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'changeTopHandles' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "changeWidthHandles", "url": "Resize.html#config_changeWidthHandles", "access": "", "host": "Resize", "params": "", "type": "config", "description": "Whether the handle being dragged can change the width."}, {"name": "changeWidthHandlesChange", "url": "Resize.html#event_changeWidthHandlesChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'changeWidthHandles' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "charCode", "url": "DOMEventFacade.html#property_charCode", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "The charCode for key events.  Same as keyCode"}, {"name": "CharCounter.ATTRS", "url": "CharCounter.html#property_CharCounter.ATTRS", "access": "", "host": "CharCounter", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the CharCounter."}, {"name": "CharCounter.NAME", "url": "CharCounter.html#property_CharCounter.NAME", "access": "", "host": "CharCounter", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "charset", "url": "Loader.html#property_charset", "access": "", "host": "Loader", "params": "", "type": "property", "description": "The charset attribute for inserted nodes"}, {"name": "charset", "url": "config.html#property_charset", "access": "", "host": "config", "params": "", "type": "property", "description": "charset for dynamic nodes"}, {"name": "check", "url": "TreeNodeCheck.html#method_check", "access": "", "host": "TreeNodeCheck", "params": "", "type": "method", "description": "Check the current TreeNode."}, {"name": "check", "url": "TreeViewDD.html#method_check", "access": "", "host": "TreeViewDD", "params": "", "type": "method", "description": "Check the current TreeNode."}, {"name": "_checkConstrain", "url": "Resize.html#method__checkConstrain", "access": "protected", "host": "Resize", "params": "axis <String>  'top' or 'left', axisConstrain <String>  'bottom' or 'right', offset <String>  'offsetHeight' or 'offsetWidth'", "type": "method", "description": "Helper method to update the current values on\n<a href=\"Resize.html#property_info\">info</a> to respect the\nconstrain node."}, {"name": "checkContainerEl", "url": "TreeNodeCheck.html#config_checkContainerEl", "access": "", "host": "TreeNodeCheck", "params": "", "type": "config", "description": "Container element for the checkbox."}, {"name": "checkContainerEl", "url": "TreeViewDD.html#config_checkContainerEl", "access": "", "host": "TreeViewDD", "params": "", "type": "config", "description": "Container element for the checkbox."}, {"name": "checkContainerElChange", "url": "TreeNodeCheck.html#event_checkContainerElChange", "access": "", "host": "TreeNodeCheck", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'checkContainerEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "checkContainerElChange", "url": "TreeViewDD.html#event_checkContainerElChange", "access": "", "host": "TreeViewDD", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'checkContainerEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "checked", "url": "TreeNodeCheck.html#config_checked", "access": "", "host": "TreeNodeCheck", "params": "", "type": "config", "description": "Whether the TreeNode is checked or not."}, {"name": "checked", "url": "TreeViewDD.html#config_checked", "access": "", "host": "TreeViewDD", "params": "", "type": "config", "description": "Whether the TreeNode is checked or not."}, {"name": "checkedChange", "url": "TreeNodeCheck.html#event_checkedChange", "access": "", "host": "TreeNodeCheck", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'checked' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "checkedChange", "url": "TreeViewDD.html#event_checkedChange", "access": "", "host": "TreeViewDD", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'checked' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "checkEl", "url": "TreeNodeCheck.html#config_checkEl", "access": "", "host": "TreeNodeCheck", "params": "", "type": "config", "description": "Checkbox element."}, {"name": "checkEl", "url": "TreeViewDD.html#config_checkEl", "access": "", "host": "TreeViewDD", "params": "", "type": "config", "description": "Checkbox element."}, {"name": "checkElChange", "url": "TreeNodeCheck.html#event_checkElChange", "access": "", "host": "TreeNodeCheck", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'checkEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "checkElChange", "url": "TreeViewDD.html#event_checkElChange", "access": "", "host": "TreeViewDD", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'checkEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_checkHeight", "url": "Resize.html#method__checkHeight", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Update the current values on <a href=\"Resize.html#property_info\">info</a>\nto respect the maxHeight and minHeight."}, {"name": "checkLength", "url": "CharCounter.html#method_checkLength", "access": "", "host": "CharCounter", "params": "", "type": "method", "description": "Check the current value of the <a\nhref=\"CharCounter.html#config_input\">input</a>, truncate the data if\nneeded, and re-sync the UI. Fired from <a\nhref=\"CharCounter.html#method__onInputChange\">_onInputChange</a>."}, {"name": "checkName", "url": "TreeNodeCheck.html#config_checkName", "access": "", "host": "TreeNodeCheck", "params": "", "type": "config", "description": "Name of the checkbox element used on the current TreeNode."}, {"name": "checkName", "url": "TreeViewDD.html#config_checkName", "access": "", "host": "TreeViewDD", "params": "", "type": "config", "description": "Name of the checkbox element used on the current TreeNode."}, {"name": "checkNameChange", "url": "TreeNodeCheck.html#event_checkNameChange", "access": "", "host": "TreeNodeCheck", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'checkName' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "checkNameChange", "url": "TreeViewDD.html#event_checkNameChange", "access": "", "host": "TreeViewDD", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'checkName' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_checkRatio", "url": "Resize.html#method__checkRatio", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Update the current values on <a href=\"Resize.html#property_info\">info</a>\ncalculating the correct ratio for the other values."}, {"name": "_checkRegion", "url": "Resize.html#method__checkRegion", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Check whether the resizable node is inside the constrain region."}, {"name": "_checkWidth", "url": "Resize.html#method__checkWidth", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Update the current values on <a href=\"Resize.html#property_info\">info</a>\nto respect the maxWidth and minWidth."}, {"name": "children", "url": "Node.html#config_children", "access": "", "host": "Node", "params": "", "type": "config", "description": "Returns a NodeList instance of all HTMLElement children."}, {"name": "children", "url": "TreeData.html#config_children", "access": "", "host": "TreeData", "params": "", "type": "config", "description": "Array of children (i.e. could be a JSON metadata object or a TreeNode instance)."}, {"name": "childrenChange", "url": "TreeData.html#event_childrenChange", "access": "", "host": "TreeData", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'children' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_childrenContainer", "url": "WidgetParent.html#property__childrenContainer", "access": "protected", "host": "WidgetParent", "params": "", "type": "property", "description": "<p>By default WidgetParent will render it's children to the parent's content box.</p>\n<p>If the children need to be rendered somewhere else, the _childrenContainer property\ncan be set to the Node which the children should be rendered to. This property should be\nset before the _renderChildren method is invoked, ideally in your renderUI method, \nas soon as you create the element to be rendered to.</p>"}, {"name": "chrome", "url": "UA.html#property_chrome", "access": "", "host": "UA", "params": "", "type": "property", "description": "Chrome will be detected as webkit, but this property will also\nbe populated with the Chrome version number"}, {"name": "circular", "url": "plugin.NodeFocusManager.html#config_circular", "access": "", "host": "plugin.NodeFocusManager", "params": "", "type": "config", "description": "Boolean indicating if focus should be set to the first/last descendant \nwhen the end or beginning of the descendants has been reached."}, {"name": "circularChange", "url": "plugin.NodeFocusManager.html#event_circularChange", "access": "", "host": "plugin.NodeFocusManager", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'circular' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "className", "url": "ImgLoadGroup.html#config_className", "access": "", "host": "ImgLoadGroup", "params": "", "type": "config", "description": "Class name that will identify images belonging to the group. This class name will be removed from each element in order to fetch images.\nThis class should have, in its CSS style definition, \"<code>background:none !important;</code>\"."}, {"name": "classNameChange", "url": "ImgLoadGroup.html#event_classNameChange", "access": "", "host": "ImgLoadGroup", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'className' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "classNames", "url": "ButtonItem.html#config_classNames", "access": "", "host": "ButtonItem", "params": "", "type": "config", "description": "An object map of the CSS class names to use for the different interaction states."}, {"name": "classNamesChange", "url": "ButtonItem.html#event_classNamesChange", "access": "", "host": "ButtonItem", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'classNames' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "clean", "url": "ParseContent.html#method_clean", "access": "protected", "host": "ParseContent", "params": "content <String>  HTML content.", "type": "method", "description": "Create an HTML fragment with the String passed, extract all the script\ntags and return an Object with a reference for the extracted scripts and\nthe fragment."}, {"name": "clear", "url": "Profiler.html#method_clear", "access": "", "host": "Profiler", "params": "name <String>  (Optional) The name of the report to clear. If\nomitted, then all report data is cleared.", "type": "method", "description": "Removes all report data from the profiler."}, {"name": "clear", "url": "Test.Runner.html#method_clear", "access": "", "host": "Test.Runner", "params": "", "type": "method", "description": "Removes all test objects from the runner."}, {"name": "_clearActiveItem", "url": "plugin.NodeMenuNav.html#method__clearActiveItem", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "method", "description": "Clears the menu's active descendent."}, {"name": "clearAllIntervals", "url": "Pollable.html#method_clearAllIntervals", "access": "", "host": "Pollable", "params": "", "type": "method", "description": "Clears all intervals."}, {"name": "clearCache", "url": "DD.DDM.html#method_clearCache", "access": "", "host": "DD.DDM", "params": "", "type": "method", "description": "Clears the cache data used for this interaction."}, {"name": "clearConsole", "url": "Console.html#method_clearConsole", "access": "", "host": "Console", "params": "", "type": "method", "description": "Clear the console of messages and flush the buffer of pending messages."}, {"name": "clearConsole", "url": "Plugin.Console.html#method_clearConsole", "access": "", "host": "Plugin.Console", "params": "", "type": "method", "description": "Clear the console of messages and flush the buffer of pending messages."}, {"name": "clearData", "url": "Node.html#method_clearData", "access": "", "host": "Node", "params": "name <string>  The name of the field to clear. If no name\nis given, all data is cleared..", "type": "method", "description": "Clears stored data."}, {"name": "clearInterval", "url": "Pollable.html#method_clearInterval", "access": "", "host": "Pollable", "params": "id <Number>   Interval ID.", "type": "method", "description": "Disables polling mechanism associated with the given interval ID."}, {"name": "clearIntervals", "url": "OverlayContext.html#method_clearIntervals", "access": "", "host": "OverlayContext", "params": "", "type": "method", "description": "Clear the intervals to show or hide the OverlayContext. See\n<a href=\"OverlayContext.html#config_hideDelay\">hideDelay</a> and\n<a href=\"OverlayContext.html#config_showDelay\">showDelay</a>."}, {"name": "clearSelection", "url": "Rating.html#method_clearSelection", "access": "", "host": "Rating", "params": "", "type": "method", "description": "Clear all selected starts to the default state."}, {"name": "_clearSelection", "url": "AutoComplete.html#method__clearSelection", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "When <a href=\"Autocomplete.html#config_forceSelection\">forceSelection</a> is true and\nthe user tries to leave the input element without selecting an item from the results,\nthe user selection is cleared."}, {"name": "clickableRail", "url": "ClickableRail.html#config_clickableRail", "access": "", "host": "ClickableRail", "params": "", "type": "config", "description": "Enable or disable clickable rail support."}, {"name": "clickableRailChange", "url": "ClickableRail.html#event_clickableRailChange", "access": "", "host": "ClickableRail", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'clickableRail' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "clickPixelThresh", "url": "DD.DDM.html#config_clickPixelThresh", "access": "", "host": "DD.DDM", "params": "", "type": "config", "description": "The number of pixels to move to start a drag operation, default is 3."}, {"name": "clickPixelThresh", "url": "DD.Drag.html#config_clickPixelThresh", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "The number of pixels to move to start a drag operation, default is 3."}, {"name": "clickPixelThreshChange", "url": "DD.DDM.html#event_clickPixelThreshChange", "access": "", "host": "DD.DDM", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'clickPixelThresh' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "clickPixelThreshChange", "url": "DD.Drag.html#event_clickPixelThreshChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'clickPixelThresh' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "clickTimeThresh", "url": "DD.DDM.html#config_clickTimeThresh", "access": "", "host": "DD.DDM", "params": "", "type": "config", "description": "The number of milliseconds a mousedown has to pass to start a drag operation, default is 1000."}, {"name": "clickTimeThresh", "url": "DD.Drag.html#config_clickTimeThresh", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "The number of milliseconds a mousedown has to pass to start a drag operation, default is 1000."}, {"name": "clickTimeThreshChange", "url": "DD.DDM.html#event_clickTimeThreshChange", "access": "", "host": "DD.DDM", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'clickTimeThresh' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "clickTimeThreshChange", "url": "DD.Drag.html#event_clickTimeThreshChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'clickTimeThresh' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "clone", "url": "YUI~oop.html#method_clone", "access": "", "host": "YUI~oop", "params": "o <Object>  what to clone, safe <boolean>   if true, objects will not have prototype\nitems from the source.  If false, they will.  In this case, the\noriginal is initially protected, but the clone is not completely immune\nfrom changes to the source object prototype.  Also, cloned prototype\nitems that are deleted from the clone will result in the value\nof the source prototype being exposed.  If operating on a non-safe\nclone, items should be nulled out rather than deleted., f <Object>  optional function to apply to each item in a collection;\nit will be executed prior to applying the value to\nthe new object.  Return false to prevent the copy., c <Object>  optional execution context for f, owner <Object>  Owner object passed when clone is iterating an\nobject.  Used to set up context for cloned functions.", "type": "method", "description": "Deep obj/array copy.  Function clones are actually\nwrappers around the original function.\nArray-like objects are treated as arrays.\nPrimitives are returned untouched.  Optionally, a\nfunction can be provided to handle other data types,\nfilter keys, validate values, etc."}, {"name": "clone", "url": "Component.html#method_clone", "access": "", "host": "Component", "params": "config <Object> ", "type": "method", "description": "Clone the current Component."}, {"name": "clone", "url": "A.Node.html#method_clone", "access": "", "host": "A.Node", "params": "", "type": "method", "description": "Normalizes the behavior of cloning a node, which by default should not clone\nthe events that are attached to it.\nExample:\n<pre><code>var node = A.one('#nodeId');\nnode.clone().appendTo('body');\n</code></pre>"}, {"name": "cloneNode", "url": "Node.html#method_cloneNode", "access": "", "host": "Node", "params": "deep <Boolean>  Whether or not to perform a deep clone, which includes\nsubtree and attributes", "type": "method", "description": "Passes through to DOM method."}, {"name": "close", "url": "ImageViewer.html#method_close", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Close the ImageViewer."}, {"name": "close", "url": "Dialog.html#method_close", "access": "", "host": "Dialog", "params": "", "type": "method", "description": "Fires the close event to close the Dialog."}, {"name": "close", "url": "Dialog.html#config_close", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "If <code>true</code> the close icon will be displayed on the\nDialog header."}, {"name": "closeByChild", "url": "DialogManager.html#method_closeByChild", "access": "", "host": "DialogManager", "params": "child <Node | String>  Child node of the Dialog.", "type": "method", "description": "<p>Invoke the <a href=\"Dialog.html#method_close\">close</a> method from\nthe Dialog which contains the <code>child</code> element.</p>\nExample:\n<pre><code>A.DialogManager.closeByChild('#dialogContent1');</code></pre>"}, {"name": "closeChange", "url": "Dialog.html#event_closeChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'close' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "closeEl", "url": "ImageViewer.html#config_closeEl", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "The element to be used as close."}, {"name": "closeElChange", "url": "ImageViewer.html#event_closeElChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'closeEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "collapse", "url": "Console.html#method_collapse", "access": "", "host": "Console", "params": "", "type": "method", "description": "Collapses the body and footer."}, {"name": "collapse", "url": "Plugin.Console.html#method_collapse", "access": "", "host": "Plugin.Console", "params": "", "type": "method", "description": "Collapses the body and footer."}, {"name": "_collapse", "url": "TreeNode.html#method__collapse", "access": "protected", "host": "TreeNode", "params": "", "type": "method", "description": "Collapse the current TreeNode."}, {"name": "collapse", "url": "TreeNode.html#method_collapse", "access": "", "host": "TreeNode", "params": "", "type": "method", "description": "Collapse the current TreeNode."}, {"name": "collapse", "url": "Panel.html#method_collapse", "access": "", "host": "Panel", "params": "", "type": "method", "description": "Collapse the panel setting the\n<a href=\"Panel.html#config_collapsed\">collapsed</a> attribute to\n<code>true</code>."}, {"name": "_collapseAll", "url": "TreeData.html#method__collapseAll", "access": "protected", "host": "TreeData", "params": "", "type": "method", "description": "Collapse all children of the TreeData."}, {"name": "collapseAll", "url": "TreeData.html#method_collapseAll", "access": "", "host": "TreeData", "params": "", "type": "method", "description": "Collapse all children of the TreeData."}, {"name": "collapsed", "url": "Console.html#config_collapsed", "access": "", "host": "Console", "params": "", "type": "config", "description": "Controls the collapsed state of the Console"}, {"name": "collapsed", "url": "Plugin.Console.html#config_collapsed", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Controls the collapsed state of the Console"}, {"name": "collapsed", "url": "Panel.html#config_collapsed", "access": "", "host": "Panel", "params": "", "type": "config", "description": "Whether the panel is displayed collapsed."}, {"name": "collapsedChange", "url": "Console.html#event_collapsedChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'collapsed' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "collapsedChange", "url": "Plugin.Console.html#event_collapsedChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'collapsed' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "collapsedChange", "url": "Panel.html#event_collapsedChange", "access": "", "host": "Panel", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'collapsed' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "collapsible", "url": "Panel.html#config_collapsible", "access": "", "host": "Panel", "params": "", "type": "config", "description": "Whether the panel is able to be collapsed."}, {"name": "collapsibleChange", "url": "Panel.html#event_collapsibleChange", "access": "", "host": "Panel", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'collapsible' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "ColorPicker.ATTRS", "url": "ColorPicker.html#property_ColorPicker.ATTRS", "access": "", "host": "ColorPicker", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the ColorPicker."}, {"name": "ColorPicker.NAME", "url": "ColorPicker.html#property_ColorPicker.NAME", "access": "", "host": "ColorPicker", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "combine", "url": "Loader.html#property_combine", "access": "", "host": "Loader", "params": "", "type": "property", "description": "If configured, the loader will attempt to use the combo\nservice for YUI resources and configured external resources."}, {"name": "combine", "url": "config.html#property_combine", "access": "", "host": "config", "params": "", "type": "property", "description": "Use the YUI combo service to reduce the number of http connections \nrequired to load your dependencies.  Turning this off will\ndisable combo handling for YUI and all module groups configured\nwith a combo service.\nFor dynamic loading."}, {"name": "comboBase", "url": "Loader.html#property_comboBase", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Base path for the combo service"}, {"name": "comboBase", "url": "config.html#property_comboBase", "access": "", "host": "config", "params": "", "type": "property", "description": "The YUI combo service base dir. Ex: http://yui.yahooapis.com/combo?\nFor dynamic loading."}, {"name": "_compareDates", "url": "Calendar.html#method__compareDates", "access": "protected", "host": "Calendar", "params": "d1 <Date> , d2 <Date> ", "type": "method", "description": "Compare two dates."}, {"name": "compareTo", "url": "Node.html#method_compareTo", "access": "", "host": "Node", "params": "refNode <HTMLElement | Node>  The reference node to compare to the node.", "type": "method", "description": "Compares nodes to determine if they match.\nNode instances can be compared to each other and/or HTMLElements."}, {"name": "complete", "url": "AsyncQueue.html#event_complete", "access": "", "host": "AsyncQueue", "params": "", "type": "event", "description": "Event fired after the last queued callback is executed."}, {"name": "complete", "url": "Test.Runner.html#event_complete", "access": "", "host": "Test.Runner", "params": "", "type": "event", "description": "Fires when all test suites and test cases have been completed."}, {"name": "Component.ATTRS", "url": "Component.html#property_Component.ATTRS", "access": "", "host": "Component", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the Component."}, {"name": "Component.NAME", "url": "Component.html#property_Component.NAME", "access": "", "host": "Component", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "Console.ATTRS", "url": "Console.html#property_Console.ATTRS", "access": "", "host": "Console", "params": "", "type": "property", "description": "Static property used to define the default attribute configuration of\nthe Widget."}, {"name": "Console.ATTRS", "url": "Plugin.Console.html#property_Console.ATTRS", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "Static property used to define the default attribute configuration of\nthe Widget."}, {"name": "Console.BODY_TEMPLATE", "url": "Console.html#property_Console.BODY_TEMPLATE", "access": "", "host": "Console", "params": "", "type": "property", "description": "Markup template used to generate the DOM structure for the Console body\n(where the messages are inserted) when it is rendered.  The template\nincludes only the {placeholder} &quot;console_bd_class&quot;, which is\nconstributed by Console.CHROME_CLASSES."}, {"name": "Console.BODY_TEMPLATE", "url": "Plugin.Console.html#property_Console.BODY_TEMPLATE", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "Markup template used to generate the DOM structure for the Console body\n(where the messages are inserted) when it is rendered.  The template\nincludes only the {placeholder} &quot;console_bd_class&quot;, which is\nconstributed by Console.CHROME_CLASSES."}, {"name": "Console.CHROME_CLASSES", "url": "Console.html#property_Console.CHROME_CLASSES", "access": "", "host": "Console", "params": "", "type": "property", "description": "Map (object) of classNames used to populate the placeholders in the\nConsole.HEADER_TEMPLATE, Console.BODY_TEMPLATE, and\nConsole.FOOTER_TEMPLATE markup when rendering the Console UI.\n<p>By default, the keys contained in the object are:</p>\n<ul>\n<li>console_hd_class</li>\n<li>console_bd_class</li>\n<li>console_ft_class</li>\n<li>console_controls_class</li>\n<li>console_checkbox_class</li>\n<li>console_pause_class</li>\n<li>console_pause_label_class</li>\n<li>console_button_class</li>\n<li>console_clear_class</li>\n<li>console_collapse_class</li>\n<li>console_title_class</li>\n</ul>"}, {"name": "Console.CHROME_CLASSES", "url": "Plugin.Console.html#property_Console.CHROME_CLASSES", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "Map (object) of classNames used to populate the placeholders in the\nConsole.HEADER_TEMPLATE, Console.BODY_TEMPLATE, and\nConsole.FOOTER_TEMPLATE markup when rendering the Console UI.\n<p>By default, the keys contained in the object are:</p>\n<ul>\n<li>console_hd_class</li>\n<li>console_bd_class</li>\n<li>console_ft_class</li>\n<li>console_controls_class</li>\n<li>console_checkbox_class</li>\n<li>console_pause_class</li>\n<li>console_pause_label_class</li>\n<li>console_button_class</li>\n<li>console_clear_class</li>\n<li>console_collapse_class</li>\n<li>console_title_class</li>\n</ul>"}, {"name": "Console.ENTRY_CLASSES", "url": "Console.html#property_Console.ENTRY_CLASSES", "access": "", "host": "Console", "params": "", "type": "property", "description": "Map (object) of classNames used to populate the placeholders in the\nConsole.ENTRY_TEMPLATE markup when rendering a new Console entry.\n<p>By default, the keys contained in the object are:</p>\n<ul>\n<li>entry_class</li>\n<li>entry_meta_class</li>\n<li>entry_cat_class</li>\n<li>entry_src_class</li>\n<li>entry_time_class</li>\n<li>entry_content_class</li>\n</ul>"}, {"name": "Console.ENTRY_CLASSES", "url": "Plugin.Console.html#property_Console.ENTRY_CLASSES", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "Map (object) of classNames used to populate the placeholders in the\nConsole.ENTRY_TEMPLATE markup when rendering a new Console entry.\n<p>By default, the keys contained in the object are:</p>\n<ul>\n<li>entry_class</li>\n<li>entry_meta_class</li>\n<li>entry_cat_class</li>\n<li>entry_src_class</li>\n<li>entry_time_class</li>\n<li>entry_content_class</li>\n</ul>"}, {"name": "Console.ENTRY_TEMPLATE", "url": "Console.html#property_Console.ENTRY_TEMPLATE", "access": "", "host": "Console", "params": "", "type": "property", "description": "Default markup template used to create the DOM structure for Console\nentries. The markup contains {placeholder}s for content and classes\nthat are replaced via Y.substitute.  The default template contains\nthe {placeholder}s identified in Console.ENTRY_CLASSES as well as the\nfollowing placeholders that will be populated by the log entry data:\n<ul>\n<li>cat_class</li>\n<li>src_class</li>\n<li>totalTime</li>\n<li>elapsedTime</li>\n<li>localTime</li>\n<li>sourceAndDetail</li>\n<li>message</li>\n</ul>"}, {"name": "Console.ENTRY_TEMPLATE", "url": "Plugin.Console.html#property_Console.ENTRY_TEMPLATE", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "Default markup template used to create the DOM structure for Console\nentries. The markup contains {placeholder}s for content and classes\nthat are replaced via Y.substitute.  The default template contains\nthe {placeholder}s identified in Console.ENTRY_CLASSES as well as the\nfollowing placeholders that will be populated by the log entry data:\n<ul>\n<li>cat_class</li>\n<li>src_class</li>\n<li>totalTime</li>\n<li>elapsedTime</li>\n<li>localTime</li>\n<li>sourceAndDetail</li>\n<li>message</li>\n</ul>"}, {"name": "ConsoleFilters.CATEGORIES_TEMPLATE", "url": "Plugin.ConsoleFilters.html#property_ConsoleFilters.CATEGORIES_TEMPLATE", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "property", "description": "Markup template used to create the container for the category filters."}, {"name": "ConsoleFilters.CHROME_CLASSES", "url": "Plugin.ConsoleFilters.html#property_ConsoleFilters.CHROME_CLASSES", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "property", "description": "Classnames used by the templates when creating nodes."}, {"name": "ConsoleFilters.FILTER_TEMPLATE", "url": "Plugin.ConsoleFilters.html#property_ConsoleFilters.FILTER_TEMPLATE", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "property", "description": "Markup template used to create the category and source filter checkboxes."}, {"name": "ConsoleFilters.NAME", "url": "Plugin.ConsoleFilters.html#property_ConsoleFilters.NAME", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "property", "description": "Plugin name."}, {"name": "ConsoleFilters.NS", "url": "Plugin.ConsoleFilters.html#property_ConsoleFilters.NS", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "property", "description": "The namespace hung off the host object that this plugin will inhabit."}, {"name": "ConsoleFilters.SOURCES_TEMPLATE", "url": "Plugin.ConsoleFilters.html#property_ConsoleFilters.SOURCES_TEMPLATE", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "property", "description": "Markup template used to create the container for the source filters."}, {"name": "Console.FOOTER_TEMPLATE", "url": "Console.html#property_Console.FOOTER_TEMPLATE", "access": "", "host": "Console", "params": "", "type": "property", "description": "Markup template used to generate the DOM structure for the footer\nsection of the Console when it is rendered.  The template includes\nmany of the {placeholder}s from Console.CHROME_CLASSES as well as:\n<ul>\n<li>id_guid - generated unique id, relates the label and checkbox</li>\n<li>str_pause - pulled from attribute strings.pause</li>\n<li>str_clear - pulled from attribute strings.clear</li>\n</ul>"}, {"name": "Console.FOOTER_TEMPLATE", "url": "Plugin.Console.html#property_Console.FOOTER_TEMPLATE", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "Markup template used to generate the DOM structure for the footer\nsection of the Console when it is rendered.  The template includes\nmany of the {placeholder}s from Console.CHROME_CLASSES as well as:\n<ul>\n<li>id_guid - generated unique id, relates the label and checkbox</li>\n<li>str_pause - pulled from attribute strings.pause</li>\n<li>str_clear - pulled from attribute strings.clear</li>\n</ul>"}, {"name": "Console.HEADER_TEMPLATE", "url": "Console.html#property_Console.HEADER_TEMPLATE", "access": "", "host": "Console", "params": "", "type": "property", "description": "Markup template used to generate the DOM structure for the header\nsection of the Console when it is rendered.  The template includes\nthese {placeholder}s:\n<ul>\n<li>console_button_class - contributed by Console.CHROME_CLASSES</li>\n<li>console_collapse_class - contributed by Console.CHROME_CLASSES</li>\n<li>console_hd_class - contributed by Console.CHROME_CLASSES</li>\n<li>console_title_class - contributed by Console.CHROME_CLASSES</li>\n<li>str_collapse - pulled from attribute strings.collapse</li>\n<li>str_title - pulled from attribute strings.title</li>\n</ul>"}, {"name": "Console.HEADER_TEMPLATE", "url": "Plugin.Console.html#property_Console.HEADER_TEMPLATE", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "Markup template used to generate the DOM structure for the header\nsection of the Console when it is rendered.  The template includes\nthese {placeholder}s:\n<ul>\n<li>console_button_class - contributed by Console.CHROME_CLASSES</li>\n<li>console_collapse_class - contributed by Console.CHROME_CLASSES</li>\n<li>console_hd_class - contributed by Console.CHROME_CLASSES</li>\n<li>console_title_class - contributed by Console.CHROME_CLASSES</li>\n<li>str_collapse - pulled from attribute strings.collapse</li>\n<li>str_title - pulled from attribute strings.title</li>\n</ul>"}, {"name": "consoleLimit", "url": "Console.html#config_consoleLimit", "access": "", "host": "Console", "params": "", "type": "config", "description": "Maximum number of Console entries allowed in the Console body at one\ntime.  This is used to keep acquired messages from exploding the\nDOM tree and impacting page performance."}, {"name": "consoleLimit", "url": "Plugin.Console.html#config_consoleLimit", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Maximum number of Console entries allowed in the Console body at one\ntime.  This is used to keep acquired messages from exploding the\nDOM tree and impacting page performance."}, {"name": "consoleLimitChange", "url": "Console.html#event_consoleLimitChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'consoleLimit' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "consoleLimitChange", "url": "Plugin.Console.html#event_consoleLimitChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'consoleLimit' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Console.LOG_LEVEL_ERROR", "url": "Console.html#property_Console.LOG_LEVEL_ERROR", "access": "", "host": "Console", "params": "", "type": "property", "description": "Static identifier for logLevel configuration setting to allow only\nincoming messages of logLevel &quot;error&quot; to generate\nConsole entries."}, {"name": "Console.LOG_LEVEL_ERROR", "url": "Plugin.Console.html#property_Console.LOG_LEVEL_ERROR", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "Static identifier for logLevel configuration setting to allow only\nincoming messages of logLevel &quot;error&quot; to generate\nConsole entries."}, {"name": "Console.LOG_LEVEL_INFO", "url": "Console.html#property_Console.LOG_LEVEL_INFO", "access": "", "host": "Console", "params": "", "type": "property", "description": "Static identifier for logLevel configuration setting to allow all\nincoming messages to generate Console entries."}, {"name": "Console.LOG_LEVEL_INFO", "url": "Plugin.Console.html#property_Console.LOG_LEVEL_INFO", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "Static identifier for logLevel configuration setting to allow all\nincoming messages to generate Console entries."}, {"name": "Console.LOG_LEVEL_WARN", "url": "Console.html#property_Console.LOG_LEVEL_WARN", "access": "", "host": "Console", "params": "", "type": "property", "description": "Static identifier for logLevel configuration setting to allow only\nincoming messages of logLevel &quot;warn&quot; or &quot;error&quot;\nto generate Console entries."}, {"name": "Console.LOG_LEVEL_WARN", "url": "Plugin.Console.html#property_Console.LOG_LEVEL_WARN", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "Static identifier for logLevel configuration setting to allow only\nincoming messages of logLevel &quot;warn&quot; or &quot;error&quot;\nto generate Console entries."}, {"name": "Console.NAME", "url": "Console.html#property_Console.NAME", "access": "", "host": "Console", "params": "", "type": "property", "description": "The identity of the widget."}, {"name": "Console.NAME", "url": "Plugin.Console.html#property_Console.NAME", "access": "", "host": "Plugin.Console", "params": "", "type": "property", "description": "The identity of the widget."}, {"name": "_constrain", "url": "WidgetPositionConstrain.html#method__constrain", "access": "protected", "host": "WidgetPositionConstrain", "params": "val <Number>  The value to constrain, axis <String>  The axis to use for constrainment, nodeRegion <Region>  The region of the node to constrain, constrainingRegion <Region>  The region of the node (or viewport) to constrain to", "type": "method", "description": "The method which performs the actual constrain calculations for a given axis (\"x\" or \"y\") based\non the regions provided."}, {"name": "constrain", "url": "WidgetPositionConstrain.html#method_constrain", "access": "", "host": "WidgetPositionConstrain", "params": "xy <Array>  Optional. The xy values to constrain, node <Node | boolean>  Optional. The node to constrain to, or true for the viewport", "type": "method", "description": "Constrains the widget's bounding box to a node (or the viewport). If xy or node are not \npassed in, the current position and the value of \"constrain\" will be used respectively.\nThe widget's position will be changed to the constrained position."}, {"name": "constrain", "url": "WidgetPositionConstrain.html#config_constrain", "access": "", "host": "WidgetPositionConstrain", "params": "", "type": "config", "description": "The node to constrain the widget's bounding box to, when setting xy. Can also be\nset to true, to constrain to the viewport."}, {"name": "constrain", "url": "Resize.html#config_constrain", "access": "", "host": "Resize", "params": "", "type": "config", "description": "Will attempt to constrain the resize node to the boundaries. Arguments:<br>\n'view': Contrain to Viewport<br>\n'#selector_string': Constrain to this node<br>\n'{Region Object}': An Object Literal containing a valid region (top, right, bottom, left) of page positions"}, {"name": "constrain", "url": "Plugin.DDConstrained.html#config_constrain", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "Will attempt to constrain the drag node to the boundaries. Arguments:<br>\n'view': Contrain to Viewport<br>\n'#selector_string': Constrain to this node<br>\n'{Region Object}': An Object Literal containing a valid region (top, right, bottom, left) of page positions"}, {"name": "constrain2node", "url": "Plugin.DDConstrained.html#config_constrain2node", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "Will attempt to constrain the drag node to the boundaries of this node."}, {"name": "constrain2nodeChange", "url": "Plugin.DDConstrained.html#event_constrain2nodeChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'constrain2node' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "constrain2region", "url": "Plugin.DDConstrained.html#config_constrain2region", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "An Object Literal containing a valid region (top, right, bottom, left) of page positions to constrain the drag node to."}, {"name": "constrain2regionChange", "url": "Plugin.DDConstrained.html#event_constrain2regionChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'constrain2region' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "constrain2view", "url": "Plugin.DDConstrained.html#config_constrain2view", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "Will attempt to constrain the drag node to the boundaries of the viewport region."}, {"name": "constrain2view", "url": "Dialog.html#config_constrain2view", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "Will attempt to constrain the dialog to the boundaries of the\nviewport region."}, {"name": "constrain2viewChange", "url": "Plugin.DDConstrained.html#event_constrain2viewChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'constrain2view' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "constrain2viewChange", "url": "Dialog.html#event_constrain2viewChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'constrain2view' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "constrainBorderInfo", "url": "Resize.html#config_constrainBorderInfo", "access": "", "host": "Resize", "params": "", "type": "config", "description": "Cache the border widths of the contrain node if constrain\noption is being used."}, {"name": "constrainBorderInfoChange", "url": "Resize.html#event_constrainBorderInfoChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'constrainBorderInfo' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "constrainChange", "url": "WidgetPositionConstrain.html#event_constrainChange", "access": "", "host": "WidgetPositionConstrain", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "constrainChange", "url": "Resize.html#event_constrainChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "constrainChange", "url": "Plugin.DDConstrained.html#event_constrainChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'constrain' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_constrainOnXYChange", "url": "WidgetPositionConstrain.html#method__constrainOnXYChange", "access": "protected", "host": "WidgetPositionConstrain", "params": "e <EventFacade>  The event facade for the attribute change", "type": "method", "description": "The on change listener for the \"xy\" attribute. Modifies the event facade's\nnewVal property with the constrained XY value."}, {"name": "container", "url": "DD.Delegate.html#config_container", "access": "", "host": "DD.Delegate", "params": "", "type": "config", "description": "A selector query to get the container to listen for mousedown events on. All \"nodes\" should be a child of this container."}, {"name": "container", "url": "TreeData.html#config_container", "access": "", "host": "TreeData", "params": "", "type": "config", "description": "Container to nest children nodes. If has cntainer it's not a leaf."}, {"name": "container", "url": "Sortable.html#config_container", "access": "", "host": "Sortable", "params": "", "type": "config", "description": "A selector query to get the container to listen for mousedown events on. All \"nodes\" should be a child of this container."}, {"name": "containerChange", "url": "DD.Delegate.html#event_containerChange", "access": "", "host": "DD.Delegate", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'container' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "containerChange", "url": "TreeData.html#event_containerChange", "access": "", "host": "TreeData", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'container' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "containerChange", "url": "Sortable.html#event_containerChange", "access": "", "host": "Sortable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'container' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "containerCollapse", "url": "AutoComplete.html#event_containerCollapse", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The containerCollapse event.", "type": "event", "description": "Handles the containerCollapse event. Fired when the container is hidden."}, {"name": "containerExpand", "url": "AutoComplete.html#event_containerExpand", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The containerExpand event.", "type": "event", "description": "Handles the containerExpand event. Fired when the container is shown."}, {"name": "containerPopulate", "url": "AutoComplete.html#event_containerPopulate", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The containerPopulate event.", "type": "event", "description": "Handles the containerPopulate event. Fired when the container is populated."}, {"name": "containers", "url": "Paginator.html#config_containers", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The Paginator controls UI could be displayed in more than one\ncontainer (i.e., in the header and footer of a list). Pass a\n<a href=\"NodeList.html\">NodeList</a> or a selector to grab the\ncontainers."}, {"name": "containersChange", "url": "Paginator.html#event_containersChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'containers' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "contains", "url": "Node.html#method_contains", "access": "", "host": "Node", "params": "needle <Node | HTMLElement>  The possible node or descendent", "type": "method", "description": "Determines whether the node is an ancestor of another HTML element in the DOM hierarchy."}, {"name": "contains", "url": "Assert.ArrayAssert.html#method_contains", "access": "", "host": "Assert.ArrayAssert", "params": "needle <Object>  The value that is expected in the array., haystack <Array>  An array of values., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is present in an array. This uses the triple equals \nsign so no type cohersion may occur."}, {"name": "contains", "url": "TreeNode.html#method_contains", "access": "", "host": "TreeNode", "params": "node <TreeNode> ", "type": "method", "description": "Check if the current TreeNode contains the passed <code>node</code>."}, {"name": "contains", "url": "DOM.html#method_contains", "access": "", "host": "DOM", "params": "element <HTMLElement>  The containing html element., needle <HTMLElement>  The html element that may be contained.", "type": "method", "description": "Determines whether or not one HTMLElement is or contains another HTMLElement."}, {"name": "contains", "url": "Subscriber.html#method_contains", "access": "", "host": "Subscriber", "params": "fn <Function>  the function to execute, context <Object>  optional 'this' keyword for the listener", "type": "method", "description": "Returns true if the fn and obj match this objects properties.\nUsed by the unsubscribe method to match the right subscriber."}, {"name": "containsItems", "url": "Assert.ArrayAssert.html#method_containsItems", "access": "", "host": "Assert.ArrayAssert", "params": "needles <Object[]>  An array of values that are expected in the array., haystack <Array>  An array of values to check., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a set of values are present in an array. This uses the triple equals \nsign so no type cohersion may occur. For this assertion to pass, all values must\nbe found."}, {"name": "containsMatch", "url": "Assert.ArrayAssert.html#method_containsMatch", "access": "", "host": "Assert.ArrayAssert", "params": "matcher <Function>  A function that returns true if the items matches or false if not., haystack <Array>  An array of values., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value matching some condition is present in an array. This uses\na function to determine a match."}, {"name": "content", "url": "Tab.html#config_content", "access": "", "host": "Tab", "params": "", "type": "config", "description": ""}, {"name": "contentBox", "url": "Widget.html#config_contentBox", "access": "", "host": "Widget", "params": "", "type": "config", "description": "A DOM node that is a direct descendent of a Widget's bounding box that \nhouses its content."}, {"name": "contentBoxChange", "url": "Widget.html#event_contentBoxChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'contentBox' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "contentChange", "url": "Tab.html#event_contentChange", "access": "", "host": "Tab", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'content' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "contentready", "url": "YUI.html#event_contentready", "access": "", "host": "YUI", "params": "type <string>   'contentready', fn <function>   the callback function to execute., el <string|HTMLElement|collection>   the element(s) to attach, context <Object>  optional argument that specifies what 'this' refers to., args* <Object>  0..n additional arguments to pass on to the callback function.\nThese arguments will be added after the event object.", "type": "event", "description": "Executes the callback as soon as the specified element \nis detected in the DOM with a nextSibling property\n(indicating that the element's children are available)"}, {"name": "CONTENT_TEMPLATE", "url": "Widget.html#property_CONTENT_TEMPLATE", "access": "", "host": "Widget", "params": "", "type": "property", "description": "Property defining the markup template for content box. If your Widget doesn't\nneed the dual boundingBox/contentBox structure, set CONTENT_TEMPLATE to null,\nand contentBox and boundingBox will both point to the same Node."}, {"name": "CONTENT_TEMPLATE", "url": "SliderBase.html#property_CONTENT_TEMPLATE", "access": "", "host": "SliderBase", "params": "", "type": "property", "description": "Content box template that will contain the Slider's rail and thumb."}, {"name": "CONTENT_TEMPLATE", "url": "TreeNode.html#property_CONTENT_TEMPLATE", "access": "protected", "host": "TreeNode", "params": "", "type": "property", "description": "Replaced CONTENT_TEMPLATE with NODE_CONTENT_TEMPLATE."}, {"name": "contentText", "url": "Editable.html#config_contentText", "access": "", "host": "Editable", "params": "", "type": "config", "description": "Content text."}, {"name": "contentTextChange", "url": "Editable.html#event_contentTextChange", "access": "", "host": "Editable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'contentText' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "context", "url": "Loader.html#property_context", "access": "", "host": "Loader", "params": "", "type": "property", "description": "The execution context for all callbacks"}, {"name": "context", "url": "IORequest.html#config_context", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "See <a href=\"http://developer.yahoo.com/yui/3/io/#configuration\">IO\nConfiguration</a>."}, {"name": "context", "url": "CustomEvent.html#property_context", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "The context the the event will fire from by default.  Defaults to the YUI\ninstance."}, {"name": "context", "url": "Subscriber.html#property_context", "access": "", "host": "Subscriber", "params": "", "type": "property", "description": "Optional 'this' keyword for the listener"}, {"name": "contextChange", "url": "IORequest.html#event_contextChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'context' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_copyStyles", "url": "Resize.html#method__copyStyles", "access": "protected", "host": "Resize", "params": "node <Node>  Node from., wrapper <Node>  Node to.", "type": "method", "description": "Copy relevant styles of the <a href=\"Resize.html#config_node\">node</a>\nto the <a href=\"Resize.html#config_wrapper\">wrapper</a>."}, {"name": "core", "url": "config.html#property_core", "access": "", "host": "config", "params": "", "type": "property", "description": "A list of modules that defines the YUI core (overrides the default)."}, {"name": "counter", "url": "CharCounter.html#config_counter", "access": "", "host": "CharCounter", "params": "", "type": "config", "description": "Node or Selector to display the information of the counter."}, {"name": "counterChange", "url": "CharCounter.html#event_counterChange", "access": "", "host": "CharCounter", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'counter' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "create", "url": "Node.html#method_create", "access": "", "host": "Node", "params": "html <String>  The markup used to create the element, doc <HTMLDocument>  An optional document context", "type": "method", "description": "Creates a new dom node using the provided markup string."}, {"name": "create", "url": "DOM.html#method_create", "access": "", "host": "DOM", "params": "html <String>  The markup used to create the element, doc <HTMLDocument>  An optional document context", "type": "method", "description": "Creates a new dom node using the provided markup string."}, {"name": "_createCheckbox", "url": "Plugin.ConsoleFilters.html#method__createCheckbox", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "container <Node>   the parentNode of the new checkbox and label, name <String>   the identifier of the filter", "type": "method", "description": "Creates a checkbox and label from the ConsoleFilters.FILTER_TEMPLATE for\nthe provided type and name.  The checkbox and label are appended to the\ncontainer node passes as the first arg."}, {"name": "_createChild", "url": "WidgetParent.html#method__createChild", "access": "protected", "host": "WidgetParent", "params": "config <Object>   Object literal representing the configuration \nused to create an instance of a Widget.", "type": "method", "description": "Creates an instance of a child Widget using the specified configuration.\nBy default Widget instances will be created of the type specified \nby the <code>defaultChildType</code> attribute.  Types can be explicitly\ndefined via the <code>type</code> property of the configuration object\nliteral."}, {"name": "_createDataSource", "url": "AutoComplete.html#method__createDataSource", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Creates the data source object using the passed in <a href=\"Autocomplete.html#config_dataSource\">dataSource</a>,\nand if it is a string, will use the <a href=\"Autocomplete.html#config_dataSourceType\">dataSourceType</a> to\ncreate a new <a href=\"module_datasource.html\">DataSource</a> object."}, {"name": "_createDrag", "url": "TreeViewDD.html#method__createDrag", "access": "protected", "host": "TreeViewDD", "params": "node <Node> ", "type": "method", "description": "Setup DragDrop on the TreeNodes."}, {"name": "createDrop", "url": "DD.Delegate.html#method_createDrop", "access": "", "host": "DD.Delegate", "params": "node <Node>  The Node to apply the plugin to, groups <Array>  The default groups to assign this target to.", "type": "method", "description": "Apply the Drop plugin to this node"}, {"name": "_createDynamicAttrs", "url": "LoadingMask.html#method__createDynamicAttrs", "access": "protected", "host": "LoadingMask", "params": "config <Object>  Object literal specifying widget configuration properties.", "type": "method", "description": "Create dynamic attributes listeners to invoke the setter on\n<a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a> after\nthe attribute is set on the LoadingMask instance."}, {"name": "_createElements", "url": "Rating.html#method__createElements", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Create rating elements based on the <code>size</code>\nattribute. It's only invoked when the HTML_PARSER does not find\nnothing."}, {"name": "_createEntryHTML", "url": "Console.html#method__createEntryHTML", "access": "protected", "host": "Console", "params": "m <Object>   object literal containing normalized message metadata", "type": "method", "description": "Translates message meta into the markup for a console entry."}, {"name": "_createEntryHTML", "url": "Plugin.Console.html#method__createEntryHTML", "access": "protected", "host": "Plugin.Console", "params": "m <Object>   object literal containing normalized message metadata", "type": "method", "description": "Translates message meta into the markup for a console entry."}, {"name": "_createEvents", "url": "Editable.html#method__createEvents", "access": "protected", "host": "Editable", "params": "", "type": "method", "description": "Create the Events."}, {"name": "_createEvents", "url": "Rating.html#method__createEvents", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Create the custom events."}, {"name": "_createFromHTMLMarkup", "url": "TreeView.html#method__createFromHTMLMarkup", "access": "protected", "host": "TreeView", "params": "container <Node> ", "type": "method", "description": "Create TreeNode from HTML markup."}, {"name": "createNode", "url": "TreeData.html#method_createNode", "access": "", "host": "TreeData", "params": "options <Object> ", "type": "method", "description": "Create a TreeNode instance."}, {"name": "_createNodeContainer", "url": "TreeNode.html#method__createNodeContainer", "access": "protected", "host": "TreeNode", "params": "", "type": "method", "description": "Render the node container."}, {"name": "css", "url": "Get.html#method_css", "access": "", "host": "Get", "params": "url <string>   the url or urls to the css file(s), opts <Object>  Options: \n<dl>\n<dt>onSuccess</dt>\n<dd>\ncallback to execute when the css file(s) are finished loading\nThe callback receives an object back with the following\ndata:\n<dl>win</dl>\n<dd>the window the link nodes(s) were inserted into</dd>\n<dt>data</dt>\n<dd>the data object passed in when the request was made</dd>\n<dt>nodes</dt>\n<dd>An array containing references to the nodes that were\ninserted</dd>\n<dt>purge</dt>\n<dd>A function that, when executed, will remove the nodes\nthat were inserted</dd>\n<dt>\n</dl>\n</dd>\n<dt>context</dt>\n<dd>the execution context for the callbacks</dd>\n<dt>win</dt>\n<dd>a window other than the one the utility occupies</dd>\n<dt>data</dt>\n<dd>\ndata that is supplied to the callbacks when the nodes(s) are\nloaded.\n</dd>\n<dt>insertBefore</dt>\n<dd>node or node id that will become the new node's nextSibling</dd>\n<dt>charset</dt>\n<dd>Node charset, default utf-8 (deprecated, use the attributes config)</dd>\n<dt>attributes</dt>\n<dd>An object literal containing additional attributes to add to the link tags</dd>\n</dl>\n<pre>\nY.Get.css(\"http://yui.yahooapis.com/2.3.1/build/menu/assets/skins/sam/menu.css\");\n</pre>\n<pre>\n&nbsp;&nbsp;Y.Get.css(\n&nbsp;&nbsp;[\"http://yui.yahooapis.com/2.3.1/build/menu/assets/skins/sam/menu.css\",\n&nbsp;&nbsp;&nbsp;\"http://yui.yahooapis.com/2.3.1/build/logger/assets/skins/sam/logger.css\"], &#123;\n&nbsp;&nbsp;&nbsp;&nbsp;insertBefore: 'custom-styles' // nodes will be inserted before the specified node\n&nbsp;&nbsp;&#125;);\n</pre>", "type": "method", "description": "Fetches and inserts one or more css link nodes into the \nhead of the current document or the document in a specified\nwindow."}, {"name": "cssAttributes", "url": "Loader.html#property_cssAttributes", "access": "", "host": "Loader", "params": "", "type": "property", "description": "An object literal containing attributes to add to link nodes"}, {"name": "cssAttributes", "url": "config.html#property_cssAttributes", "access": "", "host": "config", "params": "", "type": "property", "description": "Object literal containing attributes to add to dynamically loaded link nodes."}, {"name": "cssClass", "url": "Component.html#config_cssClass", "access": "", "host": "Component", "params": "", "type": "config", "description": "CSS class to be automatically added to the <code>boundingBox</code>."}, {"name": "cssClassChange", "url": "Component.html#event_cssClassChange", "access": "", "host": "Component", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'cssClass' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "CSS_PREFIX", "url": "DD.DDM.html#property_CSS_PREFIX", "access": "", "host": "DD.DDM", "params": "", "type": "property", "description": "The PREFIX to attach to all DD CSS class names"}, {"name": "currentDay", "url": "Calendar.html#config_currentDay", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "Current day number."}, {"name": "currentDayChange", "url": "Calendar.html#event_currentDayChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'currentDay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "currentIndex", "url": "ImageViewer.html#config_currentIndex", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "Index of the current image."}, {"name": "currentIndexChange", "url": "ImageViewer.html#event_currentIndexChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'currentIndex' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "currentMonth", "url": "Calendar.html#config_currentMonth", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "Current month number."}, {"name": "currentMonthChange", "url": "Calendar.html#event_currentMonthChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'currentMonth' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_currentMouseX", "url": "plugin.NodeMenuNav.html#property__currentMouseX", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Number representing the current x coordinate of the mouse \ninside the menu."}, {"name": "currentNode", "url": "DD.Delegate.html#config_currentNode", "access": "", "host": "DD.Delegate", "params": "", "type": "config", "description": "Y.Node instance of the dd node."}, {"name": "currentNode", "url": "OverlayContext.html#config_currentNode", "access": "", "host": "OverlayContext", "params": "", "type": "config", "description": "OverlayContext allow multiple elements to be the\n<a href=\"OverlayContext.html#config_trigger\">trigger</a>, the\ncurrentNode stores the current active one."}, {"name": "currentNodeChange", "url": "DD.Delegate.html#event_currentNodeChange", "access": "", "host": "DD.Delegate", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "currentNodeChange", "url": "OverlayContext.html#event_currentNodeChange", "access": "", "host": "OverlayContext", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'currentNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "currentState", "url": "History.Module.html#property_currentState", "access": "", "host": "History.Module", "params": "", "type": "property", "description": "The module's current state"}, {"name": "currentTarget", "url": "DOMEventFacade.html#property_currentTarget", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "Node reference for the element that the listener was attached to."}, {"name": "currentTarget", "url": "EventFacade.html#property_currentTarget", "access": "", "host": "EventFacade", "params": "", "type": "property", "description": "Node reference for the element that the listener was attached to."}, {"name": "currentYear", "url": "Calendar.html#config_currentYear", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "Current year number."}, {"name": "currentYearChange", "url": "Calendar.html#event_currentYearChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'currentYear' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "data", "url": "Loader.html#property_data", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Data that is passed to all callbacks"}, {"name": "data", "url": "DD.Drag.html#config_data", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "A payload holder to store arbitrary data about this drag object, can be used to store any value."}, {"name": "data", "url": "DataSource.Local.html#event_data", "access": "", "host": "DataSource.Local", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n</dl>", "type": "event", "description": "Fired when raw data is received."}, {"name": "data", "url": "LiveSearch.html#config_data", "access": "", "host": "LiveSearch", "params": "", "type": "config", "description": "<p>Function to extract the content from the node for the indexing. The\ndefault uses the <code>node.html()</code>. In case if you need to\nindex the id of the nodes, here goes one example:</p>\nExample indexing the id of the node instead of the HTML:\n<pre><code>function(node) {\nreturn node.attr('id');\n}\n</code></pre>"}, {"name": "data", "url": "State.html#property_data", "access": "", "host": "State", "params": "", "type": "property", "description": "Hash of attributes"}, {"name": "data", "url": "IORequest.html#config_data", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "See <a href=\"http://developer.yahoo.com/yui/3/io/#configuration\">IO\nConfiguration</a>."}, {"name": "dataChange", "url": "DD.Drag.html#event_dataChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'data' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dataChange", "url": "LiveSearch.html#event_dataChange", "access": "", "host": "LiveSearch", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'data' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dataChange", "url": "IORequest.html#event_dataChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'data' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dataError", "url": "AutoComplete.html#event_dataError", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The dataError event.", "type": "event", "description": "Handles the dataError event. Fired when there is an error accessing the data."}, {"name": "dataRequest", "url": "AutoComplete.html#event_dataRequest", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The dataRequest event.", "type": "event", "description": "Handles the dataRequest event. Fired when ever a query is sent to the data source."}, {"name": "dataReturn", "url": "AutoComplete.html#event_dataReturn", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The dataReturn event.", "type": "event", "description": "Handles the dataReturn event. Fired when data successfully comes back from the data request."}, {"name": "DataSchema.JSON.getLocationValue", "url": "DataSchema.JSON.html#method_DataSchema.JSON.getLocationValue", "access": "", "host": "DataSchema.JSON", "params": "path <String[]>   Locator path., data <String>   Data to traverse.", "type": "method", "description": "Utility function to walk a path and return the value located there."}, {"name": "DataSchema.JSON.getPath", "url": "DataSchema.JSON.html#method_DataSchema.JSON.getPath", "access": "", "host": "DataSchema.JSON", "params": "locator <String>   JSON value locator.", "type": "method", "description": "Utility function converts JSON locator strings into walkable paths"}, {"name": "dataSource", "url": "AutoComplete.html#config_dataSource", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "The data source that results will be read from. This can either be\nan existing <a href=\"DataSource.html\">DataSource</a> object, or it can be a\nvalue that would be passed to <a href=\"DataSource.html\">DataSource</a>."}, {"name": "dataSourceChange", "url": "AutoComplete.html#event_dataSourceChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dataSource' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "DataSource.issueCallback", "url": "DataSource.Local.html#method_DataSource.issueCallback", "access": "", "host": "DataSource.Local", "params": "callback <Object>   The callback object., params <Array>   params to be passed to the callback method, error <Boolean>   whether an error occurred", "type": "method", "description": "Executes a given callback.  The third param determines whether to execute"}, {"name": "dataSourceType", "url": "AutoComplete.html#config_dataSourceType", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "The type of the data source passed into <a href=\"AutoComplete.html#config_dataSource\">dataSource</a>.\nThis can be used to explicitly declare what kind of <a href=\"DataSource.html\">DataSource</a> object will\nbe created."}, {"name": "dataSourceTypeChange", "url": "AutoComplete.html#event_dataSourceTypeChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dataSourceType' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dataType", "url": "IORequest.html#config_dataType", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "The type of the request (i.e., could be xml, json, javascript, text)."}, {"name": "dataTypeChange", "url": "IORequest.html#event_dataTypeChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dataType' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dateFormat", "url": "Calendar.html#config_dateFormat", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "The default date format string which can be overriden for\nlocalization support. The format must be valid according to\n<a href=\"DataType.Date.html\">A.DataType.Date.format</a>."}, {"name": "dateFormat", "url": "config.html#property_dateFormat", "access": "", "host": "config", "params": "", "type": "property", "description": "The default date format"}, {"name": "dateFormatChange", "url": "Calendar.html#event_dateFormatChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dateFormat' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "DatePickerSelect.ATTRS", "url": "DatePickerSelect.html#property_DatePickerSelect.ATTRS", "access": "", "host": "DatePickerSelect", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the DatePickerSelect."}, {"name": "DatePickerSelect.HTML_PARSER", "url": "DatePickerSelect.html#property_DatePickerSelect.HTML_PARSER", "access": "", "host": "DatePickerSelect", "params": "", "type": "property", "description": "Object hash, defining how attribute values are to be parsed from\nmarkup contained in the widget's content box."}, {"name": "DatePickerSelect.NAME", "url": "DatePickerSelect.html#property_DatePickerSelect.NAME", "access": "", "host": "DatePickerSelect", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "dates", "url": "Calendar.html#config_dates", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "Dates which the calendar will show as selected by default."}, {"name": "datesAreEqual", "url": "Assert.DateAssert.html#method_datesAreEqual", "access": "", "host": "Assert.DateAssert", "params": "expected <Date>  The expected date., actual <Date>  The actual date to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a date's month, day, and year are equal to another date's."}, {"name": "datesChange", "url": "Calendar.html#event_datesChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dates' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dateToString", "url": "JSON.html#method_dateToString", "access": "", "host": "JSON", "params": "d <Date>   The Date to serialize", "type": "method", "description": "Serializes a Date instance as a UTC date string.  Used internally by\nstringify.  Override this method if you need Dates serialized in a\ndifferent format."}, {"name": "dayNode", "url": "DatePickerSelect.html#config_dayNode", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "DOM Node to display the day of the DatePickerSelect. If not\nspecified try to query using HTML_PARSER an element inside\ncontentBox which matches <code>aui-datepicker-year</code>."}, {"name": "dayNodeChange", "url": "DatePickerSelect.html#event_dayNodeChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dayNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dayNodeName", "url": "DatePickerSelect.html#config_dayNodeName", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "Name attribute used on the\n<a href=\"DatePickerSelect.html#config_dayNode\">dayNode</a>."}, {"name": "dayNodeNameChange", "url": "DatePickerSelect.html#event_dayNodeNameChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dayNodeName' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dd", "url": "DD.Delegate.html#property_dd", "access": "", "host": "DD.Delegate", "params": "", "type": "property", "description": "A reference to the temporary dd instance used under the hood."}, {"name": "_dd", "url": "SliderBase.html#property__dd", "access": "protected", "host": "SliderBase", "params": "", "type": "property", "description": "The DD.Drag instance linked to the thumb node."}, {"name": "ddm:end", "url": "DD.DDM.html#event_ddm:end", "access": "", "host": "DD.DDM", "params": "", "type": "event", "description": "Fires from the DDM after the DDM finishes, before the drag end events."}, {"name": "ddm:start", "url": "DD.DDM.html#event_ddm:start", "access": "", "host": "DD.DDM", "params": "", "type": "event", "description": "Fires from the DDM before all drag events fire."}, {"name": "DDValue._AXIS_KEYS", "url": "YUI.html#property_DDValue._AXIS_KEYS", "access": "protected", "host": "YUI", "params": "", "type": "property", "description": "Object property names used for respective X and Y axis accessors (e.g.\n&quot;width&quot; vs. &quot;height&quot; for referencing the\nconstraining element's appropriate dimension.)"}, {"name": "DDValue.NAME", "url": "YUI.html#property_DDValue.NAME", "access": "protected", "host": "YUI", "params": "", "type": "property", "description": "Name of the plugin"}, {"name": "_defAddChildFn", "url": "WidgetParent.html#method__defAddChildFn", "access": "protected", "host": "WidgetParent", "params": "event <EventFacade>   The Event object, child <Widget>   The Widget instance, or configuration \nobject for the Widget to be added as a child., index <Number>   Number representing the position at \nwhich the child will be inserted.", "type": "method", "description": "Default addChild handler"}, {"name": "_defAddFn", "url": "Cache.html#method__defAddFn", "access": "protected", "host": "Cache", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>entry (Object)</dt> <dd>The cached entry.</dd>\n</dl>", "type": "method", "description": "Adds entry to cache."}, {"name": "_defAddFn", "url": "AsyncQueue.html#method__defAddFn", "access": "protected", "host": "AsyncQueue", "params": "e <Event>   the event object", "type": "method", "description": "Default functionality for the &quot;add&quot; event.  Adds the callbacks\nin the event facade to the queue. Callbacks successfully added to the\nqueue are present in the event's <code>added</code> property in the\nafter phase."}, {"name": "defaultCategory", "url": "Console.html#config_defaultCategory", "access": "", "host": "Console", "params": "", "type": "config", "description": "If a category is not specified in the Y.log(..) statement, this\ncategory will be used. Categories &quot;info&quot;,\n&quot;warn&quot;, and &quot;error&quot; are also called log level."}, {"name": "defaultCategory", "url": "Plugin.Console.html#config_defaultCategory", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "If a category is not specified in the Y.log(..) statement, this\ncategory will be used. Categories &quot;info&quot;,\n&quot;warn&quot;, and &quot;error&quot; are also called log level."}, {"name": "defaultCategoryChange", "url": "Console.html#event_defaultCategoryChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'defaultCategory' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "defaultCategoryChange", "url": "Plugin.Console.html#event_defaultCategoryChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'defaultCategory' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_defaultCB", "url": "Widget.html#method__defaultCB", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Returns the default value for the contentBox attribute. \nFor the Widget class, this will be the srcNode if provided, otherwise null (resulting in\na new contentBox node instance being created)"}, {"name": "defaultChildType", "url": "Toolbar.html#config_defaultChildType", "access": "", "host": "Toolbar", "params": "", "type": "config", "description": "The default type of child widget to render into the Element"}, {"name": "defaultChildType", "url": "WidgetParent.html#config_defaultChildType", "access": "", "host": "WidgetParent", "params": "", "type": "config", "description": "String representing the default type of the children \nmanaged by this Widget.  Can also supply default type as a constructor\nreference."}, {"name": "defaultChildTypeChange", "url": "Toolbar.html#event_defaultChildTypeChange", "access": "", "host": "Toolbar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'defaultChildType' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "defaultChildTypeChange", "url": "WidgetParent.html#event_defaultChildTypeChange", "access": "", "host": "WidgetParent", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'defaultChildType' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_defaultConstrain", "url": "YUI.html#method__defaultConstrain", "access": "protected", "host": "YUI", "params": "", "type": "method", "description": "Plugs in Y.Plugin.DDConstrained onto the Drag instance.  Default\nconfiguration uses <code>constrain</code> set to the\n<code>dragNode</code>'s <code>parentNode</code>."}, {"name": "defaultFn", "url": "CustomEvent.html#property_defaultFn", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "The default function to execute after event listeners\nhave fire, but only if the default action was not\nprevented."}, {"name": "DEFAULT_GETTER", "url": "Node.html#method_DEFAULT_GETTER", "access": "", "host": "Node", "params": "name <String>  The attribute/property to look up", "type": "method", "description": "The default getter for DOM properties \nCalled with instance context (this === the Node instance)"}, {"name": "DEFAULT_GETTER", "url": "Anim.html#property_DEFAULT_GETTER", "access": "", "host": "Anim", "params": "", "type": "property", "description": "The default getter to use when getting object properties."}, {"name": "defaults", "url": "AsyncQueue.html#property_defaults", "access": "", "host": "AsyncQueue", "params": "", "type": "property", "description": "Callback defaults for this instance.  Static defaults that are not\noverridden are also included."}, {"name": "defaultSelected", "url": "Rating.html#config_defaultSelected", "access": "", "host": "Rating", "params": "", "type": "config", "description": "The number of selected starts when the Rating render."}, {"name": "defaultSelectedChange", "url": "Rating.html#event_defaultSelectedChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'defaultSelected' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "DEFAULT_SETTER", "url": "Node.html#method_DEFAULT_SETTER", "access": "", "host": "Node", "params": "name <String>  The attribute/property being set, val <any>  The value to be set", "type": "method", "description": "The default setter for DOM properties \nCalled with instance context (this === the Node instance)"}, {"name": "DEFAULT_SETTER", "url": "Anim.html#property_DEFAULT_SETTER", "access": "", "host": "Anim", "params": "", "type": "property", "description": "The default setter to use when setting object properties."}, {"name": "defaultSource", "url": "Console.html#config_defaultSource", "access": "", "host": "Console", "params": "", "type": "config", "description": "If a source is not specified in the Y.log(..) statement, this\nsource will be used."}, {"name": "defaultSource", "url": "Plugin.Console.html#config_defaultSource", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "If a source is not specified in the Y.log(..) statement, this\nsource will be used."}, {"name": "defaultSourceChange", "url": "Console.html#event_defaultSourceChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'defaultSource' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "defaultSourceChange", "url": "Plugin.Console.html#event_defaultSourceChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'defaultSource' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "defaultState", "url": "Toolbar.html#config_defaultState", "access": "", "host": "Toolbar", "params": "", "type": "config", "description": "Receives a default interaction state."}, {"name": "defaultState", "url": "ButtonItem.html#config_defaultState", "access": "", "host": "ButtonItem", "params": "", "type": "config", "description": "Whether to apply the default interaction state to the button"}, {"name": "defaultStateChange", "url": "Toolbar.html#event_defaultStateChange", "access": "", "host": "Toolbar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'defaultState' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "defaultStateChange", "url": "ButtonItem.html#event_defaultStateChange", "access": "", "host": "ButtonItem", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'defaultState' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "DEFAULT_UNIT", "url": "Anim.html#property_DEFAULT_UNIT", "access": "", "host": "Anim", "params": "", "type": "property", "description": "The default unit to use with properties that pass the RE_DEFAULT_UNIT test."}, {"name": "defaultVisibility", "url": "Plugin.ConsoleFilters.html#config_defaultVisibility", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "config", "description": "Default visibility applied to new categories and sources."}, {"name": "defaultVisibilityChange", "url": "Plugin.ConsoleFilters.html#event_defaultVisibilityChange", "access": "", "host": "Plugin.ConsoleFilters", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'defaultVisibility' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_defCancelFn", "url": "Editable.html#method__defCancelFn", "access": "protected", "host": "Editable", "params": "event <EventFacade>  cancel event facade", "type": "method", "description": "Fires the cancel event."}, {"name": "_defDataFn", "url": "DataSource.Local.html#method__defDataFn", "access": "protected", "host": "DataSource.Local", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n</dl>", "type": "method", "description": "Normalizes raw data into a response that includes results and meta properties."}, {"name": "_defDestroyFn", "url": "Base.html#method__defDestroyFn", "access": "protected", "host": "Base", "params": "e <EventFacade>  Event object", "type": "method", "description": "Default destroy event handler"}, {"name": "_defEntryFn", "url": "Console.html#method__defEntryFn", "access": "protected", "host": "Console", "params": "e <Event>   The Custom event carrying the message in its payload", "type": "method", "description": "Buffers incoming message objects and schedules the printing."}, {"name": "_defEntryFn", "url": "Plugin.Console.html#method__defEntryFn", "access": "protected", "host": "Plugin.Console", "params": "e <Event>   The Custom event carrying the message in its payload", "type": "method", "description": "Buffers incoming message objects and schedules the printing."}, {"name": "_defExecFn", "url": "AsyncQueue.html#method__defExecFn", "access": "protected", "host": "AsyncQueue", "params": "e <Event>   the event object", "type": "method", "description": "Default functionality for the &quot;execute&quot; event.  Executes the\ncallback function"}, {"name": "_defFlushFn", "url": "Cache.html#method__defFlushFn", "access": "protected", "host": "Cache", "params": "e <Event.Facade>   Event Facade object.", "type": "method", "description": "Flushes cache."}, {"name": "_defInitFn", "url": "Base.html#method__defInitFn", "access": "protected", "host": "Base", "params": "e <EventFacade>  Event object, with a cfg property which \nrefers to the configuration object passed to the constructor.", "type": "method", "description": "Default init event handler"}, {"name": "_defMouseUpFn", "url": "Resize.html#method__defMouseUpFn", "access": "protected", "host": "Resize", "params": "event <EventFacade>  The Event object", "type": "method", "description": "Default resize:mouseUp handler"}, {"name": "_defPaginatorClickFn", "url": "TreeNodeIO.html#method__defPaginatorClickFn", "access": "protected", "host": "TreeNodeIO", "params": "event <EventFacade>  The Event object", "type": "method", "description": "Default paginatorClick event handler. Increment the\n<code>paginator.start</code> to the next <code>paginator.limit</code>."}, {"name": "DEF_PARENT_NODE", "url": "Widget.html#property_DEF_PARENT_NODE", "access": "", "host": "Widget", "params": "", "type": "property", "description": "Default node to render the bounding box to. If not set,\nwill default to the current document body."}, {"name": "_defPromoteFn", "url": "AsyncQueue.html#method__defPromoteFn", "access": "protected", "host": "AsyncQueue", "params": "e <Event>   the custom event", "type": "method", "description": "<p>Default functionality for the &quot;promote&quot; event.  Promotes the\nnamed callback to the head of the queue.</p>\n<p>The event object will contain a property &quot;callback&quot;, which\nholds the id of a callback or the callback object itself.</p>"}, {"name": "_defRailMouseDownFn", "url": "ClickableRail.html#method__defRailMouseDownFn", "access": "protected", "host": "ClickableRail", "params": "e <Event>   the EventFacade for the railMouseDown custom event", "type": "method", "description": "Default behavior for the railMouseDown event.  Centers the thumb at\nthe click location and passes control to the DDM to behave as though\nthe thumb itself were clicked in preparation for a drag operation."}, {"name": "_defRatingItemClickFn", "url": "Rating.html#method__defRatingItemClickFn", "access": "protected", "host": "Rating", "params": "event <EventFacade>  itemClick event facade", "type": "method", "description": "Fires the itemClick event."}, {"name": "_defRatingItemOutFn", "url": "Rating.html#method__defRatingItemOutFn", "access": "protected", "host": "Rating", "params": "event <EventFacade>  itemOut event facade", "type": "method", "description": "Fires the itemOut event."}, {"name": "_defRatingItemOverFn", "url": "Rating.html#method__defRatingItemOverFn", "access": "protected", "host": "Rating", "params": "event <EventFacade>  itemOver event facade", "type": "method", "description": "Fires the itemOver event."}, {"name": "_defRatingItemSelectFn", "url": "Rating.html#method__defRatingItemSelectFn", "access": "protected", "host": "Rating", "params": "event <EventFacade>  itemSelect event facade", "type": "method", "description": "Fires the itemSelect event."}, {"name": "_defRemoveChildFn", "url": "WidgetParent.html#method__defRemoveChildFn", "access": "protected", "host": "WidgetParent", "params": "event <EventFacade>   The Event object, child <Widget>   The Widget instance to be removed., index <Number>   Number representing the index of the Widget to \nbe removed.", "type": "method", "description": "Default removeChild handler"}, {"name": "_defRemoveFn", "url": "AsyncQueue.html#method__defRemoveFn", "access": "protected", "host": "AsyncQueue", "params": "e <Event>   the custom event", "type": "method", "description": "<p>Default functionality for the &quot;remove&quot; event.  Removes the\ncallback from the queue.</p>\n<p>The event object will contain a property &quot;callback&quot;, which\nholds the id of a callback or the callback object itself.</p>"}, {"name": "_defRenderFn", "url": "Widget.html#method__defRenderFn", "access": "protected", "host": "Widget", "params": "e <EventFacade>  The Event object, parentNode <Node>  The parent node to render to, if passed in to the <code>render</code> method", "type": "method", "description": "Default render handler"}, {"name": "_defRequestFn", "url": "DataSource.Local.html#method__defRequestFn", "access": "protected", "host": "DataSource.Local", "params": "e <Event.Facade>   Event Facadewith the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n</dl>", "type": "method", "description": "Manages request/response transaction. Must fire <code>response</code>\nevent when response is received. This method should be implemented by\nsubclasses to achieve more complex behavior such as accessing remote data."}, {"name": "_defRequestFn", "url": "DataSource.IO.html#method__defRequestFn", "access": "protected", "host": "DataSource.IO", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n</dl>", "type": "method", "description": "Passes query string to IO. Fires <code>response</code> event when\nresponse is received asynchronously."}, {"name": "_defRequestFn", "url": "DataSource.Get.html#method__defRequestFn", "access": "protected", "host": "DataSource.Get", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n</dl>", "type": "method", "description": "Passes query string to Get Utility. Fires <code>response</code> event when\nresponse is received asynchronously."}, {"name": "_defRequestFn", "url": "DataSource.Function.html#method__defRequestFn", "access": "protected", "host": "DataSource.Function", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n</dl>", "type": "method", "description": "Passes query string to IO. Fires <code>response</code> event when\nresponse is received asynchronously."}, {"name": "_defResetFn", "url": "Console.html#method__defResetFn", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Clears the console, resets the startTime attribute, enables and\nunpauses the widget."}, {"name": "_defResetFn", "url": "Plugin.Console.html#method__defResetFn", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Clears the console, resets the startTime attribute, enables and\nunpauses the widget."}, {"name": "_defResizeEndFn", "url": "Resize.html#method__defResizeEndFn", "access": "protected", "host": "Resize", "params": "event <EventFacade>  The Event object", "type": "method", "description": "Default resize:end handler"}, {"name": "_defResizeFn", "url": "Resize.html#method__defResizeFn", "access": "protected", "host": "Resize", "params": "event <EventFacade>  The Event object", "type": "method", "description": "Default resize:resize handler"}, {"name": "_defResizeStartFn", "url": "Resize.html#method__defResizeStartFn", "access": "protected", "host": "Resize", "params": "event <EventFacade>  The Event object", "type": "method", "description": "Default resize:start handler"}, {"name": "_defResponseFn", "url": "DataSource.Local.html#method__defResponseFn", "access": "protected", "host": "DataSource.Local", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n<dt>response (Object)</dt> <dd>Normalized response object with the following properties:\n<dl>\n<dt>results (Object)</dt> <dd>Parsed results.</dd>\n<dt>meta (Object)</dt> <dd>Parsed meta data.</dd>\n<dt>error (Boolean)</dt> <dd>Error flag.</dd>\n</dl>\n</dd>\n</dl>", "type": "method", "description": "Sends data as a normalized response to callback."}, {"name": "_defSaveFn", "url": "Editable.html#method__defSaveFn", "access": "protected", "host": "Editable", "params": "event <EventFacade>  save event facade", "type": "method", "description": "Fires the save event."}, {"name": "_defShiftFn", "url": "AsyncQueue.html#method__defShiftFn", "access": "protected", "host": "AsyncQueue", "params": "e <Event>   The event object", "type": "method", "description": "Default functionality for the &quot;shift&quot; event.  Shifts the\ncallback stored in the event object's <em>callback</em> property from\nthe queue if it is the first item."}, {"name": "_defStartEditingFn", "url": "Editable.html#method__defStartEditingFn", "access": "protected", "host": "Editable", "params": "event <EventFacade>  startEditing event facade", "type": "method", "description": "Fires the startEditing event."}, {"name": "_defStopEditingFn", "url": "Editable.html#method__defStopEditingFn", "access": "protected", "host": "Editable", "params": "event <EventFacade>  stopEditing event facade", "type": "method", "description": "Fires the stopEditing event."}, {"name": "_defThumbMoveFn", "url": "SliderValueRange.html#method__defThumbMoveFn", "access": "protected", "host": "SliderValueRange", "params": "e < EventFacade >   The host's thumbMove event", "type": "method", "description": "Dispatch the new position of the thumb into the value setting\noperations."}, {"name": "DEF_UNIT", "url": "Widget.html#property_DEF_UNIT", "access": "", "host": "Widget", "params": "", "type": "property", "description": "Default unit to use for dimension values"}, {"name": "delay", "url": "Test.Wait.html#property_delay", "access": "", "host": "Test.Wait", "params": "", "type": "property", "description": "The delay before running the segment of code."}, {"name": "delay", "url": "LiveSearch.html#config_delay", "access": "", "host": "LiveSearch", "params": "", "type": "config", "description": "Number of milliseconds the filter will be applied to the node list\nafter the user stop typing."}, {"name": "delay", "url": "ImageGallery.html#config_delay", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "Delay in milliseconds to change to the next image."}, {"name": "_delay", "url": "DelayedTask.html#property__delay", "access": "protected", "host": "DelayedTask", "params": "", "type": "property", "description": "Stores the passed <code>delay</code> attribute."}, {"name": "delay", "url": "DelayedTask.html#method_delay", "access": "", "host": "DelayedTask", "params": "delay <Number>  Delay in milliseconds., newFn <function>  Callback., newScope <Object>  Context object. Optional., newArgs <Object>  0..n additional arguments that should be provided to the listener.", "type": "method", "description": "<p>This function is responsible to execute the user callback, passed in\nthe <code>constructor</code> after <code>delay</code> milliseconds.</p>\nExample:\n<pre><code>// executes after 1000ms the callback\ndelayed.delay(1000);</code></pre>"}, {"name": "delayChange", "url": "LiveSearch.html#event_delayChange", "access": "", "host": "LiveSearch", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'delay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "delayChange", "url": "ImageGallery.html#event_delayChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'delay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "delegate", "url": "Node.html#method_delegate", "access": "", "host": "Node", "params": "type <String>   the event type to delegate, fn <Function>   the function to execute, selector <String>   a selector that must match the target of the event.", "type": "method", "description": "Functionality to make the node a delegated event container"}, {"name": "delegate", "url": "Sortable.html#property_delegate", "access": "", "host": "Sortable", "params": "", "type": "property", "description": "A reference to the DD.Delegate instance."}, {"name": "delegate", "url": "YUI.html#method_delegate", "access": "", "host": "YUI", "params": "type <string>   the event type to delegate, fn <function>   the callback function to execute.  This function\nwill be provided the event object for the delegated event., el <string|node>   the element that is the delegation container, spec <string>   a selector that must match the target of the\nevent., context <Object>  optional argument that specifies what 'this' refers to., args* <Object>  0..n additional arguments to pass on to the callback function.\nThese arguments will be added after the event object.", "type": "method", "description": "Sets up event delegation on a container element.  The delegated event\nwill use a supplied selector to test if the target or one of the\ndescendants of the target match it.  The supplied callback function \nwill only be executed if a match was encountered, and, in fact, \nwill be executed for each element that matches if you supply an \nambiguous selector.\nThe event object for the delegated event is supplied to the callback\nfunction.  It is modified slightly in order to support all properties\nthat may be needed for event delegation.  'currentTarget' is set to\nthe element that matched the delegation specifcation.  'container' is\nset to the element that the listener is bound to (this normally would\nbe the 'currentTarget')."}, {"name": "_delegateDOM", "url": "Paginator.html#method__delegateDOM", "access": "protected", "host": "Paginator", "params": "", "type": "method", "description": "Delegate DOM events on the Paginator UI."}, {"name": "_delegateDOM", "url": "TreeView.html#method__delegateDOM", "access": "protected", "host": "TreeView", "params": "", "type": "method", "description": "Delegate events."}, {"name": "delete", "url": "Do.Method.html#method_delete", "access": "", "host": "Do.Method", "params": "sid <string>   the subscriber id, fn <Function>   the function to execute, when <string>   when to execute the function", "type": "method", "description": "Unregister a aop subscriber"}, {"name": "delimChar", "url": "AutoComplete.html#config_delimChar", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "The character used to indicate the beginning or ending of a new value. Most commonly used\nis a \",\"."}, {"name": "delimCharChange", "url": "AutoComplete.html#event_delimCharChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'delimChar' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "deltaXY", "url": "DD.Drag.html#property_deltaXY", "access": "", "host": "DD.Drag", "params": "", "type": "property", "description": "The offset of the mouse position to the element's position"}, {"name": "descendants", "url": "plugin.NodeFocusManager.html#config_descendants", "access": "", "host": "plugin.NodeFocusManager", "params": "", "type": "config", "description": "String representing the CSS selector used to define the descendant Nodes \nwhose focus should be managed."}, {"name": "descendantsChange", "url": "plugin.NodeFocusManager.html#event_descendantsChange", "access": "", "host": "plugin.NodeFocusManager", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'descendants' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "deselectAll", "url": "WidgetParent.html#method_deselectAll", "access": "", "host": "WidgetParent", "params": "", "type": "method", "description": "Deselects all children."}, {"name": "destroy", "url": "Node.html#method_destroy", "access": "", "host": "Node", "params": "recursivePurge <Boolean>  (optional) Whether or not to remove listeners from the\nnode's subtree (default is false)", "type": "method", "description": "Nulls internal node references, removes any plugins and event listeners"}, {"name": "destroy", "url": "Plugin.Align.html#method_destroy", "access": "", "host": "Plugin.Align", "params": "", "type": "method", "description": "Removes the resize handler, if any. This is called automatically\nwhen unplugged from the host node."}, {"name": "destroy", "url": "Plugin.Shim.html#method_destroy", "access": "", "host": "Plugin.Shim", "params": "", "type": "method", "description": "Removes the shim and destroys the plugin"}, {"name": "destroy", "url": "Test.Reporter.html#method_destroy", "access": "", "host": "Test.Reporter", "params": "", "type": "method", "description": "Cleans up the memory associated with the TestReporter, removing DOM elements\nthat were created."}, {"name": "destroy", "url": "LiveSearch.html#method_destroy", "access": "protected", "host": "LiveSearch", "params": "", "type": "method", "description": "Descructor lifecycle implementation for the LiveSearch class.\nPurges events attached to the node (and all child nodes)."}, {"name": "destroy", "url": "ImageGallery.html#method_destroy", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Descructor lifecycle implementation for the ImageGallery class.\nPurges events attached to the node (and all child nodes)."}, {"name": "destroy", "url": "CharCounter.html#method_destroy", "access": "protected", "host": "CharCounter", "params": "", "type": "method", "description": "Descructor lifecycle implementation for the CharCounter class.\nPurges events attached to the node (and all child nodes)."}, {"name": "destroy", "url": "Base.html#method_destroy", "access": "", "host": "Base", "params": "", "type": "method", "description": "<p>\nDestroy lifecycle method. Fires the destroy\nevent, prior to invoking destructors for the\nclass hierarchy.\n</p>\n<p>\nSubscribers to the destroy\nevent can invoke preventDefault on the event object, to prevent destruction\nfrom proceeding.\n</p>"}, {"name": "destroy", "url": "Base.html#event_destroy", "access": "", "host": "Base", "params": "e <EventFacade>  Event object", "type": "event", "description": "<p>\nLifecycle event for the destroy phase, \nfired prior to destruction. Invoking the preventDefault \nmethod on the event object provided to subscribers will \nprevent destruction from proceeding.\n</p>\n<p>\nSubscribers to the \"after\" moment of this event, will be notified\nafter destruction is complete (and as a result cannot prevent\ndestruction).\n</p>"}, {"name": "_destroyChildren", "url": "WidgetParent.html#method__destroyChildren", "access": "protected", "host": "WidgetParent", "params": "", "type": "method", "description": "Destroys all child Widgets for the parent.\n<p>\nThis method is invoked before the destructor is invoked for the Widget \nclass using YUI's aop infrastructure.\n</p>"}, {"name": "destroyed", "url": "Base.html#config_destroyed", "access": "", "host": "Base", "params": "", "type": "config", "description": "Flag indicating whether or not this object\nhas been through the destroy lifecycle phase."}, {"name": "destroyedChange", "url": "Base.html#event_destroyedChange", "access": "", "host": "Base", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'destroyed' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "destroyOnClose", "url": "Dialog.html#config_destroyOnClose", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "Invoke the <a href=\"Dialog.html#method_destroy\">destroy</a>\nmethod when the dialog is closed (i.e., remove the Dialog\n<code>boundingBox</code> from the body, purge events etc)."}, {"name": "destroyOnCloseChange", "url": "Dialog.html#event_destroyOnCloseChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'destroyOnClose' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "destructor", "url": "Plugin.ConsoleFilters.html#method_destructor", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "method", "description": "Removes the plugin UI and unwires events."}, {"name": "destructor", "url": "Resize.html#method_destructor", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Descructor lifecycle implementation for the Resize class. Purges events attached\nto the node (and all child nodes) and removes the Resize handles."}, {"name": "destructor", "url": "Paginator.html#method_destructor", "access": "protected", "host": "Paginator", "params": "", "type": "method", "description": "Descructor lifecycle implementation for the Paginator class.\nPurges events attached to the node (and all child nodes)."}, {"name": "destructor", "url": "Widget.html#method_destructor", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Destructor lifecycle implementation for the Widget class. Purges events attached\nto the bounding box (and all child nodes) and removes the Widget from the \nlist of registered widgets."}, {"name": "destructor", "url": "ImageViewer.html#method_destructor", "access": "protected", "host": "ImageViewer", "params": "", "type": "method", "description": "Descructor lifecycle implementation for the ImageViewer class.\nPurges events attached to the node (and all child nodes)."}, {"name": "destructor", "url": "Plugin.WidgetAnim.html#method_destructor", "access": "", "host": "Plugin.WidgetAnim", "params": "", "type": "method", "description": "The initializer destructor implementation. Responsible for destroying the configured\nanimation instances."}, {"name": "destructor", "url": "Dialog.html#method_destructor", "access": "protected", "host": "Dialog", "params": "", "type": "method", "description": "Descructor lifecycle implementation for the Dialog class.\nPurges events attached to the node (and all child nodes)."}, {"name": "destructor", "url": "Console.html#method_destructor", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Tears down the instance, flushing event subscriptions and purging the UI."}, {"name": "destructor", "url": "Plugin.Console.html#method_destructor", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Tears down the instance, flushing event subscriptions and purging the UI."}, {"name": "destructor", "url": "OverlayManager.html#method_destructor", "access": "protected", "host": "OverlayManager", "params": "", "type": "method", "description": "Descructor lifecycle implementation for the OverlayManager class.\nPurges events attached to the node (and all child nodes)."}, {"name": "destructor", "url": "Plugin.Base.html#method_destructor", "access": "", "host": "Plugin.Base", "params": "", "type": "method", "description": "Destructor lifecycle implementation.\nRemoves any event listeners or injected methods applied by the Plugin"}, {"name": "destructor", "url": "YUI.html#method_destructor", "access": "protected", "host": "YUI", "params": "", "type": "method", "description": "Detach event listeners."}, {"name": "destructor", "url": "IORequest.html#method_destructor", "access": "protected", "host": "IORequest", "params": "", "type": "method", "description": "Descructor lifecycle implementation for the IORequest class.\nPurges events attached to the node (and all child nodes)."}, {"name": "detach", "url": "NodeList.html#method_detach", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Called on each Node instance"}, {"name": "detach", "url": "Event.html#method_detach", "access": "", "host": "Event", "params": "type <String>  the type of event to remove., fn <Function>  the method the event invokes.  If fn is\nundefined, then all event handlers for the type of event are \nremoved., el <String|HTMLElement|Array|NodeList|EventHandle>  An \nevent handle, an id, an element reference, or a collection \nof ids and/or elements to remove the listener from.", "type": "method", "description": "Removes an event listener.  Supports the signature the event was bound\nwith, but the preferred way to remove listeners is using the handle\nthat is returned when using Y.on"}, {"name": "detach", "url": "SyntheticEvent.html#method_detach", "access": "protected", "host": "SyntheticEvent", "params": "type < String >   the synthetic event name, fn <Function>   the callback function, el <HTMLElement | Node | HTMLElement[] | NodeList>  \nsubscription target(s)", "type": "method", "description": "Initial receiver of the event detach.  Passes off control to the\nimplementation <code>detach</code> specified in the constructor\nconfiguration after doing the necessary infrastructure cleanup.\nNote that the implementation function specified in the configuration\nwill be called once for each node passed in <code>el</code>, and each\nwill be a Node instance."}, {"name": "detach", "url": "Do.html#method_detach", "access": "", "host": "Do", "params": "handle <string>   the subscription handle", "type": "method", "description": "Detach a before or after subscription"}, {"name": "detach", "url": "EventHandle.html#method_detach", "access": "", "host": "EventHandle", "params": "", "type": "method", "description": "Detaches this subscriber"}, {"name": "detach", "url": "CustomEvent.html#method_detach", "access": "", "host": "CustomEvent", "params": "fn <Function>   The subscribed function to remove, if not supplied\nall will be removed, context <Object>  The context object passed to subscribe.", "type": "method", "description": "Detach listeners."}, {"name": "detach", "url": "EventTarget.html#method_detach", "access": "", "host": "EventTarget", "params": "type <string|Object>     Either the handle to the subscriber or the \ntype of event.  If the type\nis not specified, it will attempt to remove\nthe listener from all hosted events., fn <Function>     The subscribed function to unsubscribe, if not\nsupplied, all subscribers will be removed., context <Object>      The custom object passed to subscribe.  This is\noptional, but if supplied will be used to\ndisambiguate multiple listeners that are the same\n(e.g., you subscribe many object using a function\nthat lives on the prototype)", "type": "method", "description": "Detach one or more listeners the from the specified event"}, {"name": "detachAll", "url": "NodeList.html#method_detachAll", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Called on each Node instance"}, {"name": "detachAll", "url": "CustomEvent.html#method_detachAll", "access": "", "host": "CustomEvent", "params": "", "type": "method", "description": "Removes all listeners"}, {"name": "detachAll", "url": "EventTarget.html#method_detachAll", "access": "", "host": "EventTarget", "params": "type <string>     The type, or name of the event", "type": "method", "description": "Removes all listeners from the specified event.  If the event type\nis not specified, all listeners from all hosted custom events will\nbe removed."}, {"name": "_detachEventHandlers", "url": "plugin.NodeFocusManager.html#method__detachEventHandlers", "access": "protected", "host": "plugin.NodeFocusManager", "params": "", "type": "method", "description": "Detaches all event handlers used by the Focus Manager."}, {"name": "_detachKeyHandler", "url": "plugin.NodeFocusManager.html#method__detachKeyHandler", "access": "protected", "host": "plugin.NodeFocusManager", "params": "", "type": "method", "description": "Detaches the \"key\" event handlers used to support the \"keys\"\nattribute."}, {"name": "details", "url": "EventFacade.html#property_details", "access": "", "host": "EventFacade", "params": "", "type": "property", "description": "The arguments passed to fire"}, {"name": "Dialog.ATTRS", "url": "Dialog.html#property_Dialog.ATTRS", "access": "", "host": "Dialog", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the Dialog."}, {"name": "Dialog.NAME", "url": "Dialog.html#property_Dialog.NAME", "access": "", "host": "Dialog", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "direction", "url": "Anim.html#config_direction", "access": "", "host": "Anim", "params": "", "type": "config", "description": "How iterations of the animation should behave. \nPossible values are \"normal\" and \"alternate\".\nNormal will repeat the animation, alternate will reverse on every other pass."}, {"name": "direction", "url": "TreeViewDD.html#property_direction", "access": "protected", "host": "TreeViewDD", "params": "", "type": "property", "description": "Direction of the drag (i.e. could be 'up' or 'down')."}, {"name": "directionChange", "url": "Anim.html#event_directionChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'direction' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dirty", "url": "Loader.html#property_dirty", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Flag to indicate the dependency tree needs to be recomputed\nif insert is called again."}, {"name": "disable", "url": "StyleSheet.html#method_disable", "access": "", "host": "StyleSheet", "params": "", "type": "method", "description": "Disable all the rules in the sheet.  Rules may be changed while the\nStyleSheet is disabled."}, {"name": "disable", "url": "Widget.html#method_disable", "access": "", "host": "Widget", "params": "", "type": "method", "description": "Set the Widget's \"disabled\" attribute to \"true\"."}, {"name": "disabled", "url": "Rating.html#config_disabled", "access": "", "host": "Rating", "params": "", "type": "config", "description": "Whether the Rating is disabled or not. Disabled Ratings don't allow\nhover or click, just display selected stars."}, {"name": "disabled", "url": "Widget.html#config_disabled", "access": "", "host": "Widget", "params": "", "type": "config", "description": "Boolean indicating if the Widget should be disabled. The disabled implementation\nis left to the specific classes extending widget."}, {"name": "disabledChange", "url": "Rating.html#event_disabledChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "disabledChange", "url": "Widget.html#event_disabledChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'disabled' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "disableLogging", "url": "Test.Runner.html#method_disableLogging", "access": "", "host": "Test.Runner", "params": "", "type": "method", "description": "Disable logging via Y.log(). Test output will not be visible unless\nTestRunner events are subscribed to."}, {"name": "_dispatch", "url": "ParseContent.html#method__dispatch", "access": "protected", "host": "ParseContent", "params": "output <Object>  Object containing the reference for the fragment and the extracted <code>script</code> tags.", "type": "method", "description": "Loop trough all extracted <code>script</code> tags and evaluate them."}, {"name": "doAfter", "url": "Plugin.Base.html#method_doAfter", "access": "", "host": "Plugin.Base", "params": "strMethod <String>   The event to listen for, or method to inject logic after., fn <Function>   The handler function. For events, the \"after\" moment listener. For methods, the function to execute after the given method is executed., context <Object>   An optional context to call the handler with. The default context is the plugin instance.", "type": "method", "description": "Listens for the \"after\" moment of events fired by the host, \nor injects code \"after\" a given method on the host."}, {"name": "doBefore", "url": "Plugin.Base.html#method_doBefore", "access": "", "host": "Plugin.Base", "params": "strMethod <String>   The event to listen for, or method to inject logic before., fn <Function>   The handler function. For events, the \"on\" moment listener. For methods, the function to execute before the given method is executed., context <Object>   An optional context to call the handler with. The default context is the plugin instance.", "type": "method", "description": "Listens for the \"on\" moment of events fired by the host, \nor injects code \"before\" a given method on the host."}, {"name": "_doBeforeCreate", "url": "A.HTML5.html#method__doBeforeCreate", "access": "protected", "host": "A.HTML5", "params": "html <String>  HTML content, doc <String> , tag <String> ", "type": "method", "description": "AOP listener to the A.DOM._create method. This method\nintercepts all the calls to the A.DOM._create and append the\ngenerated fragment to <a\nhref=\"A.HTML5.html#property_A.HTML._fragHTML5Shived\">A.HTML._fragHTML5Shived</a>,\nthis fixes the IE bug for painting the HTML5 nodes on the HTML\nfragment."}, {"name": "doBeforeExpandContainer", "url": "AutoComplete.html#method_doBeforeExpandContainer", "access": "", "host": "AutoComplete", "params": "query <String>  The query that was submitted to the data source, allResults <Object>  The parsed results", "type": "method", "description": "An overridable method that is executed before the result container is shown.\nThe method can return false to prevent the container from being shown."}, {"name": "doBeforeLoadData", "url": "AutoComplete.html#method_doBeforeLoadData", "access": "", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "An overridable method that is executed before the result overlay is loaded with results."}, {"name": "doc", "url": "config.html#property_doc", "access": "", "host": "config", "params": "", "type": "property", "description": "The document associated with the 'win' configuration."}, {"name": "docHeight", "url": "Node.html#config_docHeight", "access": "", "host": "Node", "params": "", "type": "config", "description": "Document height"}, {"name": "docHeight", "url": "DOM.html#method_docHeight", "access": "", "host": "DOM", "params": "", "type": "method", "description": "Document height"}, {"name": "docScrollX", "url": "Node.html#config_docScrollX", "access": "", "host": "Node", "params": "", "type": "config", "description": "Amount page has been scroll vertically"}, {"name": "docScrollX", "url": "DOM.html#method_docScrollX", "access": "", "host": "DOM", "params": "", "type": "method", "description": "Amount page has been scroll horizontally"}, {"name": "docScrollY", "url": "Node.html#config_docScrollY", "access": "", "host": "Node", "params": "", "type": "config", "description": "Amount page has been scroll horizontally"}, {"name": "docScrollY", "url": "DOM.html#method_docScrollY", "access": "", "host": "DOM", "params": "", "type": "method", "description": "Amount page has been scroll vertically"}, {"name": "docWidth", "url": "DOM.html#method_docWidth", "access": "", "host": "DOM", "params": "", "type": "method", "description": "Document width"}, {"name": "doesNotContain", "url": "Assert.ArrayAssert.html#method_doesNotContain", "access": "", "host": "Assert.ArrayAssert", "params": "needle <Object>  The value that is expected in the array., haystack <Array>  An array of values., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is not present in an array. This uses the triple equals \nAsserts that a value is not present in an array. This uses the triple equals \nsign so no type cohersion may occur."}, {"name": "doesNotContainItems", "url": "Assert.ArrayAssert.html#method_doesNotContainItems", "access": "", "host": "Assert.ArrayAssert", "params": "needles <Object[]>  An array of values that are not expected in the array., haystack <Array>  An array of values to check., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a set of values are not present in an array. This uses the triple equals \nsign so no type cohersion may occur. For this assertion to pass, all values must\nnot be found."}, {"name": "doesNotContainMatch", "url": "Assert.ArrayAssert.html#method_doesNotContainMatch", "access": "", "host": "Assert.ArrayAssert", "params": "matcher <Function>  A function that returns true if the items matches or false if not., haystack <Array>  An array of values., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that no values matching a condition are present in an array. This uses\na function to determine a match."}, {"name": "DOM_EVENTS", "url": "Node.html#property_DOM_EVENTS", "access": "", "host": "Node", "params": "", "type": "property", "description": "List of events that route to DOM events"}, {"name": "domId", "url": "ImgLoadImgObj.html#config_domId", "access": "", "host": "ImgLoadImgObj", "params": "", "type": "config", "description": "HTML DOM id of the image element."}, {"name": "domIdChange", "url": "ImgLoadImgObj.html#event_domIdChange", "access": "", "host": "ImgLoadImgObj", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'domId' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "DOMReady", "url": "Event.html#property_DOMReady", "access": "", "host": "Event", "params": "", "type": "property", "description": "True when the document is initially usable"}, {"name": "domready", "url": "YUI.html#event_domready", "access": "", "host": "YUI", "params": "", "type": "event", "description": "The domready event fires at the moment the browser's DOM is\nusable. In most cases, this is before images are fully\ndownloaded, allowing you to provide a more responsive user\ninterface.\nIn YUI 3, domready subscribers will be notified immediately if\nthat moment has already passed when the subscription is created.\nOne exception is if the yui.js file is dynamically injected into\nthe page.  If this is done, you must tell the YUI instance that\nyou did this in order for DOMReady (and window load events) to\nfire normally.  That configuration option is 'injected' -- set\nit to true if the yui.js script is not included inline.\nThis method is part of the 'event-ready' module, which is a\nsubmodule of 'event'."}, {"name": "drag:addHandle", "url": "DD.Drag.html#event_drag:addHandle", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl><dt>handle</dt><dd>The handle that was added.</dd></dl>", "type": "event", "description": "Fires after a handle is added."}, {"name": "drag:addInvalid", "url": "DD.Drag.html#event_drag:addInvalid", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl><dt>handle</dt><dd>The handle that was added.</dd></dl>", "type": "event", "description": "Fires after an invalid selector is added."}, {"name": "drag:afterMouseDown", "url": "DD.Drag.html#event_drag:afterMouseDown", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl><dt>ev</dt><dd>The original mousedown event.</dd></dl>", "type": "event", "description": "Fires after the mousedown event has been cleared."}, {"name": "drag:align", "url": "DD.Drag.html#event_drag:align", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>pageX</dt><dd>The current node position X.</dd>\n<dt>pageY</dt><dd>The current node position Y.</dd>\n</dl>", "type": "event", "description": "Fires when this node is aligned."}, {"name": "drag:drag", "url": "DD.Drag.html#event_drag:drag", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>pageX</dt><dd>The current node position X.</dd>\n<dt>pageY</dt><dd>The current node position Y.</dd>\n<dt>scroll</dt><dd>Should a scroll action occur.</dd>\n<dt>info</dt><dd>Object hash containing calculated XY arrays: start, xy, delta, offset</dd>\n</dl>", "type": "event", "description": "Fires every mousemove during a drag operation."}, {"name": "drag:drophit", "url": "DD.Drag.html#event_drag:drophit", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>drop</dt><dd>The best guess on what was dropped on.</dd>\n<dt>drag</dt><dd>The drag object at the time of the event.</dd>\n<dt>others</dt><dd>An array of all the other drop targets that was dropped on.</dd>\n</dl>", "type": "event", "description": "Fires when this node is dropped on a valid Drop Target. (Fired from dd-ddm-drop)"}, {"name": "drag:dropmiss", "url": "DD.Drag.html#event_drag:dropmiss", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>pageX</dt><dd>The current node position X.</dd>\n<dt>pageY</dt><dd>The current node position Y.</dd>\n</dl>", "type": "event", "description": "Fires when this node is dropped on an invalid Drop Target. (Fired from dd-ddm-drop)"}, {"name": "drag:end", "url": "DD.Drag.html#event_drag:end", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>pageX</dt><dd>The current node position X.</dd>\n<dt>pageY</dt><dd>The current node position Y.</dd>\n<dt>startTime</dt><dd>The startTime of the event, from the start event.</dd>\n<dt>endTime</dt><dd>The endTime of the event. getTime on the current Date object.</dd>\n</dl>", "type": "event", "description": "Fires at the end of a drag operation."}, {"name": "drag:enter", "url": "DD.Drag.html#event_drag:enter", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>drop</dt><dd>The drop object at the time of the event.</dd>\n<dt>drag</dt><dd>The drag object at the time of the event.</dd>\n</dl>", "type": "event", "description": "Fires when this node enters a Drop Target. (Fired from dd-drop)"}, {"name": "drag:exit", "url": "DD.Drag.html#event_drag:exit", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>drop</dt><dd>The drop object at the time of the event.</dd>\n</dl>", "type": "event", "description": "Fires when this node exits a Drop Target. (Fired from dd-drop)"}, {"name": "drag:mouseDown", "url": "DD.Drag.html#event_drag:mouseDown", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl><dt>ev</dt><dd>The original mousedown event.</dd></dl>", "type": "event", "description": "Handles the mousedown DOM event, checks to see if you have a valid handle then starts the drag timers."}, {"name": "drag:over", "url": "DD.Drag.html#event_drag:over", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>drop</dt><dd>The drop object at the time of the event.</dd>\n<dt>drag</dt><dd>The drag object at the time of the event.</dd>\n</dl>", "type": "event", "description": "Fires when this node is over a Drop Target. (Fired from dd-drop)"}, {"name": "drag:removeHandle", "url": "DD.Drag.html#event_drag:removeHandle", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl><dt>handle</dt><dd>The handle that was removed.</dd></dl>", "type": "event", "description": "Fires after a handle is removed."}, {"name": "drag:removeInvalid", "url": "DD.Drag.html#event_drag:removeInvalid", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl><dt>handle</dt><dd>The handle that was removed.</dd></dl>", "type": "event", "description": "Fires after an invalid selector is removed."}, {"name": "drag:start", "url": "DD.Drag.html#event_drag:start", "access": "", "host": "DD.Drag", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>pageX</dt><dd>The original node position X.</dd>\n<dt>pageY</dt><dd>The original node position Y.</dd>\n<dt>startTime</dt><dd>The startTime of the event. getTime on the current Date object.</dd>\n</dl>", "type": "event", "description": "Fires at the start of a drag operation."}, {"name": "dragConfig", "url": "DD.Delegate.html#config_dragConfig", "access": "", "host": "DD.Delegate", "params": "", "type": "config", "description": "The default config to be used when creating the DD instance."}, {"name": "dragConfigChange", "url": "DD.Delegate.html#event_dragConfigChange", "access": "", "host": "DD.Delegate", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dragConfig' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dragCursor", "url": "DD.DDM.html#config_dragCursor", "access": "", "host": "DD.DDM", "params": "", "type": "config", "description": "The cursor to apply when dragging, if shimmed the shim will get the cursor."}, {"name": "dragCursorChange", "url": "DD.DDM.html#event_dragCursorChange", "access": "", "host": "DD.DDM", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dragCursor' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "draggable", "url": "Dialog.html#config_draggable", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "Boolean specifying if the Panel should be draggable."}, {"name": "draggable", "url": "TreeNode.html#config_draggable", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "If true the TreeNode is draggable."}, {"name": "draggableChange", "url": "Dialog.html#event_draggableChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'draggable' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "draggableChange", "url": "TreeNode.html#event_draggableChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'draggable' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dragging", "url": "DD.Drag.html#config_dragging", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "This attribute is not meant to be used by the implementor, it is meant to be used as an Event tracker so you can listen for it to change."}, {"name": "draggingChange", "url": "DD.Drag.html#event_draggingChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dragging' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dragInstance", "url": "Dialog.html#config_dragInstance", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "Stores the Drag instance for the <code>A.DD.Drag</code> used by\nthis Dialog."}, {"name": "dragInstanceChange", "url": "Dialog.html#event_dragInstanceChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dragInstance' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dragMode", "url": "DD.DDM.html#config_dragMode", "access": "", "host": "DD.DDM", "params": "", "type": "config", "description": "This attribute only works if the dd-drop module is active. It will set the dragMode (point, intersect, strict) of all future Drag instances."}, {"name": "dragMode", "url": "DD.Drag.html#config_dragMode", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "This attribute only works if the dd-drop module is active. It will set the dragMode (point, intersect, strict) of this Drag instance."}, {"name": "dragModeChange", "url": "DD.DDM.html#event_dragModeChange", "access": "", "host": "DD.DDM", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dragMode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dragModeChange", "url": "DD.Drag.html#event_dragModeChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dragMode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dragNode", "url": "DD.Drag.html#config_dragNode", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "Y.Node instance to use as the draggable element, defaults to node"}, {"name": "dragNode", "url": "DD.Delegate.html#config_dragNode", "access": "", "host": "DD.Delegate", "params": "", "type": "config", "description": "Y.Node instance of the dd dragNode."}, {"name": "dragNodeChange", "url": "DD.Drag.html#event_dragNodeChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dragNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dragNodeChange", "url": "DD.Delegate.html#event_dragNodeChange", "access": "", "host": "DD.Delegate", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dragNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "drop:enter", "url": "DD.Drop.html#event_drop:enter", "access": "", "host": "DD.Drop", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>drop</dt><dd>The drop object at the time of the event.</dd>\n<dt>drag</dt><dd>The drag object at the time of the event.</dd>\n</dl>", "type": "event", "description": "Fires when a drag element enters this target."}, {"name": "drop:exit", "url": "DD.Drop.html#event_drop:exit", "access": "", "host": "DD.Drop", "params": "event <Event.Facade>  An Event Facade object", "type": "event", "description": "Fires when a drag element exits this target."}, {"name": "drop:hit", "url": "DD.Drop.html#event_drop:hit", "access": "", "host": "DD.Drop", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>drop</dt><dd>The best guess on what was dropped on.</dd>\n<dt>drag</dt><dd>The drag object at the time of the event.</dd>\n<dt>others</dt><dd>An array of all the other drop targets that was dropped on.</dd>\n</dl>", "type": "event", "description": "Fires when a draggable node is dropped on this Drop Target. (Fired from dd-ddm-drop)"}, {"name": "drop:over", "url": "DD.Drop.html#event_drop:over", "access": "", "host": "DD.Drop", "params": "event <Event.Facade>  An Event Facade object with the following specific property added:\n<dl>\n<dt>drop</dt><dd>The drop object at the time of the event.</dd>\n<dt>drag</dt><dd>The drag object at the time of the event.</dd>\n</dl>", "type": "event", "description": "Fires when a drag element is over this target."}, {"name": "dropAction", "url": "TreeViewDD.html#config_dropAction", "access": "", "host": "TreeViewDD", "params": "", "type": "config", "description": "Drop action (i.e. could be 'append', 'below' or 'above')."}, {"name": "dropActionChange", "url": "TreeViewDD.html#event_dropActionChange", "access": "", "host": "TreeViewDD", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'dropAction' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "dump", "url": "YUI~dump.html#method_dump", "access": "", "host": "YUI~dump", "params": "o <object>   The object to dump, d <int>   How deep to recurse child objects, default 3", "type": "method", "description": "Returns a simple string representation of the object or array.\nOther types of objects will be returned unprocessed.  Arrays\nare expected to be indexed.  Use object notation for\nassociative arrays."}, {"name": "duration", "url": "Anim.html#config_duration", "access": "", "host": "Anim", "params": "", "type": "config", "description": "The length of the animation.  Defaults to \"1\" (second)."}, {"name": "duration", "url": "Plugin.WidgetAnim.html#config_duration", "access": "", "host": "Plugin.WidgetAnim", "params": "", "type": "config", "description": "Default duration in seconds. Used as the default duration for the default animation implementations"}, {"name": "durationChange", "url": "Anim.html#event_durationChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'duration' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "durationChange", "url": "Plugin.WidgetAnim.html#event_durationChange", "access": "", "host": "Plugin.WidgetAnim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'duration' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "each", "url": "Node.html#method_each", "access": "", "host": "Node", "params": "fn <Function>  The function to apply, context <Object>  optional An optional context to apply the function with\nDefault context is the NodeList instance", "type": "method", "description": "Applies the given function to each Node in the NodeList."}, {"name": "each", "url": "NodeList.html#method_each", "access": "", "host": "NodeList", "params": "fn <Function>  The function to apply. It receives 3 arguments:\nthe current node instance, the node's index, and the NodeList instance, context <Object>  optional An optional context to apply the function with\nDefault context is the current Node instance", "type": "method", "description": "Applies the given function to each Node in the NodeList."}, {"name": "each", "url": "YUI~oop.html#method_each", "access": "", "host": "YUI~oop", "params": "o <Object>  the object to iterate, f <Object>  the function to execute.  This function\nreceives the value, key, and object as parameters, proto <Object>  if true, prototype properties are\niterated on objects", "type": "method", "description": "Executes the supplied function for each item in\na collection.  Supports arrays, objects, and\nY.NodeLists"}, {"name": "each", "url": "ArrayList.html#method_each", "access": "", "host": "ArrayList", "params": "fn < Function >   the function to execute, context < mixed >   optional override 'this' in the function", "type": "method", "description": "<p>Execute a function on each item of the list, optionally providing a\ncustom execution context.  Default context is the item.</p>\n<p>The callback signature is <code>callback( item, index )</code>.</p>"}, {"name": "each", "url": "OverlayManager.html#method_each", "access": "", "host": "OverlayManager", "params": "fn <function>  Callback to be executed on the\n<a href=\"Array.html#method_each\">Array.each</a>", "type": "method", "description": "Loop through all registered <a href=\"Overlay.html\">Overlay</a> and\nexecute a callback."}, {"name": "each", "url": "Array.html#method_each", "access": "", "host": "Array", "params": "a <Array>   the array to iterate, f <Function>   the function to execute on each item.  The \nfunction receives three arguments: the value, the index, the full array., o <Object>  Optional context object", "type": "method", "description": "Executes the supplied function on each item in the array."}, {"name": "each", "url": "Object.html#method_each", "access": "", "host": "Object", "params": "o <Object>  the object to iterate, f <Function>   the function to execute on each item. The function \nreceives three arguments: the value, the the key, the full object., c <Object>  the execution context, proto <boolean>   include proto", "type": "method", "description": "Executes a function on each item. The function\nreceives the value, the key, and the object\nas paramters (in that order)."}, {"name": "eachChildren", "url": "TreeData.html#method_eachChildren", "access": "", "host": "TreeData", "params": "fn <function>  callback, fn <boolean>  recursive", "type": "method", "description": "Loop each children and execute the <code>fn</code> callback."}, {"name": "eachContainer", "url": "Paginator.html#method_eachContainer", "access": "", "host": "Paginator", "params": "fn <function>  Callback", "type": "method", "description": "Loop through all\n<a href=\"Paginator.html#config_containers\">containers</a> and execute the\npassed callback."}, {"name": "eachHandle", "url": "Resize.html#method_eachHandle", "access": "", "host": "Resize", "params": "fn <function>  Callback function to be executed for each handle.", "type": "method", "description": "<p>Loop through each handle which is being used and executes a callback.</p>\n<p>Example:</p>\n<pre><code>instance.eachHandle(\nfunction(handleName, index) { ... }\n);</code></pre>"}, {"name": "_eachSelectedDate", "url": "Calendar.html#method__eachSelectedDate", "access": "protected", "host": "Calendar", "params": "fn <function>  Callback to be executed for each date., dates <Dates>  Optional dates Array to loop through. If not passed it will use\nthe <a href=\"Calendar.html#config_dates\">dates</a>.", "type": "method", "description": "Loop each date from <a href=\"Calendar.html#config_dates\">dates</a> and\nexecutes a callback."}, {"name": "easeBoth", "url": "Easing.html#method_easeBoth", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation", "type": "method", "description": "Begins slowly and decelerates towards end. (quadratic)"}, {"name": "easeBothStrong", "url": "Easing.html#method_easeBothStrong", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation", "type": "method", "description": "Begins slowly and decelerates towards end. (quartic)"}, {"name": "easeIn", "url": "Easing.html#method_easeIn", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation", "type": "method", "description": "Begins slowly and accelerates towards end. (quadratic)"}, {"name": "easeInStrong", "url": "Easing.html#method_easeInStrong", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation", "type": "method", "description": "Begins slowly and accelerates towards end. (quartic)"}, {"name": "easeNone", "url": "Easing.html#method_easeNone", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation", "type": "method", "description": "Uniform speed between points."}, {"name": "easeOut", "url": "Easing.html#method_easeOut", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation", "type": "method", "description": "Begins quickly and decelerates towards end.  (quadratic)"}, {"name": "easeOutStrong", "url": "Easing.html#method_easeOutStrong", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation", "type": "method", "description": "Begins quickly and decelerates towards end.  (quartic)"}, {"name": "easing", "url": "Anim.html#config_easing", "access": "", "host": "Anim", "params": "", "type": "config", "description": "The method that will provide values to the attribute(s) during the animation. \nDefaults to \"Easing.easeNone\"."}, {"name": "easingChange", "url": "Anim.html#event_easingChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'easing' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Editable.ATTRS", "url": "Editable.html#property_Editable.ATTRS", "access": "", "host": "Editable", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the Editable."}, {"name": "Editable.NAME", "url": "Editable.html#property_Editable.NAME", "access": "", "host": "Editable", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "elapsedTime", "url": "Anim.html#config_elapsedTime", "access": "", "host": "Anim", "params": "", "type": "config", "description": "Current time the animation has been running."}, {"name": "elapsedTimeChange", "url": "Anim.html#event_elapsedTimeChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'elapsedTime' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "elasticBoth", "url": "Easing.html#method_elasticBoth", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation, a <Number>  Amplitude (optional), p <Number>  Period (optional)", "type": "method", "description": "Snap both elastic effect."}, {"name": "elasticIn", "url": "Easing.html#method_elasticIn", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation, a <Number>  Amplitude (optional), p <Number>  Period (optional)", "type": "method", "description": "Snap in elastic effect."}, {"name": "elasticOut", "url": "Easing.html#method_elasticOut", "access": "", "host": "Easing", "params": "t <Number>  Time value used to compute current value, b <Number>  Starting value, c <Number>  Delta between start and end values, d <Number>  Total length of animation, a <Number>  Amplitude (optional), p <Number>  Period (optional)", "type": "method", "description": "Snap out elastic effect."}, {"name": "elementByAxis", "url": "DOM.html#method_elementByAxis", "access": "", "host": "DOM", "params": "element <HTMLElement>  The html element., axis <String>  The axis to search (parentNode, nextSibling, previousSibling)., fn <Function>  optional An optional boolean test to apply., all <Boolean>  optional Whether all node types should be returned, or just element nodes.\nThe optional function is passed the current HTMLElement being tested as its only argument.\nIf no function is given, the first element is returned.", "type": "method", "description": "Searches the element by the given axis for the first matching element."}, {"name": "elements", "url": "Rating.html#config_elements", "access": "", "host": "Rating", "params": "", "type": "config", "description": "<a href=\"NodeList.html\">NodeList</a> of elements used on the\nRating. Each element is one Star."}, {"name": "elementsChange", "url": "Rating.html#event_elementsChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'elements' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "emitFacade", "url": "CustomEvent.html#property_emitFacade", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "If set to true, the custom event will deliver an EventFacade object\nthat is similar to a DOM event object."}, {"name": "empty", "url": "TreeData.html#method_empty", "access": "", "host": "TreeData", "params": "", "type": "method", "description": "Delete all children of the current TreeData."}, {"name": "empty", "url": "A.Node.html#method_empty", "access": "", "host": "A.Node", "params": "", "type": "method", "description": "<p>This method removes not only child (and other descendant) elements,\nbut also any text within the set of matched elements. This is because,\naccording to the DOM specification, any string of text within an element\nis considered a child node of that element.</p>\nExample:\n<pre><code>var node = A.one('#nodeId');\nnode.empty();\n</code></pre>"}, {"name": "enable", "url": "StyleSheet.html#method_enable", "access": "", "host": "StyleSheet", "params": "", "type": "method", "description": "Enable all the rules in the sheet"}, {"name": "enable", "url": "Widget.html#method_enable", "access": "", "host": "Widget", "params": "", "type": "method", "description": "Set the Widget's \"disabled\" attribute to \"false\"."}, {"name": "enabled", "url": "ImgLoadImgObj.html#config_enabled", "access": "", "host": "ImgLoadImgObj", "params": "", "type": "config", "description": "AlphaImageLoader <code>enabled</code> property to be set for the image.\nOnly set if <code>isPng</code> value for this image is set to <code>true</code>.\nDefaults to <code>true</code>."}, {"name": "enabledChange", "url": "ImgLoadImgObj.html#event_enabledChange", "access": "", "host": "ImgLoadImgObj", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'enabled' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_enableIntervalDetection", "url": "AutoComplete.html#method__enableIntervalDetection", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Enables query interval detection for IME support."}, {"name": "enableLogging", "url": "Test.Runner.html#method_enableLogging", "access": "", "host": "Test.Runner", "params": "", "type": "method", "description": "Enable logging via Y.log(). Test output is published and can be read via\nlogreader."}, {"name": "_encodeHTML", "url": "Console.html#method__encodeHTML", "access": "protected", "host": "Console", "params": "s <String>   the raw string", "type": "method", "description": "Returns the input string with ampersands (&amp;), &lt, and &gt; encoded\nas HTML entities."}, {"name": "_encodeHTML", "url": "Plugin.Console.html#method__encodeHTML", "access": "protected", "host": "Plugin.Console", "params": "s <String>   the raw string", "type": "method", "description": "Returns the input string with ampersands (&amp;), &lt, and &gt; encoded\nas HTML entities."}, {"name": "end", "url": "DD.Drag.html#method_end", "access": "", "host": "DD.Drag", "params": "", "type": "method", "description": "Ends the drag operation"}, {"name": "end", "url": "DD.Scroll.html#method_end", "access": "", "host": "DD.Scroll", "params": "", "type": "method", "description": "Called from the drag:end event"}, {"name": "end", "url": "Anim.html#event_end", "access": "", "host": "Anim", "params": "ev <Event>  The end event.", "type": "event", "description": "fires after the animation completes."}, {"name": "_end", "url": "IORequest.html#method__end", "access": "protected", "host": "IORequest", "params": "id <Number>  ID of the IO transaction.", "type": "method", "description": "Internal end callback for the IO transaction."}, {"name": "_entries", "url": "Plugin.ConsoleFilters.html#property__entries", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "property", "description": "Collection of all log messages passed through since the plugin's\ninstantiation.  This holds all messages regardless of filter status.\nUsed as a single source of truth for repopulating the Console body when\nfilters are changed."}, {"name": "entries", "url": "Cache.html#config_entries", "access": "", "host": "Cache", "params": "", "type": "config", "description": "Cached entries."}, {"name": "entriesChange", "url": "Cache.html#event_entriesChange", "access": "", "host": "Cache", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'entries' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "entry", "url": "Console.html#event_entry", "access": "", "host": "Console", "params": "event <Event.Facade>   An Event Facade object with the following attribute specific properties added:\n<dl>\n<dt>message</dt>\n<dd>The message data normalized into an object literal (see _normalizeMessage)</dd>\n</dl>", "type": "event", "description": "Transfers a received message to the print loop buffer.  Default\nbehavior defined in _defEntryFn."}, {"name": "entry", "url": "Plugin.Console.html#event_entry", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade>   An Event Facade object with the following attribute specific properties added:\n<dl>\n<dt>message</dt>\n<dd>The message data normalized into an object literal (see _normalizeMessage)</dd>\n</dl>", "type": "event", "description": "Transfers a received message to the print loop buffer.  Default\nbehavior defined in _defEntryFn."}, {"name": "entryTemplate", "url": "Console.html#config_entryTemplate", "access": "", "host": "Console", "params": "", "type": "config", "description": "Markup template used to create the DOM structure for Console entries."}, {"name": "entryTemplate", "url": "Plugin.Console.html#config_entryTemplate", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Markup template used to create the DOM structure for Console entries."}, {"name": "entryTemplateChange", "url": "Console.html#event_entryTemplateChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'entryTemplate' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "entryTemplateChange", "url": "Plugin.Console.html#event_entryTemplateChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'entryTemplate' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "error", "url": "DataSource.Local.html#event_error", "access": "", "host": "DataSource.Local", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n<dt>response (Object)</dt> <dd>Normalized response object with the following properties:\n<dl>\n<dt>results (Object)</dt> <dd>Parsed results.</dd>\n<dt>meta (Object)</dt> <dd>Parsed meta data.</dd>\n<dt>error (Object)</dt> <dd>Error object.</dd>\n</dl>\n</dd>\n</dl>", "type": "event", "description": "Fired when an error is encountered."}, {"name": "error", "url": "YUI.html#method_error", "access": "", "host": "YUI", "params": "msg <string>   the error message, e <Error>   Optional JS error that was caught.  If supplied\nand throwFail is specified, this error will be re-thrown.", "type": "method", "description": "Report an error.  The reporting mechanism is controled by\nthe 'throwFail' configuration attribute.  If throwFail is\nnot specified, the message is written to the Logger, otherwise\na JS error is thrown"}, {"name": "evaluate", "url": "DataType.String.html#method_evaluate", "access": "", "host": "DataType.String", "params": "data <*>  Input data to be evaluated.", "type": "method", "description": "Evaluates a string to a primitive value (if possible). Supports\n<code>true</code> and <code>false</code> also. Unrecognized strings are\nreturned without any modification."}, {"name": "even", "url": "NodeList.html#method_even", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Creates a new NodeList containing all nodes at even indices\n(zero-based index), including zero."}, {"name": "_event", "url": "DOMEventFacade.html#property__event", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "The native event"}, {"name": "Event.define", "url": "Event.html#method_Event.define", "access": "", "host": "Event", "params": "type <String>   Name given to the synthetic event, cfg <Object>   configuration object.  Pass this as the first\nparameter if it includes the <code>type</code> property.", "type": "method", "description": "<p>Static method to register a synthetic event definition and implementation\nin the DOM Event subsystem.</p>\n<p>Pass either a string <code>type</code> and configuration object as\nseparate parameters or a configuration object that includes a\n<code>type</code> property as a single parameter.</p>\n<p>The configuration object should include implementation methods for\n<code>on</code> and <code>detach</code>.  This is the full list of\nconfiguration properties:</p>\n<dl>\n<dt><code>type</code></dt>\n<dd>Required if using the <code>Y.Event.define( config )</code>\nsignature.  The name of the synthetic event.  What goes\n<code>node.on(<strong>HERE</strong>, callback )</code>.</dd>\n<dt><code>on</code></dt>\n<dd><code>function ( node, subscription, fireEvent )</code> The\nimplementation logic for subscription.  Any special setup you need to\ndo to create the environment for the event being fired.  E.g. native\nDOM event subscriptions.  Store subscription related objects and\ninformation on the <code>subscription</code> object.  When the\ncriteria have been met to fire the synthetic event, call\n<code>fireEvent.fire()</code>.</dd>\n<dt><code>detach</code></dt>\n<dd><code>function ( node, subscription, fireEvent )</code> The\nimplementation logic for cleaning up a detached subscription. E.g.\ndetach any DOM subscriptions done in <code>on</code>.</dd>\n<dt><code>publishConfig</code></dt>\n<dd>(Object) The configuration object that will be used to instantiate\nthe underlying CustomEvent.  By default, the event is defined with\n<code>emitFacade: true</code> so subscribers will receive a DOM-like\nevent object.</dd>\n<dt><code>processArgs</code></dt>\n<dd><code>function ( argArray )</code>  Optional method to extract any\nadditional arguments from the subscription signature.  Using this\nallows <code>on</code> signatures like <code>node.on(\n&quot;hover&quot;, overCallback, outCallback )</code>.  Be sure that\nthe args passed in is pruned of any additional arguments using, for\nexample, <code>argArray.splice(2,1);</code>.  Data returned from the\nfunction will be stored on the <code>subscription</code> object passed\nto <code>on</code> and <code>detach</code> under\n<code>subscription._extra</code>.</dd>\n<dt>\n</dl>"}, {"name": "events", "url": "Subscriber.html#property_events", "access": "", "host": "Subscriber", "params": "", "type": "property", "description": "Custom events for a given fire transaction."}, {"name": "eventType", "url": "Editable.html#config_eventType", "access": "", "host": "Editable", "params": "", "type": "config", "description": "Event type to initialize the editable."}, {"name": "eventTypeChange", "url": "Editable.html#event_eventTypeChange", "access": "", "host": "Editable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'eventType' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "evt", "url": "EventHandle.html#property_evt", "access": "", "host": "EventHandle", "params": "", "type": "property", "description": "The custom event"}, {"name": "_evtCat", "url": "Console.html#property__evtCat", "access": "protected", "host": "Console", "params": "", "type": "property", "description": "Category to prefix all event subscriptions to allow for ease of detach\nduring destroy."}, {"name": "_evtCat", "url": "Plugin.Console.html#property__evtCat", "access": "protected", "host": "Plugin.Console", "params": "", "type": "property", "description": "Category to prefix all event subscriptions to allow for ease of detach\nduring destroy."}, {"name": "_evtGuid", "url": "YUI.html#property__evtGuid", "access": "protected", "host": "YUI", "params": "", "type": "property", "description": "Detach category for internal events to aid in cleanup."}, {"name": "exec", "url": "Do.Method.html#method_exec", "access": "", "host": "Do.Method", "params": "", "type": "method", "description": "Execute the wrapped method"}, {"name": "_execute", "url": "AsyncQueue.html#method__execute", "access": "protected", "host": "AsyncQueue", "params": "callback <Object>   the callback object to execute", "type": "method", "description": "Handles the execution of callbacks. Returns a boolean indicating\nwhether it is appropriate to continue running."}, {"name": "exists", "url": "Cookie.html#method_exists", "access": "", "host": "Cookie", "params": "name <String>  The name of the cookie to check.", "type": "method", "description": "Determines if the cookie with the given name exists. This is useful for\nBoolean cookies (those that do not follow the name=value convention)."}, {"name": "expand", "url": "Console.html#method_expand", "access": "", "host": "Console", "params": "", "type": "method", "description": "Expands the body and footer if collapsed."}, {"name": "expand", "url": "Plugin.Console.html#method_expand", "access": "", "host": "Plugin.Console", "params": "", "type": "method", "description": "Expands the body and footer if collapsed."}, {"name": "_expand", "url": "TreeNode.html#method__expand", "access": "", "host": "TreeNode", "params": "", "type": "method", "description": "Expand the current TreeNode."}, {"name": "expand", "url": "TreeNode.html#method_expand", "access": "", "host": "TreeNode", "params": "", "type": "method", "description": "Expand the current TreeNode."}, {"name": "expand", "url": "Panel.html#method_expand", "access": "", "host": "Panel", "params": "", "type": "method", "description": "Expand the panel setting the\n<a href=\"Panel.html#config_collapsed\">collapsed</a> attribute to\n<code>false</code>."}, {"name": "_expandAll", "url": "TreeData.html#method__expandAll", "access": "protected", "host": "TreeData", "params": "", "type": "method", "description": "Expand all children of the TreeData."}, {"name": "expandAll", "url": "TreeData.html#method_expandAll", "access": "", "host": "TreeData", "params": "", "type": "method", "description": "Expand all children of the TreeData."}, {"name": "expanded", "url": "TreeNode.html#config_expanded", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Whether the TreeNode is expanded by default."}, {"name": "expandedChange", "url": "TreeNode.html#event_expandedChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'expanded' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "expect", "url": "Test.Mock.html#method_expect", "access": "", "host": "Test.Mock", "params": "mock <Object>  The object to add the expectation to., expectation <Object>  An object defining the expectation. For\na method, the keys \"method\" and \"args\" are required with\nan optional \"returns\" key available. For properties, the keys\n\"property\" and \"value\" are required.", "type": "method", "description": "Assigns an expectation to a mock object. This is used to create\nmethods and properties on the mock object that are monitored for\ncalls and changes, respectively."}, {"name": "expected", "url": "Assert.ComparisonFailure.html#property_expected", "access": "", "host": "Assert.ComparisonFailure", "params": "", "type": "property", "description": "The expected value."}, {"name": "extend", "url": "YUI~oop.html#method_extend", "access": "", "host": "YUI~oop", "params": "r <Function>    the object to modify, s <Function>  the object to inherit, px <Object>  prototype properties to add/override, sx <Object>  static properties to add/override", "type": "method", "description": "Utility to set up the prototype, constructor and superclass properties to\nsupport an inheritance strategy that can chain constructors and methods.\nStatic members will not be inherited."}, {"name": "_extractQuery", "url": "AutoComplete.html#method__extractQuery", "access": "protected", "host": "AutoComplete", "params": "query <String>  String to parse", "type": "method", "description": "Extracts the right most query from the delimited string in the input."}, {"name": "_factor", "url": "SliderValueRange.html#property__factor", "access": "protected", "host": "SliderValueRange", "params": "", "type": "property", "description": "Factor used to translate value -&gt; position -&gt; value."}, {"name": "_factor", "url": "YUI.html#property__factor", "access": "protected", "host": "YUI", "params": "", "type": "property", "description": "Factor used to translate value -&gt; position -&gt; value."}, {"name": "fail", "url": "Test.Runner.html#event_fail", "access": "", "host": "Test.Runner", "params": "", "type": "event", "description": "Fires when a test has failed."}, {"name": "fail", "url": "Test.Assert.html#method_fail", "access": "", "host": "Test.Assert", "params": "message <String>  (Optional) The message to display with the failure.", "type": "method", "description": "Forces an assertion error to occur."}, {"name": "_failureHandler", "url": "A.Plugin.IO.html#method__failureHandler", "access": "protected", "host": "A.Plugin.IO", "params": "event <EventFavade> , id <String>  Id of the IO transaction., obj <Object>  XHR transaction Object.", "type": "method", "description": "Internal failure callback for the IO transaction."}, {"name": "failureMessage", "url": "A.Plugin.IO.html#config_failureMessage", "access": "", "host": "A.Plugin.IO", "params": "", "type": "config", "description": "Message to be set on the content when the transaction fails."}, {"name": "failureMessageChange", "url": "A.Plugin.IO.html#event_failureMessageChange", "access": "", "host": "A.Plugin.IO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'failureMessage' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "fetch", "url": "ImgLoadGroup.html#method_fetch", "access": "", "host": "ImgLoadGroup", "params": "", "type": "method", "description": "Displays the images in the group.\nThis method is called when a trigger fires or the time limit expires; it shouldn't be called externally, but is not private in the rare event that it needs to be called immediately."}, {"name": "fetch", "url": "ImgLoadImgObj.html#method_fetch", "access": "", "host": "ImgLoadImgObj", "params": "withinY <Int>   The pixel distance from the top of the page, for which if the image lies within, it will be fetched. Undefined indicates that no check should be made, and the image should always be fetched", "type": "method", "description": "Displays the image; puts the URL into the DOM.\nThis method shouldn't be called externally, but is not private in the rare event that it needs to be called immediately."}, {"name": "fetchCSS", "url": "config.html#property_fetchCSS", "access": "", "host": "config", "params": "", "type": "property", "description": "Specifies whether or not YUI().use(...) will attempt to load CSS\nresources at all.  Any truthy value will cause CSS dependencies\nto load when fetching script.  The special value 'force' will \ncause CSS dependencies to be loaded even if no script is needed."}, {"name": "fillHeight", "url": "WidgetStdMod.html#method_fillHeight", "access": "", "host": "WidgetStdMod", "params": "node <Node>  The node which should be resized to fill out the height\nof the Widget bounding box. Should be a standard module section node which belongs\nto the widget.", "type": "method", "description": "Sets the height on the provided header, body or footer element to \nfill out the height of the Widget. It determines the height of the \nwidgets bounding box, based on it's configured height value, and \nsets the height of the provided section to fill out any \nspace remaining after the other standard module section heights \nhave been accounted for.\n<p><strong>NOTE:</strong> This method is not designed to work if an explicit \nheight has not been set on the Widget, since for an \"auto\" height Widget, \nthe heights of the header/body/footer will drive the height of the Widget.</p>"}, {"name": "fillHeight", "url": "WidgetStdMod.html#config_fillHeight", "access": "", "host": "WidgetStdMod", "params": "", "type": "config", "description": "The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a \nheight is set on the Widget. If a height is not set on the widget, then all sections are sized based on \ntheir content."}, {"name": "fillHeightChange", "url": "WidgetStdMod.html#event_fillHeightChange", "access": "", "host": "WidgetStdMod", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'fillHeight' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "fillTo", "url": "Rating.html#method_fillTo", "access": "", "host": "Rating", "params": "index <Number>  Index to be selected, className <String>  Class name to be applied when fill the Rating elements", "type": "method", "description": "Add the <code>className</code> on the the <code>index</code> element\nand all the previous Rating elements."}, {"name": "fillTo", "url": "ThumbRating.html#method_fillTo", "access": "", "host": "ThumbRating", "params": "index <Number>  Index to be selected, className <String>  Class name to be applied when fill the Rating elements", "type": "method", "description": "Add the <code>className</code> on the the <code>index</code> element\nand all the previous Rating elements."}, {"name": "filter", "url": "NodeList.html#method_filter", "access": "", "host": "NodeList", "params": "selector <String>  The selector to filter against", "type": "method", "description": "Filters the NodeList instance down to only nodes matching the given selector."}, {"name": "filter", "url": "Loader.html#property_filter", "access": "", "host": "Loader", "params": "", "type": "property", "description": "A filter to apply to result urls.  This filter will modify the default\npath for all modules.  The default path for the YUI library is the\nminified version of the files (e.g., event-min.js).  The filter property\ncan be a predefined filter or a custom filter.  The valid predefined \nfilters are:\n<dl>\n<dt>DEBUG</dt>\n<dd>Selects the debug versions of the library (e.g., event-debug.js).\nThis option will automatically include the Logger widget</dd>\n<dt>RAW</dt>\n<dd>Selects the non-minified version of the library (e.g., event.js).</dd>\n</dl>\nYou can also define a custom filter, which must be an object literal \ncontaining a search expression and a replace string:\n<pre>\nmyFilter: &#123; \n'searchExp': \"-min\\\\.js\", \n'replaceStr': \"-debug.js\"\n&#125;\n</pre>"}, {"name": "filter", "url": "LiveSearch.html#method_filter", "access": "", "host": "LiveSearch", "params": "query <String>  Query to filter results", "type": "method", "description": "Filter the <a href=\"LiveSearch.html#config_nodes\">nodes</a> based on\nthe input value."}, {"name": "filter", "url": "ArrayList~filter.html#method_filter", "access": "", "host": "ArrayList~filter", "params": "validator < Function >   Boolean function to determine in or out", "type": "method", "description": "<p>Create a new ArrayList (or augmenting class instance) from a subset\nof items as determined by the boolean function passed as the\nargument.  The original ArrayList is unchanged.</p>\n<p>The validator signature is <code>validator( item )</code>.</p>"}, {"name": "filter", "url": "config.html#property_filter", "access": "", "host": "config", "params": "", "type": "property", "description": "A filter to apply to result urls.  This filter will modify the default\npath for all modules.  The default path for the YUI library is the\nminified version of the files (e.g., event-min.js).  The filter property\ncan be a predefined filter or a custom filter.  The valid predefined \nfilters are:\n<dl>\n<dt>DEBUG</dt>\n<dd>Selects the debug versions of the library (e.g., event-debug.js).\nThis option will automatically include the Logger widget</dd>\n<dt>RAW</dt>\n<dd>Selects the non-minified version of the library (e.g., event.js).</dd>\n</dl>\nYou can also define a custom filter, which must be an object literal \ncontaining a search expression and a replace string:\n<pre>\nmyFilter: &#123; \n'searchExp': \"-min\\\\.js\", \n'replaceStr': \"-debug.js\"\n&#125;\n</pre>\nFor dynamic loading."}, {"name": "_filterBuffer", "url": "Plugin.ConsoleFilters.html#method__filterBuffer", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "method", "description": "Flushes the Console's print buffer of any entries that have a category\nor source that is currently being excluded."}, {"name": "filterResults", "url": "AutoComplete.html#method_filterResults", "access": "", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Executed by the data source as a mechanism to do simple client-side\nfiltering of the results."}, {"name": "filters", "url": "Loader.html#property_filters", "access": "", "host": "Loader", "params": "", "type": "property", "description": "per-component filter specification.  If specified for a given component, this \noverrides the filter config."}, {"name": "filters", "url": "config.html#property_filters", "access": "", "host": "config", "params": "", "type": "property", "description": "Hash of per-component filter specification.  If specified for a given component, \nthis overrides the filter config\nFor dynamic loading."}, {"name": "findByChild", "url": "DialogManager.html#method_findByChild", "access": "", "host": "DialogManager", "params": "child <Node | String>  Child node of the Dialog.", "type": "method", "description": "Find the <a href=\"Widget.html\">Widget</a> instance based on a child\nelement."}, {"name": "fire", "url": "CustomEvent.html#method_fire", "access": "", "host": "CustomEvent", "params": "arguments <Object*>  an arbitrary set of parameters to pass to \nthe handler.", "type": "method", "description": "Notifies the subscribers.  The callback functions will be executed\nfrom the context specified when the event was created, and with the \nfollowing parameters:\n<ul>\n<li>The type of event</li>\n<li>All of the arguments fire() was executed with as an array</li>\n<li>The custom object (if any) that was passed into the subscribe() \nmethod</li>\n</ul>"}, {"name": "fire", "url": "EventTarget.html#method_fire", "access": "", "host": "EventTarget", "params": "type <String|Object>   The type of the event, or an object that contains\na 'type' property., arguments <Object*>   an arbitrary set of parameters to pass to \nthe handler.  If the first of these is an object literal and the event is\nconfigured to emit an event facade, the event facade will replace that\nparameter after the properties the object literal contains are copied to\nthe event facade.", "type": "method", "description": "Fire a custom event by name.  The callback functions will be executed\nfrom the context specified when the event was created, and with the \nfollowing parameters.\nIf the custom event object hasn't been created, then the event hasn't \nbeen published and it has no subscribers.  For performance sake, we \nimmediate exit in this case.  This means the event won't bubble, so \nif the intention is that a bubble target be notified, the event must \nbe published on this object first.\nThe first argument is the event type, and any additional arguments are\npassed to the listeners as parameters.  If the first of these is an\nobject literal, and the event is configured to emit an event facade,\nthat object is mixed into the event facade and the facade is provided \nin place of the original object."}, {"name": "fired", "url": "CustomEvent.html#property_fired", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "This event has fired if true"}, {"name": "firedWith", "url": "CustomEvent.html#property_firedWith", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "An array containing the arguments the custom event\nwas last fired with."}, {"name": "fireOnce", "url": "CustomEvent.html#property_fireOnce", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "This event should only fire one time if true, and if\nit has fired, any new subscribers should be notified\nimmediately."}, {"name": "first", "url": "A.NodeList.html#method_first", "access": "", "host": "A.NodeList", "params": "", "type": "method", "description": "Returns the first element in the node list collection."}, {"name": "firstDayOfWeek", "url": "Calendar.html#config_firstDayOfWeek", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "First day of the week: Sunday is 0, Monday is 1."}, {"name": "firstDayOfWeekChange", "url": "Calendar.html#event_firstDayOfWeekChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'firstDayOfWeek' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_firstItem", "url": "plugin.NodeMenuNav.html#property__firstItem", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Node instance representing the first item (menuitem or menu \nlabel) in the root menu of a menu."}, {"name": "firstPageLink", "url": "Paginator.html#config_firstPageLink", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The <a href=\"Node.html\">Node</a> or template to be used as the\nfirst link element."}, {"name": "firstPageLinkChange", "url": "Paginator.html#event_firstPageLinkChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'firstPageLink' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "firstPageLinkLabel", "url": "Paginator.html#config_firstPageLinkLabel", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The label used as content of the\n<a href=\"Paginator.html#config_firstPageLink\">firstPageLink</a> element."}, {"name": "firstPageLinkLabelChange", "url": "Paginator.html#event_firstPageLinkLabelChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'firstPageLinkLabel' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "fixPointerColor", "url": "OverlayContextPanel.html#method_fixPointerColor", "access": "", "host": "OverlayContextPanel", "params": "", "type": "method", "description": "OverlayContextPanel uses a imageless arrow, which involves some CSS technics.\nThis method is meant to fix the color of the borders of the arrow."}, {"name": "flush", "url": "Cache.html#method_flush", "access": "", "host": "Cache", "params": "", "type": "method", "description": "Flushes cache."}, {"name": "flush", "url": "Cache.html#event_flush", "access": "", "host": "Cache", "params": "e <Event.Facade>   Event Facade object.", "type": "event", "description": "Fired when the cache is flushed."}, {"name": "_fn", "url": "DelayedTask.html#property__fn", "access": "protected", "host": "DelayedTask", "params": "", "type": "property", "description": "Stores the passed <code>fn</code> attribute."}, {"name": "fn", "url": "Subscriber.html#property_fn", "access": "", "host": "Subscriber", "params": "", "type": "property", "description": "The callback that will be execute when the event fires\nThis is wrapped by Y.rbind if obj was supplied."}, {"name": "focus", "url": "Node.html#method_focus", "access": "", "host": "Node", "params": "", "type": "method", "description": "Passes through to DOM method."}, {"name": "focus", "url": "Widget.html#method_focus", "access": "", "host": "Widget", "params": "", "type": "method", "description": "Causes the Widget to receive the focus by setting the \"focused\" \nattribute to \"true\"."}, {"name": "_focus", "url": "AutoComplete.html#method__focus", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Focuses the input element."}, {"name": "focus", "url": "YUI.html#event_focus", "access": "", "host": "YUI", "params": "type <string>   'focus', fn <function>   the callback function to execute, o <string|HTMLElement|collection>   the element(s) to bind, context <Object>  optional context object, args <Object>  0..n additional arguments to provide to the listener.", "type": "event", "description": "Adds a DOM focus listener.  Uses the focusin event in IE, \nDOMFocusIn for Opera and Webkit, and the capture phase for Gecko so that\nthe event propagates in a way that enables event delegation."}, {"name": "focus", "url": "plugin.NodeFocusManager.html#method_focus", "access": "", "host": "plugin.NodeFocusManager", "params": "index <Number>   Optional. Number representing the index of the \ndescendant to be set as the active descendant., index <Node>   Optional. Node instance representing the \ndescendant to be set as the active descendant.", "type": "method", "description": "Focuses the active descendant and sets the  \n<code>focused</code> attribute to true."}, {"name": "focusClass", "url": "plugin.NodeFocusManager.html#config_focusClass", "access": "", "host": "plugin.NodeFocusManager", "params": "", "type": "config", "description": "String representing the name of class applied to the focused active  \ndescendant Node.  Can also be an object literal used to define both the \nclass name, and the Node to which the class should be applied.  If using \nan object literal, the format is:\n<code>{ className: \"focus\", fn: myFunction }</code>.  The function \nreferenced by the <code>fn</code> property in the object literal will be\npassed a reference to the currently focused active descendant Node."}, {"name": "focusClassChange", "url": "plugin.NodeFocusManager.html#event_focusClassChange", "access": "", "host": "plugin.NodeFocusManager", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'focusClass' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "focused", "url": "Widget.html#config_focused", "access": "", "host": "Widget", "params": "", "type": "config", "description": "Boolean indicating if the Widget, or one of its descendants, \nhas focus."}, {"name": "focused", "url": "plugin.NodeFocusManager.html#config_focused", "access": "", "host": "plugin.NodeFocusManager", "params": "", "type": "config", "description": "Boolean indicating that one of the descendants is focused."}, {"name": "focusedChange", "url": "Widget.html#event_focusedChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "focusedChange", "url": "plugin.NodeFocusManager.html#event_focusedChange", "access": "", "host": "plugin.NodeFocusManager", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'focused' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_focusItem", "url": "plugin.NodeMenuNav.html#method__focusItem", "access": "protected", "host": "plugin.NodeMenuNav", "params": "item <Node>  Node instance representing a menuitem or menu label.", "type": "method", "description": "Focuses the specified menuitem or menu label."}, {"name": "_focusNext", "url": "plugin.NodeFocusManager.html#method__focusNext", "access": "protected", "host": "plugin.NodeFocusManager", "params": "event <Object>   Object representing the DOM event., activeDescendant <Number>   Number representing the index of the \nnext descendant to be focused", "type": "method", "description": "Keydown event handler that moves focus to the next \nenabled descendant."}, {"name": "_focusPrevious", "url": "plugin.NodeFocusManager.html#method__focusPrevious", "access": "protected", "host": "plugin.NodeFocusManager", "params": "event <Object>   Object representing the DOM event., activeDescendant <Number>   Number representing the index of the \nnext descendant to be focused.", "type": "method", "description": "Keydown event handler that moves focus to the previous \nenabled descendant."}, {"name": "foldDistance", "url": "ImgLoadGroup.html#config_foldDistance", "access": "", "host": "ImgLoadGroup", "params": "", "type": "config", "description": "Distance below the fold for which images are loaded. Images are not loaded until they are at most this distance away from (or above) the fold.\nThis check is performed at page load (domready) and after any window scroll or window resize event (until all images are loaded)."}, {"name": "foldDistanceChange", "url": "ImgLoadGroup.html#event_foldDistanceChange", "access": "", "host": "ImgLoadGroup", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'foldDistance' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_foot", "url": "Console.html#property__foot", "access": "protected", "host": "Console", "params": "", "type": "property", "description": "Reference to the Node instance containing the footer contents."}, {"name": "_foot", "url": "Plugin.Console.html#property__foot", "access": "protected", "host": "Plugin.Console", "params": "", "type": "property", "description": "Reference to the Node instance containing the footer contents."}, {"name": "footerContent", "url": "WidgetStdMod.html#config_footerContent", "access": "", "host": "WidgetStdMod", "params": "", "type": "config", "description": "The content to be added to the footer section. This will replace any existing content\nin the footer. If you want to append, or insert new content, use the <a href=\"#method_setStdModContent\">setStdModContent</a> method."}, {"name": "footerContentChange", "url": "WidgetStdMod.html#event_footerContentChange", "access": "", "host": "WidgetStdMod", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'footerContent' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "force", "url": "Loader.html#property_force", "access": "", "host": "Loader", "params": "", "type": "property", "description": "A list of modules that should always be loaded, even\nif they have already been inserted into the page."}, {"name": "force", "url": "config.html#property_force", "access": "", "host": "config", "params": "", "type": "property", "description": "A list of modules that should always be loaded when required, even if already \npresent on the page."}, {"name": "forceSelection", "url": "AutoComplete.html#config_forceSelection", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "If <a href=\"AutoComplete.html#config_typeAhead\">typeAhead</a> is true, this\nwill clear a selection when the overlay closes unless a user explicitly selects an item."}, {"name": "forceSelectionChange", "url": "AutoComplete.html#event_forceSelectionChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'forceSelection' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "form", "url": "IORequest.html#config_form", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "See <a href=\"http://developer.yahoo.com/yui/3/io/#configuration\">IO\nConfiguration</a>."}, {"name": "format", "url": "Test.Reporter.html#property_format", "access": "", "host": "Test.Reporter", "params": "", "type": "property", "description": "The formatting function to call when submitting the data."}, {"name": "format", "url": "DataType.Date.html#method_format", "access": "", "host": "DataType.Date", "params": "oDate <Date>   Date., oConfig <Object} (Optional) Object literal of configuration values:\n<dl>\n<dt>format {String} (Optional)</dt>\n<dd>\n<p>\nAny strftime string is supported, such as \"%I:%M:%S %p\". strftime has several format specifiers defined by the Open group at \n<a href=\"http://www.opengroup.org/onlinepubs/007908799/xsh/strftime.html\">http://www.opengroup.org/onlinepubs/007908799/xsh/strftime.html</a>\nPHP added a few of its own, defined at <a href=\"http://www.php.net/strftime\">http://www.php.net/strftime</a>\n</p>\n<p>\nThis javascript implementation supports all the PHP specifiers and a few more.  The full list is below.\n</p>\n<p>\nIf not specified, it defaults to the ISO 8601 standard date format: %Y-%m-%d.\nThis may be overridden by the deprecated Y.config.dateFormat property.\n</p>\n<dl>\n<dt>%a</dt> <dd>abbreviated weekday name according to the current locale</dd>\n<dt>%A</dt> <dd>full weekday name according to the current locale</dd>\n<dt>%b</dt> <dd>abbreviated month name according to the current locale</dd>\n<dt>%B</dt> <dd>full month name according to the current locale</dd>\n<dt>%c</dt> <dd>preferred date and time representation for the current locale</dd>\n<dt>%C</dt> <dd>century number (the year divided by 100 and truncated to an integer, range 00 to 99)</dd>\n<dt>%d</dt> <dd>day of the month as a decimal number (range 01 to 31)</dd>\n<dt>%D</dt> <dd>same as %m/%d/%y</dd>\n<dt>%e</dt> <dd>day of the month as a decimal number, a single digit is preceded by a space (range \" 1\" to \"31\")</dd>\n<dt>%F</dt> <dd>same as %Y-%m-%d (ISO 8601 date format)</dd>\n<dt>%g</dt> <dd>like %G, but without the century</dd>\n<dt>%G</dt> <dd>The 4-digit year corresponding to the ISO week number</dd>\n<dt>%h</dt> <dd>same as %b</dd>\n<dt>%H</dt> <dd>hour as a decimal number using a 24-hour clock (range 00 to 23)</dd>\n<dt>%I</dt> <dd>hour as a decimal number using a 12-hour clock (range 01 to 12)</dd>\n<dt>%j</dt> <dd>day of the year as a decimal number (range 001 to 366)</dd>\n<dt>%k</dt> <dd>hour as a decimal number using a 24-hour clock (range 0 to 23); single digits are preceded by a blank. (See also %H.)</dd>\n<dt>%l</dt> <dd>hour as a decimal number using a 12-hour clock (range 1 to 12); single digits are preceded by a blank. (See also %I.) </dd>\n<dt>%m</dt> <dd>month as a decimal number (range 01 to 12)</dd>\n<dt>%M</dt> <dd>minute as a decimal number</dd>\n<dt>%n</dt> <dd>newline character</dd>\n<dt>%p</dt> <dd>either \"AM\" or \"PM\" according to the given time value, or the corresponding strings for the current locale</dd>\n<dt>%P</dt> <dd>like %p, but lower case</dd>\n<dt>%r</dt> <dd>time in a.m. and p.m. notation equal to %I:%M:%S %p</dd>\n<dt>%R</dt> <dd>time in 24 hour notation equal to %H:%M</dd>\n<dt>%s</dt> <dd>number of seconds since the Epoch, ie, since 1970-01-01 00:00:00 UTC</dd>\n<dt>%S</dt> <dd>second as a decimal number</dd>\n<dt>%t</dt> <dd>tab character</dd>\n<dt>%T</dt> <dd>current time, equal to %H:%M:%S</dd>\n<dt>%u</dt> <dd>weekday as a decimal number [1,7], with 1 representing Monday</dd>\n<dt>%U</dt> <dd>week number of the current year as a decimal number, starting with the\nfirst Sunday as the first day of the first week</dd>\n<dt>%V</dt> <dd>The ISO 8601:1988 week number of the current year as a decimal number,\nrange 01 to 53, where week 1 is the first week that has at least 4 days\nin the current year, and with Monday as the first day of the week.</dd>\n<dt>%w</dt> <dd>day of the week as a decimal, Sunday being 0</dd>\n<dt>%W</dt> <dd>week number of the current year as a decimal number, starting with the\nfirst Monday as the first day of the first week</dd>\n<dt>%x</dt> <dd>preferred date representation for the current locale without the time</dd>\n<dt>%X</dt> <dd>preferred time representation for the current locale without the date</dd>\n<dt>%y</dt> <dd>year as a decimal number without a century (range 00 to 99)</dd>\n<dt>%Y</dt> <dd>year as a decimal number including the century</dd>\n<dt>%z</dt> <dd>numerical time zone representation</dd>\n<dt>%Z</dt> <dd>time zone name or abbreviation</dd>\n<dt>%%</dt> <dd>a literal \"%\" character</dd>\n</dl>\n</dd>\n<dt>locale {String>   (Deprecated, optional)</dt>\n<dd>\n<b>Deprecated - use Y.config.lang instead, which provides access to a much larger set of built-in languages.</b>\nThe locale to use when displaying days of week, months of the year, and other locale specific\nstrings. If not specified, this defaults to \"en\" (though this may be overridden by the deprecated Y.config.locale).\nThe following locales are built in:\n<dl>\n<dt>en</dt>\n<dd>English</dd>\n<dt>en-US</dt>\n<dd>US English</dd>\n<dt>en-GB</dt>\n<dd>British English</dd>\n<dt>en-AU</dt>\n<dd>Australian English (identical to British English)</dd>\n</dl>\nMore locales may be added by subclassing of the deprecated Y.DataType.Date.Locale[\"en\"].\nSee Y.DataType.Date.Locale for more information.\n</dd>\n</dl>", "type": "method", "description": "Takes a native JavaScript Date and formats it as a string for display to user."}, {"name": "format", "url": "DataType.Number.html#method_format", "access": "", "host": "DataType.Number", "params": "data <Number>   Number., config <Object} (Optional) Optional configuration values:\n<dl>\n<dt>prefix {String}</dd>\n<dd>String prepended before each number, like a currency designator \"$\"</dd>\n<dt>decimalPlaces {Number}</dd>\n<dd>Number of decimal places to round. Must be a number 0 to 20.</dd>\n<dt>decimalSeparator {String}</dd>\n<dd>Decimal separator</dd>\n<dt>thousandsSeparator {String}</dd>\n<dd>Thousands separator</dd>\n<dt>suffix {String>  </dd>\n<dd>String appended after each number, like \" items\" (note the space)</dd>\n</dl>", "type": "method", "description": "Takes a Number and formats to string for display to user."}, {"name": "format", "url": "DataType.XML.html#method_format", "access": "", "host": "DataType.XML", "params": "data <XMLDoc>   Data to convert.", "type": "method", "description": "Converts data to type XMLDocument."}, {"name": "formatDate", "url": "Calendar.html#method_formatDate", "access": "", "host": "Calendar", "params": "date <Date> , mask <String>  See <a href=\"Calendar.html#config_dateFormat\">dateFormat</a>.", "type": "method", "description": "Format a date with the passed mask. Used on\n<a href=\"Calendar.html#config_dateFormat\">dateFormat</a>."}, {"name": "formatInput", "url": "Editable.html#config_formatInput", "access": "", "host": "Editable", "params": "", "type": "config", "description": "Function to format the input text displayed on the input."}, {"name": "formatInputChange", "url": "Editable.html#event_formatInputChange", "access": "", "host": "Editable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'formatInput' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_formatMessage", "url": "Test.Assert.html#method__formatMessage", "access": "protected", "host": "Test.Assert", "params": "customMessage <String>  The message passed in by the developer., defaultMessage <String>  The message created by the error by default.", "type": "method", "description": "Formats a message so that it can contain the original assertion message\nin addition to the custom message."}, {"name": "formatOutput", "url": "Editable.html#config_formatOutput", "access": "", "host": "Editable", "params": "", "type": "config", "description": "Function to format the output text displayed on the input."}, {"name": "formatOutputChange", "url": "Editable.html#event_formatOutputChange", "access": "", "host": "Editable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'formatOutput' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "formatResult", "url": "AutoComplete.html#method_formatResult", "access": "", "host": "AutoComplete", "params": "result <Object>  The result data object, request <String>  The current query string, resultMatch <String>  The string from the results that matches the query", "type": "method", "description": "An overridable method for formatting the result of the query before it's displayed in the overlay."}, {"name": "formatSkin", "url": "Loader.html#method_formatSkin", "access": "", "host": "Loader", "params": "skin <string>   the name of the skin, mod <string>   optional: the name of a module to skin", "type": "method", "description": "Returns the skin module name for the specified skin name.  If a\nmodule name is supplied, the returned skin module name is \nspecific to the module passed in."}, {"name": "formChange", "url": "IORequest.html#event_formChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'form' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "from", "url": "Anim.html#config_from", "access": "", "host": "Anim", "params": "", "type": "config", "description": "The starting values for the animated properties. \nFields may be strings, numbers, or functions.\nIf a function is used, the return value becomes the from value.\nIf no from value is specified, the DEFAULT_GETTER will be used."}, {"name": "fromChange", "url": "Anim.html#event_fromChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'from' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "gallery", "url": "config.html#property_gallery", "access": "", "host": "config", "params": "", "type": "property", "description": "The default gallery version to build gallery module urls"}, {"name": "gecko", "url": "UA.html#property_gecko", "access": "", "host": "UA", "params": "", "type": "property", "description": "Gecko engine revision number.  Will evaluate to 1 if Gecko \nis detected but the revision could not be found. Other browsers\nwill be 0.  Example: 1.8\n<pre>\nFirefox 1.0.0.4: 1.7.8   <-- Reports 1.7\nFirefox 1.5.0.9: 1.8.0.9 <-- 1.8\nFirefox 2.0.0.3: 1.8.1.3 <-- 1.81\nFirefox 3.0   <-- 1.9\nFirefox 3.5   <-- 1.91\n</pre>"}, {"name": "generateId", "url": "Event.html#method_generateId", "access": "", "host": "Event", "params": "el <Object>  the element to create the id for", "type": "method", "description": "Generates an unique ID for the element if it does not already \nhave one."}, {"name": "_generateRequest", "url": "DataSource.Get.html#method__generateRequest", "access": "protected", "host": "DataSource.Get", "params": "guid <String>   unique identifier for callback function wrapper", "type": "method", "description": "Default method for adding callback param to url.  See\ngenerateRequestCallback attribute."}, {"name": "generateRequest", "url": "AutoComplete.html#method_generateRequest", "access": "", "host": "AutoComplete", "params": "query <String>  The string currently being entered", "type": "method", "description": "An overridable method that creates an object to be passed to the sendRequest\nmethod of the data source object. Useful to overwrite if you wish to create\na custom request object before it's sent."}, {"name": "generateRequestCallback", "url": "DataSource.Get.html#config_generateRequestCallback", "access": "", "host": "DataSource.Get", "params": "", "type": "config", "description": "Accepts the DataSource instance and a callback ID, and returns a callback\nparam/value string that gets appended to the script URI. Implementers\ncan customize this string to match their server's query syntax."}, {"name": "generateRequestCallbackChange", "url": "DataSource.Get.html#event_generateRequestCallbackChange", "access": "", "host": "DataSource.Get", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'generateRequestCallback' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "get", "url": "Node.html#method_get", "access": "", "host": "Node", "params": "attr <String>  The attribute", "type": "method", "description": "Returns an attribute value on the Node instance.\nUnless pre-configured (via Node.ATTRS), get hands \noff to the underlying DOM node.  Only valid\nattributes/properties for the node will be set."}, {"name": "get", "url": "NodeList.html#method_get", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Called on each Node instance"}, {"name": "get", "url": "DataSource.Get.html#config_get", "access": "", "host": "DataSource.Get", "params": "", "type": "config", "description": "Pointer to Get Utility."}, {"name": "get", "url": "Intl.html#method_get", "access": "", "host": "Intl", "params": "module <String>  The module name., key <String>  Optional. A single resource key. If not provided, returns a copy (shallow clone) of all resources., lang <String>  Optional. The BCP 47 language tag. If not provided, the module's currently active language is used.", "type": "method", "description": "Gets the module's localized resources for the currently active language (as provided by the <a href=\"#method_getLang\">getLang</a> method).\n<p>\nOptionally, the localized resources for alternate languages which have been added to Intl (see the <a href=\"#method_add\">add</a> method) can \nbe retrieved by providing the BCP 47 language tag as the lang parameter.   \n</p>"}, {"name": "get", "url": "State.html#method_get", "access": "", "host": "State", "params": "name <String>   The name of the item, key <String>   Optional. The property value to retrieve.", "type": "method", "description": "For a given item, returns the value of the property requested, or undefined if not found."}, {"name": "get", "url": "Attribute.html#method_get", "access": "", "host": "Attribute", "params": "name <String>  The name of the attribute. If the value of the attribute is an Object, \ndot notation can be used to obtain the value of a property of the object (e.g. <code>get(\"x.y.z\")</code>)", "type": "method", "description": "Returns the current value of the attribute. If the attribute\nhas been configured with a 'getter' function, this method will delegate\nto the 'getter' to obtain the value of the attribute."}, {"name": "get", "url": "Cookie.html#method_get", "access": "", "host": "Cookie", "params": "name <String>  The name of the cookie to retrieve., options <Function|Object>  (Optional) An object containing one or more\ncookie options: raw (true/false) and converter (a function).\nThe converter function is run on the value before returning it. The\nfunction is not used if the cookie doesn't exist. The function can be\npassed instead of the options object for backwards compatibility. When\nraw is set to true, the cookie value is not URI decoded.", "type": "method", "description": "Returns the cookie value for the given name."}, {"name": "getAlignPoint", "url": "OverlayContextPanel.html#method_getAlignPoint", "access": "", "host": "OverlayContextPanel", "params": "", "type": "method", "description": "Normalize the align point value. The align point 'cc' is not a valid\nposition for the arrow and then it's normalized to the 'bc' point."}, {"name": "getAll", "url": "State.html#method_getAll", "access": "", "host": "State", "params": "name <String>   The name of the item", "type": "method", "description": "For the given item, returns a disposable object with all of the\nitem's property/value pairs."}, {"name": "_getAppendOrder", "url": "DatePickerSelect.html#method__getAppendOrder", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Gets an Array with the field elements in the correct order defined\non <a href=\"DatePickerSelect.html#config_appendOrder\">appendOrder</a>."}, {"name": "getAttibute", "url": "DOM.html#method_getAttibute", "access": "", "host": "DOM", "params": "el <String | HTMLElement>  The target element for the attribute., attr <String>  The attribute to get.", "type": "method", "description": "Provides a normalized attribute interface."}, {"name": "_getAttr", "url": "Attribute.html#method__getAttr", "access": "protected", "host": "Attribute", "params": "name <String>  The name of the attribute.", "type": "method", "description": "Provides the common implementation for the public get method,\nallowing Attribute hosts to over-ride either method.\nSee <a href=\"#method_get\">get</a> for argument details."}, {"name": "_getAttrCfgs", "url": "Base.html#method__getAttrCfgs", "access": "protected", "host": "Base", "params": "", "type": "method", "description": "Returns an aggregated set of attribute configurations, by traversing the class hierarchy."}, {"name": "getAttribute", "url": "Node.html#method_getAttribute", "access": "", "host": "Node", "params": "name <string>  The attribute name", "type": "method", "description": "Allows getting attributes on DOM nodes, normalizing in some cases.\nThis passes through to the DOM node, allowing for custom attributes."}, {"name": "getAttribute", "url": "NodeList.html#method_getAttribute", "access": "", "host": "NodeList", "params": "name <string>  The attribute name", "type": "method", "description": "Allows getting attributes on DOM nodes, normalizing in some cases.\nThis passes through to the DOM node, allowing for custom attributes."}, {"name": "getAttrs", "url": "Node.html#method_getAttrs", "access": "", "host": "Node", "params": "attrs <Array>  an array of attributes to get values", "type": "method", "description": "Returns an object containing the values for the requested attributes."}, {"name": "_getAttrs", "url": "Attribute.html#method__getAttrs", "access": "protected", "host": "Attribute", "params": "attrs <Array | boolean>  Optional. An array of attribute names. If omitted, all attribute values are\nreturned. If set to true, all attributes modified from their initial values are returned.", "type": "method", "description": "Implementation behind the public getAttrs method, to get multiple attribute values."}, {"name": "getAttrs", "url": "Attribute.html#method_getAttrs", "access": "", "host": "Attribute", "params": "attrs <Array | boolean>  Optional. An array of attribute names. If omitted, all attribute values are\nreturned. If set to true, all attributes modified from their initial values are returned.", "type": "method", "description": "Gets multiple attribute values."}, {"name": "getAvailableLangs", "url": "Intl.html#method_getAvailableLangs", "access": "", "host": "Intl", "params": "module <String>  The name of the module", "type": "method", "description": "Gets the list of languages for which localized resources are available for a given module, based on the module\nmeta-data (part of loader). If loader is not on the page, returns an empty array."}, {"name": "getAverage", "url": "Profiler.html#method_getAverage", "access": "", "host": "Profiler", "params": "name <String>  The name of the function whose data should be returned.\nIf an object type method, it should be 'constructor.prototype.methodName';\na normal object method would just be 'object.methodName'.", "type": "method", "description": "Returns the average amount of time (in milliseconds) that the function\nwith the given name takes to execute."}, {"name": "getBestMatch", "url": "DD.DDM.html#method_getBestMatch", "access": "", "host": "DD.DDM", "params": "drops <Array>  An Array of drops to scan for the best match., all <Boolean>  If present, it returns an Array. First item is best match, second is an Array of the other items in the original Array.", "type": "method", "description": "This method will gather the area for all potential targets and see which has the hightest covered area and return it."}, {"name": "getBezier", "url": "Anim.html#method_getBezier", "access": "", "host": "Anim", "params": "points <Array>  An array containing Bezier points, t <Number>  A number between 0 and 1 which is the basis for determining current position", "type": "method", "description": "Get the current position of the animated element based on t.\nEach point is an array of \"x\" and \"y\" values (0 = x, 1 = y)\nAt least 2 points are required (start and end).\nFirst point is start. Last point is end.\nAdditional control points are optional."}, {"name": "getBody", "url": "A.NodeList.html#method_getBody", "access": "", "host": "A.NodeList", "params": "", "type": "method", "description": "Get the body node. Shortcut to <code>A.one('body')</code>."}, {"name": "getBookmarkedState", "url": "History.html#method_getBookmarkedState", "access": "", "host": "History", "params": "moduleId <string>  Non-empty string representing your module.", "type": "method", "description": "Returns the state of a module according to the URL fragment\nidentifier. This method is useful to initialize your modules\nif your application was bookmarked from a particular state."}, {"name": "getCallback", "url": "AsyncQueue.html#method_getCallback", "access": "", "host": "AsyncQueue", "params": "id <String>   the id assigned to the callback", "type": "method", "description": "Retrieve a callback by its id.  Useful to modify the configuration\nwhile the queue is running."}, {"name": "getCallCount", "url": "Profiler.html#method_getCallCount", "access": "", "host": "Profiler", "params": "name <String>  The name of the function whose data should be returned.", "type": "method", "description": "Returns the number of times that the given function has been called."}, {"name": "getChange", "url": "DataSource.Get.html#event_getChange", "access": "", "host": "DataSource.Get", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'get' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "getCharCode", "url": "YUI.html#method_getCharCode", "access": "", "host": "YUI", "params": "ev <Event>  the event", "type": "method", "description": "Returns the charcode for an event"}, {"name": "getChildren", "url": "TreeData.html#method_getChildren", "access": "", "host": "TreeData", "params": "deep <boolean> ", "type": "method", "description": "Get an Array of the children nodes of the current TreeData."}, {"name": "_getClasses", "url": "Base.html#method__getClasses", "access": "protected", "host": "Base", "params": "", "type": "method", "description": "Returns the class hierarchy for this object, with Base being the last class in the array."}, {"name": "getClassName", "url": "Widget.html#method_getClassName", "access": "", "host": "Widget", "params": "args* <String*>  0..n strings which should be concatenated, using the default separator defined by ClassNameManager, to create the class name", "type": "method", "description": "Generate a standard prefixed classname for the Widget, prefixed by the default prefix defined\nby the <code>Y.config.classNamePrefix</code> attribute used by <code>ClassNameManager</code> and \n<code>Widget.NAME.toLowerCase()</code> (e.g. \"yui-widget-xxxxx-yyyyy\", based on default values for \nthe prefix and widget class name).\n<p>\nThe instance based version of this method can be used to generate standard prefixed classnames,\nbased on the instances NAME, as opposed to Widget.NAME. This method should be used when you\nneed to use a constant class name across different types instances.\n</p>"}, {"name": "getClassName", "url": "ClassNameManager.html#method_getClassName", "access": "", "host": "ClassNameManager", "params": "+ <String>  classnameSection one or more classname sections to be joined, skipPrefix <Boolean>  If set to true, the classname will not be prefixed with the default Y.config.classNameDelimiter value.", "type": "method", "description": "Returns a class name prefixed with the the value of the \n<code>Y.config.classNamePrefix</code> attribute + the provided strings.\nUses the <code>Y.config.classNameDelimiter</code> attribute to delimit the \nprovided strings. E.g. Y.ClassNameManager.getClassName('foo','bar'); // yui-foo-bar"}, {"name": "getComputedStyle", "url": "Node.html#method_getComputedStyle", "access": "", "host": "Node", "params": "attr <String>  The style attribute to retrieve.", "type": "method", "description": "Returns the computed value for the given style property."}, {"name": "getComputedStyle", "url": "NodeList.html#method_getComputedStyle", "access": "", "host": "NodeList", "params": "attr <String>  The style attribute to retrieve.", "type": "method", "description": "Returns an array of the computed value for each node."}, {"name": "getComputedStyle", "url": "DOM.html#method_getComputedStyle", "access": "", "host": "DOM", "params": "An <HTMLElement>  HTMLElement to get the style from., att <String>  The style property to get.", "type": "method", "description": "Returns the computed style for the given node."}, {"name": "getConstrainedXY", "url": "WidgetPositionConstrain.html#method_getConstrainedXY", "access": "", "host": "WidgetPositionConstrain", "params": "xy <Array>  The xy values to constrain, node <Node | boolean>  Optional. The node to constrain to, or true for the viewport", "type": "method", "description": "Calculates the constrained positions for the XY positions provided, using\nthe provided node argument is passed in. If no node value is passed in, the value of \nthe \"constrain\" attribute is used."}, {"name": "_getConstrainRegion", "url": "Resize.html#method__getConstrainRegion", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Get the constrain region based on the <code>constrain</code>\nattribute."}, {"name": "_getContentBoxSize", "url": "ProgressBar.html#method__getContentBoxSize", "access": "protected", "host": "ProgressBar", "params": "", "type": "method", "description": "Calculate the contentBox size based on the\n<code>orientation</code> of the progressbar. If the orientation\nis HORIZONTAL get the width, if the orientation is VERTICAL get\nthe height."}, {"name": "_getContentSetterByType", "url": "A.Plugin.IO.html#method__getContentSetterByType", "access": "protected", "host": "A.Plugin.IO", "params": "", "type": "method", "description": "Get the appropriated <a\nhref=\"A.Plugin.IO.html#method_setContent\">setContent</a> function\nimplementation for each <a href=\"A.Plugin.IO.html#config_type\">type</a>."}, {"name": "_getCount", "url": "Test.Assert.html#method__getCount", "access": "protected", "host": "Test.Assert", "params": "", "type": "method", "description": "Returns the number of assertions that have been performed."}, {"name": "getCoverage", "url": "Test.Runner.html#method_getCoverage", "access": "", "host": "Test.Runner", "params": "format <Function>  (Optional) A coverage format to return results in.", "type": "method", "description": "Returns the coverage report for the files that have been executed.\nThis returns only coverage information for files that have been\ninstrumented using YUI Test Coverage and only those that were run\nin the same pass."}, {"name": "getCssText", "url": "StyleSheet.html#method_getCssText", "access": "", "host": "StyleSheet", "params": "sel <String>   Selector string", "type": "method", "description": "Get the current cssText for a rule or the entire sheet.  If the\nselector param is supplied, only the cssText for that rule will be\nreturned, if found.  If the selector string targets multiple\nselectors separated by commas, the cssText of the first rule only\nwill be returned.  If no selector string, the stylesheet's full\ncssText will be returned."}, {"name": "getCurrentDate", "url": "Calendar.html#method_getCurrentDate", "access": "", "host": "Calendar", "params": "", "type": "method", "description": "Get current date."}, {"name": "getCurrentLink", "url": "ImageViewer.html#method_getCurrentLink", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Get the current loaded node link reference."}, {"name": "getCurrentState", "url": "History.html#method_getCurrentState", "access": "", "host": "History", "params": "moduleId <string>  Non-empty string representing your module.", "type": "method", "description": "Returns the current state of the specified module."}, {"name": "getData", "url": "Node.html#method_getData", "access": "", "host": "Node", "params": "name <string>  Optional name of the data field to retrieve.\nIf no name is given, all data is returned.", "type": "method", "description": "Retrieves arbitrary data stored on a Node instance.\nThis is not stored with the DOM node."}, {"name": "_getDayName", "url": "Calendar.html#method__getDayName", "access": "protected", "host": "Calendar", "params": "weekDay <Number> ", "type": "method", "description": "Get the day name of the passed weekDay from the locale map."}, {"name": "_getDayNameMin", "url": "Calendar.html#method__getDayNameMin", "access": "protected", "host": "Calendar", "params": "weekDay <Number> ", "type": "method", "description": "Get a very short day name of the passed weekDay from the locale map."}, {"name": "_getDayNameShort", "url": "Calendar.html#method__getDayNameShort", "access": "protected", "host": "Calendar", "params": "weekDay <Number> ", "type": "method", "description": "Get a short day name of the passed weekDay from the locale map."}, {"name": "getDaysInMonth", "url": "Calendar.html#method_getDaysInMonth", "access": "", "host": "Calendar", "params": "year <Number>  Year in the format YYYY., month <Number>  0 for January 11 for December.", "type": "method", "description": "Get the number of days in the passed year and month."}, {"name": "getDelegate", "url": "DD.DDM.html#method_getDelegate", "access": "", "host": "DD.DDM", "params": "", "type": "method", "description": "Get a delegate instance from a container node"}, {"name": "getDepth", "url": "TreeNode.html#method_getDepth", "access": "", "host": "TreeNode", "params": "", "type": "method", "description": "Get the depth of the current TreeNode."}, {"name": "getDetailedSelectedDates", "url": "Calendar.html#method_getDetailedSelectedDates", "access": "", "host": "Calendar", "params": "", "type": "method", "description": "Get an Array with selected dates with detailed information (day, month, year).\n<pre><code>[{\nyear: date.getFullYear(),\nmonth: date.getMonth(),\nday: date.getDate()\n}]</code></pre>"}, {"name": "getDoc", "url": "A.NodeList.html#method_getDoc", "access": "", "host": "A.NodeList", "params": "", "type": "method", "description": "Get the document node. Shortcut to <code>A.one(document)</code>."}, {"name": "getDOM", "url": "A.Node.html#method_getDOM", "access": "", "host": "A.Node", "params": "", "type": "method", "description": "Retrieves the DOM node bound to a Node instance. See\n<a href=\"Node.html#method_getDOMNode\">getDOMNode</a>."}, {"name": "getDOM", "url": "A.NodeList.html#method_getDOM", "access": "", "host": "A.NodeList", "params": "", "type": "method", "description": "See <a href=\"Node.html#method_getDOM\">Node getDOM</a>."}, {"name": "getDOMNode", "url": "Node.html#method_getDOMNode", "access": "", "host": "Node", "params": "node <Y.Node || HTMLNode>  The Node instance or an HTMLNode", "type": "method", "description": "Retrieves the DOM node bound to a Node instance"}, {"name": "getDrag", "url": "DD.DDM.html#method_getDrag", "access": "", "host": "DD.DDM", "params": "node <String/Object>  The Node instance or Selector string to check for a valid Drag Object", "type": "method", "description": "Get a valid Drag instance back from a Node or a selector string, false otherwise"}, {"name": "getDrop", "url": "DD.DDM.html#method_getDrop", "access": "", "host": "DD.DDM", "params": "node <String/Object>  The Node instance or Selector string to check for a valid Drop Object", "type": "method", "description": "Get a valid Drop instance back from a Node or a selector string, false otherwise"}, {"name": "getElementsByTagName", "url": "Node.html#method_getElementsByTagName", "access": "", "host": "Node", "params": "tagName <String>  The tagName to collect", "type": "method", "description": "Passes through to DOM method."}, {"name": "getEvent", "url": "Event.html#method_getEvent", "access": "", "host": "Event", "params": "e <Event>  the event parameter from the handler, el <HTMLElement>  the element the listener was attached to", "type": "method", "description": "Finds the event in the window object, the caller's arguments, or\nin the arguments of another method in the callstack.  This is\nexecuted automatically for events registered through the event\nmanager, so the implementer should not normally need to execute\nthis function at all."}, {"name": "getEvent", "url": "EventTarget.html#method_getEvent", "access": "", "host": "EventTarget", "params": "type <string>   the type, or name of the event, prefixed <string>   if true, the type is prefixed already", "type": "method", "description": "Returns the custom event of the provided type has been created, a\nfalsy value otherwise"}, {"name": "getEventOutputMap", "url": "TreeData.html#method_getEventOutputMap", "access": "", "host": "TreeData", "params": "node <TreeData> ", "type": "method", "description": "Get an object containing metadata for the custom events."}, {"name": "_getFieldValues", "url": "DataSchema.JSON.html#method__getFieldValues", "access": "protected", "host": "DataSchema.JSON", "params": "fields <Array>   Fields to find., array_in <Array>   Results to parse., data_out <Object>   In-progress parsed data to update.", "type": "method", "description": "Get field data values out of list of full results"}, {"name": "getFirstDate", "url": "Calendar.html#method_getFirstDate", "access": "", "host": "Calendar", "params": "year <Number>  Year in the format YYYY., month <Number>  0 for January 11 for December.", "type": "method", "description": "Get the Date for the first day of the passed year and month."}, {"name": "getFirstDayOfWeek", "url": "Calendar.html#method_getFirstDayOfWeek", "access": "", "host": "Calendar", "params": "year <Number>  Year in the format YYYY., month <Number>  0 for January 11 for December.", "type": "method", "description": "Get the first day of week of the passed year and month."}, {"name": "getFormattedSelectedDates", "url": "Calendar.html#method_getFormattedSelectedDates", "access": "", "host": "Calendar", "params": "", "type": "method", "description": "Get the selected dates formatted by the\n<a href=\"Calendar.html#config_dateFormat\">dateFormat</a>."}, {"name": "getFullReport", "url": "Profiler.html#method_getFullReport", "access": "", "host": "Profiler", "params": "", "type": "method", "description": "Returns an object containing profiling data for all of the functions \nthat were profiled. The object has an entry for each function and \nreturns all information (min, max, average, calls, etc.) for each\nfunction."}, {"name": "getFunctionReport", "url": "Profiler.html#method_getFunctionReport", "access": "", "host": "Profiler", "params": "", "type": "method", "description": "Returns an object containing profiling data for a single function.\nThe object has an entry for min, max, avg, calls, and points)."}, {"name": "getId", "url": "StyleSheet.html#method_getId", "access": "", "host": "StyleSheet", "params": "", "type": "method", "description": "Get the unique stamp for this StyleSheet instance"}, {"name": "_getInfoTemplate", "url": "ImageViewer.html#method__getInfoTemplate", "access": "protected", "host": "ImageViewer", "params": "v <String>  template", "type": "method", "description": "Get the <a href=\"ImageViewer.html#config_info\">info</a> template."}, {"name": "_getInfoTemplate", "url": "ImageGallery.html#method__getInfoTemplate", "access": "protected", "host": "ImageGallery", "params": "v <String>  template", "type": "method", "description": "Get the <a href=\"ImageViewer.html#config_info\">info</a> template."}, {"name": "_getInputData", "url": "Rating.html#method__getInputData", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Get the <code>index</code> element input data stored on <a\nhref=\"Rating.html#property_inputElementsData\">inputElementsData</a>."}, {"name": "getLang", "url": "Intl.html#method_getLang", "access": "", "host": "Intl", "params": "module <String>  The module name.", "type": "method", "description": "Get the currently active language for the given module."}, {"name": "getLangPackName", "url": "Loader.html#method_getLangPackName", "access": "", "host": "Loader", "params": "lang <string>   the language code, mname <string>   the module to build it for", "type": "method", "description": "Builds a module name for a language pack"}, {"name": "getLastDate", "url": "Calendar.html#method_getLastDate", "access": "", "host": "Calendar", "params": "year <Number>  Year in the format YYYY., month <Number>  0 for January 11 for December.", "type": "method", "description": "Get the Date for the last day of the passed year and month."}, {"name": "getLink", "url": "ImageViewer.html#method_getLink", "access": "", "host": "ImageViewer", "params": "currentIndex <Number> ", "type": "method", "description": "Get the Node reference to the <code>currentIndex</code> element from\nthe <a href=\"ImageViewer.html#config_links\">links</a>."}, {"name": "getListeners", "url": "Event.html#method_getListeners", "access": "", "host": "Event", "params": "el <HTMLElement|string>   the element or element id to inspect, type <string>   optional type of listener to return. If\nleft out, all listeners will be returned", "type": "method", "description": "Returns all listeners attached to the given element via addListener.\nOptionally, you can specify a specific type of event to return."}, {"name": "_getLocaleMap", "url": "Calendar.html#method__getLocaleMap", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Get the locale map containing the respective values for the\n<a href=\"Widget.html#config_locale\">locale</a> used.\n<pre><code>A.DataType.Date.Locale['pt-br'] = A.merge(\nA.DataType.Date.Locale['en'], {\na: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Fri', 'Sat'],\nA: ['Domingo','Segunda-feira','Ter&ccedil;a-feira','Quarta-feira','Quinta-feira','Sexta-feira','Sabado'],\nb: ['Jan','Fev','Mar','Abr','Mai','Jun', 'Jul','Ago','Set','Out','Nov','Dez'],\nB: ['Janeiro','Fevereiro','Mar&ccedil;o','Abril','Maio','Junho', 'Julho','Agosto','Setembro','Outubro','Novembro','Dezembro'],\nc: '%a %d %b %Y %T %Z',\np: ['AM', 'PM'],\nP: ['am', 'pm'],\nr: '%I:%M:%S %p',\nx: '%d/%m/%y',\nX: '%T'\n}\n);</code></pre>"}, {"name": "_getLocationValue", "url": "DataSchema.XML.html#method__getLocationValue", "access": "protected", "host": "DataSchema.XML", "params": "field <String | Object>   Field definition., context <Object>   XML node or document to search within.", "type": "method", "description": "Get an XPath-specified value for a given field from an XML node or document."}, {"name": "getMax", "url": "Profiler.html#method_getMax", "access": "", "host": "Profiler", "params": "name <String>  The name of the function whose data should be returned.\nIf an object type method, it should be 'constructor.prototype.methodName';\na normal object method would just be 'object.methodName'.", "type": "method", "description": "Returns the maximum amount of time (in milliseconds) that the function\nwith the given name takes to execute."}, {"name": "getMessage", "url": "Assert.Error.html#method_getMessage", "access": "", "host": "Assert.Error", "params": "", "type": "method", "description": "Returns a fully formatted error for an assertion failure. This should\nbe overridden by all subclasses to provide specific information."}, {"name": "getMessage", "url": "Assert.UnexpectedValue.html#method_getMessage", "access": "", "host": "Assert.UnexpectedValue", "params": "", "type": "method", "description": "Returns a fully formatted error for an assertion failure. The message\ncontains information about the unexpected value that was encountered."}, {"name": "getMin", "url": "Profiler.html#method_getMin", "access": "", "host": "Profiler", "params": "name <String>  The name of the function whose data should be returned.\nIf an object type method, it should be 'constructor.prototype.methodName';\na normal object method would just be 'object.methodName'.", "type": "method", "description": "Returns the minimum amount of time (in milliseconds) that the function\nwith the given name takes to execute."}, {"name": "_getMonthName", "url": "Calendar.html#method__getMonthName", "access": "protected", "host": "Calendar", "params": "month <Number> ", "type": "method", "description": "Get a month name of the passed month from the locale map."}, {"name": "_getMonthNameShort", "url": "Calendar.html#method__getMonthNameShort", "access": "protected", "host": "Calendar", "params": "month <Number> ", "type": "method", "description": "Get a short month name of the passed month from the locale map."}, {"name": "getName", "url": "Test.Runner.html#method_getName", "access": "", "host": "Test.Runner", "params": "", "type": "method", "description": "Retrieves the name of the current result set."}, {"name": "getNode", "url": "DD.DDM.html#method_getNode", "access": "", "host": "DD.DDM", "params": "n <Node/Object/String>  The node to resolve.", "type": "method", "description": "Return a node instance from the given node, selector string or Y.Base extended object."}, {"name": "getNodeByChild", "url": "TreeData.html#method_getNodeByChild", "access": "", "host": "TreeData", "params": "child <Node> ", "type": "method", "description": "Get a TreeNode instance by a child DOM Node."}, {"name": "getNodeById", "url": "TreeData.html#method_getNodeById", "access": "", "host": "TreeData", "params": "uid <String> ", "type": "method", "description": "Get a TreeNode by id."}, {"name": "getOriginal", "url": "Profiler.html#method_getOriginal", "access": "", "host": "Profiler", "params": "name <String>  The name of the function/object to retrieve.", "type": "method", "description": "Returns the uninstrumented version of a function/object."}, {"name": "getPageX", "url": "YUI.html#method_getPageX", "access": "", "host": "YUI", "params": "ev <Event>  the event", "type": "method", "description": "Returns the event's pageX"}, {"name": "getPageY", "url": "YUI.html#method_getPageY", "access": "", "host": "YUI", "params": "ev <Event>  the event", "type": "method", "description": "Returns the event's pageY"}, {"name": "_getPixelStep", "url": "ProgressBar.html#method__getPixelStep", "access": "protected", "host": "ProgressBar", "params": "", "type": "method", "description": "Calculate the number of pixels to set the <code>statusNode</code>."}, {"name": "getProvides", "url": "Loader.html#method_getProvides", "access": "", "host": "Loader", "params": "name <string>   The name of the module", "type": "method", "description": "Returns a hash of module names the supplied module satisfies."}, {"name": "getQueryStringParameter", "url": "History.html#method_getQueryStringParameter", "access": "", "host": "History", "params": "paramName <string>  Name of the parameter we want to look up., queryString <string>  Optional URL to look at. If not specified,\nthis method uses the URL in the address bar.", "type": "method", "description": "Returns the value of the specified query string parameter.\nThis method is not used internally by the Browser History Manager.\nHowever, it is provided here as a helper since many applications\nusing the Browser History Manager will want to read the value of\nurl parameters to initialize themselves."}, {"name": "_getRatio", "url": "ProgressBar.html#method__getRatio", "access": "protected", "host": "ProgressBar", "params": "", "type": "method", "description": "Calculate the ratio based on <code>max</code> and\n<code>min</code> values."}, {"name": "_getRatio", "url": "ImageViewer.html#method__getRatio", "access": "protected", "host": "ImageViewer", "params": "width <Number>  Image width, height <Number>  Image height", "type": "method", "description": "Calculate the resize ratio for the loaded image."}, {"name": "getRegion", "url": "Plugin.DDConstrained.html#method_getRegion", "access": "", "host": "Plugin.DDConstrained", "params": "inc <Boolean>  Include the node's height and width", "type": "method", "description": "Get the active region: viewport, node, custom region"}, {"name": "getRelatedTarget", "url": "YUI.html#method_getRelatedTarget", "access": "", "host": "YUI", "params": "ev <Event>  the event", "type": "method", "description": "Returns the event's related target"}, {"name": "getReport", "url": "Profiler.html#method_getReport", "access": "", "host": "Profiler", "params": "", "type": "method", "description": "Returns an object containing profiling data for a single function.\nThe object has an entry for min, max, avg, calls, and points)."}, {"name": "getRequires", "url": "Loader.html#method_getRequires", "access": "", "host": "Loader", "params": "mod <Object>  The module definition from moduleInfo", "type": "method", "description": "Returns an object containing properties for all modules required\nin order to load the requested module"}, {"name": "getResults", "url": "Test.Runner.html#method_getResults", "access": "", "host": "Test.Runner", "params": "format <Function>  (Optional) A test format to return the results in.", "type": "method", "description": "Returns the last complete results set from the TestRunner. Null is returned\nif the TestRunner is running or no tests have been run."}, {"name": "getSelectedDates", "url": "Calendar.html#method_getSelectedDates", "access": "", "host": "Calendar", "params": "", "type": "method", "description": "Get the selected dates."}, {"name": "getSkinName", "url": "Widget.html#method_getSkinName", "access": "", "host": "Widget", "params": "", "type": "method", "description": "Returns the name of the skin that's currently applied to the widget.\nThis is only really useful after the widget's DOM structure is in the\ndocument, either by render or by progressive enhancement.  Searches up\nthe Widget's ancestor axis for a class yui3-skin-(name), and returns the\n(name) portion.  Otherwise, returns null."}, {"name": "getSortable", "url": "Sortable.html#method_getSortable", "access": "", "host": "Sortable", "params": "node <String|Node>  The node instance or selector string to use to find a Sortable instance.", "type": "method", "description": "Get a sortable instance back from a node reference or a selector string."}, {"name": "_getSrcNode", "url": "Widget.html#method__getSrcNode", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": ""}, {"name": "_getState", "url": "Paginator.html#method__getState", "access": "protected", "host": "Paginator", "params": "v <Object>  Current state object.", "type": "method", "description": "Private getter for <a href=\"Paginator.html#config_state\">state</a>."}, {"name": "_getState", "url": "ButtonItem.html#method__getState", "access": "protected", "host": "ButtonItem", "params": "key <String>  The state name to retrieve, parent <Object>  The parent widget to attempt to retrieve the state from", "type": "method", "description": "Retrieves the state value from either the current instance, or if defined, the\nparent widget."}, {"name": "getStdModNode", "url": "WidgetStdMod.html#method_getStdModNode", "access": "", "host": "WidgetStdMod", "params": "section <String>  The section whose node reference is required. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.", "type": "method", "description": "Returns the node reference for the given section. Note: The DOM is not queried for the node reference. The reference\nstored by the widget instance is returned if set."}, {"name": "_getStdModTemplate", "url": "WidgetStdMod.html#method__getStdModTemplate", "access": "protected", "host": "WidgetStdMod", "params": "section <String>  The section to create a new node for. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.", "type": "method", "description": "Gets a new Node reference for the given standard module section, by cloning\nthe stored template node."}, {"name": "_getStep", "url": "ProgressBar.html#method__getStep", "access": "protected", "host": "ProgressBar", "params": "", "type": "method", "description": "Calculate the progressbar step based on <code>ratio</code>\nvalue."}, {"name": "getString", "url": "Widget.html#method_getString", "access": "", "host": "Widget", "params": "key <String> ", "type": "method", "description": "Helper method to get a specific string value"}, {"name": "getStyle", "url": "Node.html#method_getStyle", "access": "", "host": "Node", "params": "attr <String>  The style attribute to retrieve.", "type": "method", "description": "Returns the style's current value."}, {"name": "getStyle", "url": "NodeList.html#method_getStyle", "access": "", "host": "NodeList", "params": "attr <String>  The style attribute to retrieve.", "type": "method", "description": "Returns an array of values for each node."}, {"name": "getStyle", "url": "DOM.html#method_getStyle", "access": "", "host": "DOM", "params": "An <HTMLElement>  HTMLElement to get the style from., att <String>  The style property to get.", "type": "method", "description": "Returns the current style value for the given property."}, {"name": "getSub", "url": "Cookie.html#method_getSub", "access": "", "host": "Cookie", "params": "name <String>  The name of the cookie to retrieve., subName <String>  The name of the subcookie to retrieve., converter <Function>  (Optional) A function to run on the value before returning\nit. The function is not used if the cookie doesn't exist.", "type": "method", "description": "Returns the value of a subcookie."}, {"name": "getSubs", "url": "Cookie.html#method_getSubs", "access": "", "host": "Cookie", "params": "name <String>  The name of the cookie to retrieve.", "type": "method", "description": "Returns an object containing name-value pairs stored in the cookie with the given name."}, {"name": "getSubs", "url": "CustomEvent.html#method_getSubs", "access": "", "host": "CustomEvent", "params": "", "type": "method", "description": "Get all of the subscribers to this event and any sibling event"}, {"name": "getSubscriber", "url": "CustomEvent.html#method_getSubscriber", "access": "", "host": "CustomEvent", "params": "fn <Function>   Optional. The subscribed callback function, ctx <Object>   Optional.  The context override for the callback", "type": "method", "description": "Returns the first subscriber that matches the provided function and/or\ncontext.  Both function and context parameters are optional.  Omitting\neither will return the first match on the other parameter, and omitting both\nwill return the first subscriber."}, {"name": "getTarget", "url": "YUI.html#method_getTarget", "access": "", "host": "YUI", "params": "ev <Event>  the event, resolveTextNode <boolean>  when set to true the target's\nparent will be returned if the target is a \ntext node.  @deprecated, the text node is\nnow resolved automatically", "type": "method", "description": "Returns the event's target element.  Safari sometimes provides\na text node, and this is automatically resolved to the text\nnode's parent so that it behaves like other browsers."}, {"name": "getTargets", "url": "EventTarget.html#method_getTargets", "access": "", "host": "EventTarget", "params": "", "type": "method", "description": "Returns an array of bubble targets for this object."}, {"name": "getTargetSize", "url": "OverlayMask.html#method_getTargetSize", "access": "", "host": "OverlayMask", "params": "", "type": "method", "description": "Get the size of the\n<a href=\"OverlayMask.html#config_target\">target</a>. Used to dimension\nthe mask node."}, {"name": "_getTemplate", "url": "Paginator.html#method__getTemplate", "access": "protected", "host": "Paginator", "params": "v <String>  Current template.", "type": "method", "description": "Getter for <a href=\"Paginator.html#config_template\">template</a>."}, {"name": "getText", "url": "DOM.html#method_getText", "access": "", "host": "DOM", "params": "element <HTMLElement>  The html element.", "type": "method", "description": "Returns the text content of the HTMLElement."}, {"name": "_getThumbDestination", "url": "ClickableRail.html#method__getThumbDestination", "access": "protected", "host": "ClickableRail", "params": "e <DOMEvent>   The mousedown event object, node <Node>   The node to position", "type": "method", "description": "Calculates the top left position the thumb should be moved to to\nalign the click XY with the center of the specified node."}, {"name": "_getTime", "url": "DelayedTask.html#method__getTime", "access": "protected", "host": "DelayedTask", "params": "", "type": "method", "description": "Get the current timestamp (i.e., now)."}, {"name": "getTime", "url": "YUI.html#method_getTime", "access": "", "host": "YUI", "params": "ev <Event>  the event", "type": "method", "description": "Returns the time of the event.  If the time is not included, the\nevent is modified using the current time."}, {"name": "_getTopmostSubmenu", "url": "plugin.NodeMenuNav.html#method__getTopmostSubmenu", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menu <Node>  Node instance representing a menu.", "type": "method", "description": "Returns the topmost submenu of a submenu hierarchy."}, {"name": "_getUIEventNode", "url": "Widget.html#method__getUIEventNode", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Returns the node on which to bind delegate listeners."}, {"name": "_getUseBrowserConsole", "url": "Console.html#method__getUseBrowserConsole", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Getter method for useBrowserConsole attribute.  Just a pass through to\nthe YUI instance configuration setting."}, {"name": "_getUseBrowserConsole", "url": "Plugin.Console.html#method__getUseBrowserConsole", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Getter method for useBrowserConsole attribute.  Just a pass through to\nthe YUI instance configuration setting."}, {"name": "getValue", "url": "SliderValueRange.html#method_getValue", "access": "", "host": "SliderValueRange", "params": "", "type": "method", "description": "Returns the current value.  Override this if you want to introduce\noutput formatting. Otherwise equivalent to slider.get( \"value\" );"}, {"name": "getValue", "url": "Object.html#method_getValue", "access": "", "host": "Object", "params": "o <Object>  The object from which to extract the property value, path <Array>   A path array, specifying the object traversal path\nfrom which to obtain the sub value.", "type": "method", "description": "Retrieves the sub value at the provided path,\nfrom the value object provided."}, {"name": "_getValueFromPosition", "url": "YUI.html#method__getValueFromPosition", "access": "protected", "host": "YUI", "params": "", "type": "method", "description": "Calculate the value from the current Drag element's position.  This is\nused to initialize the value attribute if it isn't set at construction."}, {"name": "getWin", "url": "A.NodeList.html#method_getWin", "access": "", "host": "A.NodeList", "params": "", "type": "method", "description": "Get the window node. Shortcut to <code>A.one(window)</code>."}, {"name": "getX", "url": "Node.html#method_getX", "access": "", "host": "Node", "params": "", "type": "method", "description": "Gets the current position of the node in page coordinates."}, {"name": "_getX", "url": "WidgetPosition.html#method__getX", "access": "", "host": "WidgetPosition", "params": "", "type": "method", "description": "Default getter for the X attribute. The value is retrieved from \nthe XY attribute, which is the sole store for the XY state."}, {"name": "getX", "url": "DOM.html#method_getX", "access": "", "host": "DOM", "params": "element <Object>  The target element", "type": "method", "description": "Gets the current X position of an element based on page coordinates. \nElement must be part of the DOM tree to have page coordinates\n(display:none or elements not appended return false)."}, {"name": "_getXPathResult", "url": "DataSchema.XML.html#method__getXPathResult", "access": "protected", "host": "DataSchema.XML", "params": "locator <String>   The XPath location., context <Object>   XML node or document to search within., xmldoc <Object>   XML document to resolve namespace.", "type": "method", "description": "Fetches the XPath-specified result for a given location in an XML node or document."}, {"name": "getXY", "url": "Node.html#method_getXY", "access": "", "host": "Node", "params": "", "type": "method", "description": "Gets the current position of the node in page coordinates."}, {"name": "getXY", "url": "DOM.html#method_getXY", "access": "", "host": "DOM", "params": "element <Object>  The target element", "type": "method", "description": "Gets the current position of an element based on page coordinates. \nElement must be part of the DOM tree to have page coordinates\n(display:none or elements not appended return false)."}, {"name": "getXY", "url": "YUI.html#method_getXY", "access": "", "host": "YUI", "params": "ev <Event>  the event", "type": "method", "description": "Returns the pageX and pageY properties as an indexed array."}, {"name": "getY", "url": "Node.html#method_getY", "access": "", "host": "Node", "params": "", "type": "method", "description": "Gets the current position of the node in page coordinates."}, {"name": "_getY", "url": "WidgetPosition.html#method__getY", "access": "", "host": "WidgetPosition", "params": "", "type": "method", "description": "Default getter for the Y attribute. The value is retrieved from \nthe XY attribute, which is the sole store for the XY state."}, {"name": "getY", "url": "DOM.html#method_getY", "access": "", "host": "DOM", "params": "element <Object>  The target element", "type": "method", "description": "Gets the current Y position of an element based on page coordinates. \nElement must be part of the DOM tree to have page coordinates\n(display:none or elements not appended return false)."}, {"name": "Global", "url": "YUI.html#property_Global", "access": "", "host": "YUI", "params": "", "type": "property", "description": "Hosts YUI page level events.  This is where events bubble to\nwhen the broadcast config is set to 2.  This property is\nonly available if the custom event module is loaded."}, {"name": "globalEval", "url": "ParseContent.html#method_globalEval", "access": "", "host": "ParseContent", "params": "data <String>  JavaScript String.", "type": "method", "description": "Global eval the <data>data</data> passed."}, {"name": "_goingDownState", "url": "TreeViewDD.html#method__goingDownState", "access": "protected", "host": "TreeViewDD", "params": "nodeContent <Node> ", "type": "method", "description": "Set the going down CSS state on the passed <code>nodeContent</code>."}, {"name": "_goingUpState", "url": "TreeViewDD.html#method__goingUpState", "access": "protected", "host": "TreeViewDD", "params": "nodeContent <Node> ", "type": "method", "description": "Set the going up CSS state on the passed <code>nodeContent</code>."}, {"name": "groups", "url": "DD.Drag.html#config_groups", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "Array of groups to add this drag into."}, {"name": "groups", "url": "DD.Drop.html#config_groups", "access": "", "host": "DD.Drop", "params": "", "type": "config", "description": "Array of groups to add this drop into."}, {"name": "groupsChange", "url": "DD.Drag.html#event_groupsChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'groups' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "groupsChange", "url": "DD.Drop.html#event_groupsChange", "access": "", "host": "DD.Drop", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'groups' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_guid", "url": "Widget.html#method__guid", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": ""}, {"name": "guid", "url": "YUI.html#method_guid", "access": "", "host": "YUI", "params": "pre <string>   optional guid prefix", "type": "method", "description": "Generate an id that is unique among all YUI instances"}, {"name": "guid", "url": "A.Node.html#method_guid", "access": "", "host": "A.Node", "params": "prefix <string>  optional guid prefix", "type": "method", "description": "Set the id of the Node instance if the object does not have one. The\ngenerated id is based on a guid created by the\n<a href=\"YUI.html#method_stamp\">stamp</a> method."}, {"name": "gutter", "url": "Plugin.DDConstrained.html#config_gutter", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "CSS style string for the gutter of a region (supports negative values): '5 0' (sets top and bottom to 5px, left and right to 0px), '1 2 3 4' (top 1px, right 2px, bottom 3px, left 4px)"}, {"name": "gutterChange", "url": "Plugin.DDConstrained.html#event_gutterChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'gutter' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "halt", "url": "DOMEventFacade.html#method_halt", "access": "", "host": "DOMEventFacade", "params": "immediate <boolean>   if true additional listeners\non the current target will not be executed", "type": "method", "description": "Stops the event propagation and prevents the default\nevent behavior."}, {"name": "halt", "url": "CustomEvent.html#method_halt", "access": "", "host": "CustomEvent", "params": "immediate <boolean>   if true additional listeners\non the current target will not be executed", "type": "method", "description": "Stops the event propagation and prevents the default\nevent behavior."}, {"name": "halt", "url": "EventFacade.html#method_halt", "access": "", "host": "EventFacade", "params": "immediate <boolean>   if true additional listeners\non the current target will not be executed", "type": "method", "description": "Stops the event propagation and prevents the default\nevent behavior."}, {"name": "_handleClickEvent", "url": "Rating.html#method__handleClickEvent", "access": "protected", "host": "Rating", "params": "event <EventFacade>  click event facade", "type": "method", "description": "Fires the click event."}, {"name": "_handleEvent", "url": "Dialog.html#method__handleEvent", "access": "protected", "host": "Dialog", "params": "event <EventFacade>  close event facade", "type": "method", "description": "Handles the close event logic."}, {"name": "_handleEvent", "url": "TreeViewDD.html#method__handleEvent", "access": "protected", "host": "TreeViewDD", "params": "event <EventFacade>  append event facade", "type": "method", "description": "Fires after the append event."}, {"name": "_handleMouseOutEvent", "url": "Rating.html#method__handleMouseOutEvent", "access": "protected", "host": "Rating", "params": "event <EventFacade>  mouseOut event facade", "type": "method", "description": "Fires the mouseOut event."}, {"name": "_handleMouseOverEvent", "url": "Rating.html#method__handleMouseOverEvent", "access": "protected", "host": "Rating", "params": "event <EventFacade>  mouseOver event facade", "type": "method", "description": "Fires the mouseOver event."}, {"name": "_handleMouseUpEvent", "url": "Resize.html#method__handleMouseUpEvent", "access": "protected", "host": "Resize", "params": "event <EventFacade>  resize:mouseUp event facade", "type": "method", "description": "Fires the resize:mouseUp event."}, {"name": "_handlePaginatorClickEvent", "url": "TreeNodeIO.html#method__handlePaginatorClickEvent", "access": "protected", "host": "TreeNodeIO", "params": "event <EventFacade>  paginatorClick event facade", "type": "method", "description": "Fires the paginatorClick event."}, {"name": "handler", "url": "ButtonItem.html#config_handler", "access": "", "host": "ButtonItem", "params": "", "type": "config", "description": "An event callback to handle when a user interacts with the button.\nThis can either be a function that will be attached on click, or\nan object map that accepts the following keys:\n<code>{fn: // The function to execute\ncontext: // The context to execute the function in\ntype: // The type of event to listen for (defaults to \"click\")\n}</code>"}, {"name": "handler", "url": "CharCounter.html#property_handler", "access": "protected", "host": "CharCounter", "params": "", "type": "property", "description": "Event handler for the input <a\nhref=\"module_aui-event.html\">aui-event</a> event."}, {"name": "handlerChange", "url": "ButtonItem.html#event_handlerChange", "access": "", "host": "ButtonItem", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'handler' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_handleResizeEndEvent", "url": "Resize.html#method__handleResizeEndEvent", "access": "protected", "host": "Resize", "params": "event <EventFacade>  resize:end event facade", "type": "method", "description": "Fires the resize:end event."}, {"name": "_handleResizeEvent", "url": "Resize.html#method__handleResizeEvent", "access": "protected", "host": "Resize", "params": "event <EventFacade>  resize:resize event facade", "type": "method", "description": "Fires the resize:resize event."}, {"name": "_handleResizeStartEvent", "url": "Resize.html#method__handleResizeStartEvent", "access": "protected", "host": "Resize", "params": "event <EventFacade>  resize:start event facade", "type": "method", "description": "Fires the resize:start event."}, {"name": "handleResponse", "url": "AutoComplete.html#method_handleResponse", "access": "", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Handles the response for the display of the results. This is a callback method\nthat is fired by the sendRequest method so that results are ready to be accessed."}, {"name": "handles", "url": "Resize.html#config_handles", "access": "", "host": "Resize", "params": "", "type": "config", "description": "The handles to use (any combination of): 't', 'b', 'r', 'l', 'bl',\n'br', 'tl', 'tr'. Can use a shortcut of All."}, {"name": "handles", "url": "DD.Drag.html#config_handles", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "Array of valid handles to add. Adding something here will set all handles, even if previously added with addHandle"}, {"name": "handles", "url": "DD.Delegate.html#config_handles", "access": "", "host": "DD.Delegate", "params": "", "type": "config", "description": "The handles config option added to the temp DD instance."}, {"name": "handles", "url": "Sortable.html#config_handles", "access": "", "host": "Sortable", "params": "", "type": "config", "description": "Drag handles to pass on to the internal DD.Delegate instance."}, {"name": "handlesChange", "url": "Resize.html#event_handlesChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'handles' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "handlesChange", "url": "DD.Drag.html#event_handlesChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'handles' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "handlesChange", "url": "DD.Delegate.html#event_handlesChange", "access": "", "host": "DD.Delegate", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'handles' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "handlesChange", "url": "Sortable.html#event_handlesChange", "access": "", "host": "Sortable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'handles' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hasAttribute", "url": "Node.html#method_hasAttribute", "access": "", "host": "Node", "params": "attribute <String>  The attribute to test for", "type": "method", "description": "Passes through to DOM method."}, {"name": "hasChildNodes", "url": "Node.html#method_hasChildNodes", "access": "", "host": "Node", "params": "", "type": "method", "description": "Passes through to DOM method."}, {"name": "hasChildNodes", "url": "TreeData.html#method_hasChildNodes", "access": "", "host": "TreeData", "params": "", "type": "method", "description": "Whether the TreeData contains children or not."}, {"name": "hasClass", "url": "Node.html#method_hasClass", "access": "", "host": "Node", "params": "className <String>  the class name to search for", "type": "method", "description": "Determines whether each node has the given className."}, {"name": "hasClass", "url": "NodeList.html#method_hasClass", "access": "", "host": "NodeList", "params": "className <String>  the class name to search for", "type": "method", "description": "Determines whether each node has the given className."}, {"name": "hasClass", "url": "DOM.html#method_hasClass", "access": "", "host": "DOM", "params": "element <HTMLElement>  The DOM element., className <String>  the class name to search for", "type": "method", "description": "Determines whether a DOM element has the given className."}, {"name": "_hasFocus", "url": "plugin.NodeMenuNav.html#property__hasFocus", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Boolean indicating if the menu has focus."}, {"name": "hash", "url": "Array.html#method_hash", "access": "", "host": "Array", "params": "k <Array>   keyset, v <Array>   optional valueset", "type": "method", "description": "Returns an object using the first array as keys, and\nthe second as values.  If the second array is not\nprovided the value is set to true for each."}, {"name": "hasKey", "url": "Assert.ObjectAssert.html#method_hasKey", "access": "", "host": "Assert.ObjectAssert", "params": "propertyName <String>  The name of the property to test., object <Object>  The object to search., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that an object has a property with the given name."}, {"name": "hasKey", "url": "Object.html#method_hasKey", "access": "", "host": "Object", "params": "o <Object>  an object, k <Object>  the key to query", "type": "method", "description": "Returns true if the object contains a given key"}, {"name": "hasKeys", "url": "Assert.ObjectAssert.html#method_hasKeys", "access": "", "host": "Assert.ObjectAssert", "params": "properties <Array>  An array of property names that should be on the object., object <Object>  The object to search., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that an object has all properties of a reference object."}, {"name": "hasLink", "url": "ImageViewer.html#method_hasLink", "access": "", "host": "ImageViewer", "params": "currentIndex <Number> ", "type": "method", "description": "Check if there is a node reference for the <code>currentIndex</code>."}, {"name": "hasNext", "url": "ImageViewer.html#method_hasNext", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Check if there is a next element to navigate."}, {"name": "hasNextPage", "url": "Paginator.html#method_hasNextPage", "access": "", "host": "Paginator", "params": "", "type": "method", "description": "Check if there is a next page."}, {"name": "hasPage", "url": "Paginator.html#method_hasPage", "access": "", "host": "Paginator", "params": "page <Number> ", "type": "method", "description": "Check if the <code>page</code> exists."}, {"name": "hasPlugin", "url": "Plugin.Host.html#method_hasPlugin", "access": "", "host": "Plugin.Host", "params": "ns <String>  The plugin's namespace", "type": "method", "description": "Determines if a plugin has plugged into this host."}, {"name": "hasPrev", "url": "ImageViewer.html#method_hasPrev", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Check if there is a previous element to navigate."}, {"name": "hasPrevPage", "url": "Paginator.html#method_hasPrevPage", "access": "", "host": "Paginator", "params": "", "type": "method", "description": "Check if there is a previous page."}, {"name": "hasValue", "url": "Object.html#method_hasValue", "access": "", "host": "Object", "params": "o <Object>  an object, v <Object>  the value to query", "type": "method", "description": "Returns true if the object contains a given value"}, {"name": "_head", "url": "Console.html#property__head", "access": "protected", "host": "Console", "params": "", "type": "property", "description": "Reference to the Node instance containing the header contents."}, {"name": "_head", "url": "Plugin.Console.html#property__head", "access": "protected", "host": "Plugin.Console", "params": "", "type": "property", "description": "Reference to the Node instance containing the header contents."}, {"name": "header", "url": "io.html#method_header", "access": "", "host": "io", "params": "l <string>  - HTTP header, v <string>  - HTTP header value", "type": "method", "description": "Method that stores default client headers for all transactions.\nIf a label is passed with no value argument, the header will be deleted.\nThis is the interface for _setHeader()."}, {"name": "headerContent", "url": "WidgetStdMod.html#config_headerContent", "access": "", "host": "WidgetStdMod", "params": "", "type": "config", "description": "The content to be added to the header section. This will replace any existing content\nin the header. If you want to append, or insert new content, use the <a href=\"#method_setStdModContent\">setStdModContent</a> method."}, {"name": "headerContentChange", "url": "WidgetStdMod.html#event_headerContentChange", "access": "", "host": "WidgetStdMod", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'headerContent' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "headerContentNode", "url": "Calendar.html#property_headerContentNode", "access": "protected", "host": "Calendar", "params": "", "type": "property", "description": "This node is the WidgetStdMod.HEADER of the Calendar Overlay.\nContainer to the\n<a href=\"Calendar.html#property_headertitleNode\">headertitleNode</a>."}, {"name": "headers", "url": "IORequest.html#config_headers", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "Set the correct ACCEPT header based on the dataType."}, {"name": "headersChange", "url": "IORequest.html#event_headersChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'headers' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "headerTextNode", "url": "Panel.html#property_headerTextNode", "access": "protected", "host": "Panel", "params": "", "type": "property", "description": "Stores the created node for the header of the Panel."}, {"name": "headerTitleNode", "url": "Calendar.html#property_headerTitleNode", "access": "protected", "host": "Calendar", "params": "", "type": "property", "description": "Header title Node."}, {"name": "height", "url": "ProgressBar.html#config_height", "access": "", "host": "ProgressBar", "params": "", "type": "config", "description": "Display height of the progressbar."}, {"name": "height", "url": "Widget.html#config_height", "access": "", "host": "Widget", "params": "", "type": "config", "description": "String with units, or number, representing the height of the Widget. If a number is provided,\nthe default unit, defined by the Widgets DEF_UNIT, property is used."}, {"name": "height", "url": "Console.html#config_height", "access": "", "host": "Console", "params": "", "type": "config", "description": "String with units, or number, representing the height of the Console,\ninclusive of header and footer. If a number is provided, the default\nunit, defined by Widget's DEF_UNIT, property is used."}, {"name": "height", "url": "Plugin.Console.html#config_height", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "String with units, or number, representing the height of the Console,\ninclusive of header and footer. If a number is provided, the default\nunit, defined by Widget's DEF_UNIT, property is used."}, {"name": "height", "url": "ImgLoadImgObj.html#config_height", "access": "", "host": "ImgLoadImgObj", "params": "", "type": "config", "description": "Pixel height of the image. Will be set as a <code>height</code> attribute on the DOM element after the image is fetched.\nDefaults to the natural height of the image (no <code>height</code> attribute will be set).\nUsually only used with src images."}, {"name": "heightChange", "url": "ProgressBar.html#event_heightChange", "access": "", "host": "ProgressBar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "heightChange", "url": "Widget.html#event_heightChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "heightChange", "url": "Console.html#event_heightChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "heightChange", "url": "Plugin.Console.html#event_heightChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "heightChange", "url": "ImgLoadImgObj.html#event_heightChange", "access": "", "host": "ImgLoadImgObj", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'height' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "helper", "url": "TreeViewDD.html#config_helper", "access": "", "host": "TreeViewDD", "params": "", "type": "config", "description": "Dragdrop helper element."}, {"name": "helperChange", "url": "TreeViewDD.html#event_helperChange", "access": "", "host": "TreeViewDD", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'helper' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hiddenInput", "url": "Rating.html#config_hiddenInput", "access": "", "host": "Rating", "params": "", "type": "config", "description": "Hidden input to handle the selected value. This hidden input\nreplace the radio elements and keep the same name."}, {"name": "hiddenInputChange", "url": "Rating.html#event_hiddenInputChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hiddenInput' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hide", "url": "LoadingMask.html#method_hide", "access": "", "host": "LoadingMask", "params": "", "type": "method", "description": "Invoke the\n<a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>\n<code>hide</code> method."}, {"name": "hide", "url": "Widget.html#method_hide", "access": "", "host": "Widget", "params": "", "type": "method", "description": "Hides the Widget by setting the \"visible\" attribute to \"false\"."}, {"name": "hide", "url": "LiveSearch.html#config_hide", "access": "", "host": "LiveSearch", "params": "", "type": "config", "description": "Function to be executed to hide the node when the data of that node\nnot matches with the filter."}, {"name": "hide", "url": "OverlayContext.html#method_hide", "access": "", "host": "OverlayContext", "params": "", "type": "method", "description": "Hides the OverlayContext."}, {"name": "hide", "url": "OverlayContextPanel.html#method_hide", "access": "", "host": "OverlayContextPanel", "params": "event <EventFacade> ", "type": "method", "description": "Hides the OverlayContextPanel."}, {"name": "hide", "url": "A.Node.html#method_hide", "access": "", "host": "A.Node", "params": "cssClass <string>  Class name to hide the element. Optional.", "type": "method", "description": "<p>Hide the node adding a css class on it. If <code>cssClass</code> is not\npassed as argument, the className 'aui-helper-hidden' will be used by\ndefault.</p>\n<p><string>NOTE:</string> This method assume that your node were visible\nbecause the absence of 'aui-helper-hidden' css class. This won't\nmanipulate the inline <code>style.display</code> property.</p>"}, {"name": "hideAll", "url": "OverlayManager.html#method_hideAll", "access": "", "host": "OverlayManager", "params": "", "type": "method", "description": "Invoke the <a href=\"Overlay.html#method_hide\">hide</a> method from\nall registered Overlays."}, {"name": "_hideAllSubmenus", "url": "plugin.NodeMenuNav.html#method__hideAllSubmenus", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menu <Node>  Node instance representing a menu.", "type": "method", "description": "Hides all submenus of the specified menu."}, {"name": "_hideAllSubmenusTimer", "url": "plugin.NodeMenuNav.html#property__hideAllSubmenusTimer", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Timer used to hide a all submenus."}, {"name": "_hideAndFocusLabel", "url": "plugin.NodeMenuNav.html#method__hideAndFocusLabel", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "method", "description": "Hides all of the submenus of the root menu and focuses the \nlabel of the topmost submenu"}, {"name": "hideCategory", "url": "Plugin.ConsoleFilters.html#method_hideCategory", "access": "", "host": "Plugin.ConsoleFilters", "params": "cat* <String>   1..n categories to filter out of the UI", "type": "method", "description": "Hides any number of categories from the UI.  Convenience method for\nmyConsole.filter.set('category.foo', false); set('category.bar', false);\nand so on."}, {"name": "hideChange", "url": "LiveSearch.html#event_hideChange", "access": "", "host": "LiveSearch", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hide' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hideClass", "url": "Component.html#config_hideClass", "access": "", "host": "Component", "params": "", "type": "config", "description": "css class added to hide the <code>boundingBox</code> when\n<a href=\"Component.html#config_visible\">visible</a> is set to\n<code>false</code>."}, {"name": "hideClassChange", "url": "Component.html#event_hideClassChange", "access": "", "host": "Component", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hideClass' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hideControls", "url": "ImageViewer.html#method_hideControls", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Hide all UI controls (i.e., arrows, close icon etc)."}, {"name": "hideDelay", "url": "OverlayContext.html#config_hideDelay", "access": "", "host": "OverlayContext", "params": "", "type": "config", "description": "Number of milliseconds after the hide method is invoked to hide the\nOverlayContext."}, {"name": "hideDelay", "url": "Tooltip.html#config_hideDelay", "access": "", "host": "Tooltip", "params": "", "type": "config", "description": "See <a href=\"OverlayContext.html#config_hideDelay\">OverlayContext hideDelay</a>."}, {"name": "hideDelayChange", "url": "OverlayContext.html#event_hideDelayChange", "access": "", "host": "OverlayContext", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hideDelayChange", "url": "Tooltip.html#event_hideDelayChange", "access": "", "host": "Tooltip", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hideDelay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hideLoading", "url": "A.Plugin.IO.html#method_hideLoading", "access": "", "host": "A.Plugin.IO", "params": "", "type": "method", "description": "Invoke the <a href=\"OverlayMask.html#method_hide\">OverlayMask hide</a> method."}, {"name": "hideMask", "url": "ImageViewer.html#method_hideMask", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Hide the <a href=\"OverlayMask.html\">OverlayMask</a> used when <a\nhref=\"ImageViewer.html#config_modal\">modal</a> is <code>true</code>."}, {"name": "_hideMenu", "url": "plugin.NodeMenuNav.html#method__hideMenu", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menu <Node>  Node instance representing a menu., activateAndFocusLabel <Boolean>  Boolean indicating if the label \nfor the specified \nmenu should be focused and set as active.", "type": "method", "description": "Hides the specified menu."}, {"name": "hideOn", "url": "OverlayContext.html#config_hideOn", "access": "", "host": "OverlayContext", "params": "", "type": "config", "description": "The event which is responsible to hide the OverlayContext."}, {"name": "hideOn", "url": "OverlayContextPanel.html#config_hideOn", "access": "", "host": "OverlayContextPanel", "params": "", "type": "config", "description": "See <a href=\"OverlayContext.html#config_hideOn\">hideOn</a>."}, {"name": "hideOn", "url": "Tooltip.html#config_hideOn", "access": "", "host": "Tooltip", "params": "", "type": "config", "description": "See <a href=\"OverlayContext.html#config_showOn\">OverlayContext showOn</a>."}, {"name": "hideOnChange", "url": "OverlayContext.html#event_hideOnChange", "access": "", "host": "OverlayContext", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hideOnChange", "url": "OverlayContextPanel.html#event_hideOnChange", "access": "", "host": "OverlayContextPanel", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hideOnChange", "url": "Tooltip.html#event_hideOnChange", "access": "", "host": "Tooltip", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hideOn' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hideOnDocumentClick", "url": "OverlayContext.html#config_hideOnDocumentClick", "access": "", "host": "OverlayContext", "params": "", "type": "config", "description": "If true the instance is registered on the\n<a href=\"OverlayContextManager.html\">OverlayContextManager</a> static\nclass and will be hide when the user click on document."}, {"name": "hideOnDocumentClickChange", "url": "OverlayContext.html#event_hideOnDocumentClickChange", "access": "", "host": "OverlayContext", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hideOnDocumentClick' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hideOnEnd", "url": "Plugin.DDProxy.html#config_hideOnEnd", "access": "", "host": "Plugin.DDProxy", "params": "", "type": "config", "description": "Hide the drag node at the end of the drag. Default: true"}, {"name": "hideOnEndChange", "url": "Plugin.DDProxy.html#event_hideOnEndChange", "access": "", "host": "Plugin.DDProxy", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hideOnEnd' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hidePaginator", "url": "ImageGallery.html#method_hidePaginator", "access": "", "host": "ImageGallery", "params": "", "type": "method", "description": "Hide the <a href=\"Paginator.html\">Paginator</a> with the thumbnails\nlist."}, {"name": "hideSource", "url": "Plugin.ConsoleFilters.html#method_hideSource", "access": "", "host": "Plugin.ConsoleFilters", "params": "src* <String>   1..n sources to filter out of the UI", "type": "method", "description": "Hides any number of sources from the UI.  Convenience method for\nmyConsole.filter.set('source.foo', false); set('source.bar', false);\nand so on."}, {"name": "_hideSubmenuTimer", "url": "plugin.NodeMenuNav.html#property__hideSubmenuTimer", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Timer used to hide a submenu."}, {"name": "history:globalStateChange", "url": "History.html#event_history:globalStateChange", "access": "", "host": "History", "params": "", "type": "event", "description": "Fires when the global state of the page has changed (that is,\nwhen the state of at least one browser history module has changed)"}, {"name": "history:moduleStateChange", "url": "History.html#event_history:moduleStateChange", "access": "", "host": "History", "params": "", "type": "event", "description": "Fires when the state of a history module object has changed"}, {"name": "history:ready", "url": "History.html#event_history:ready", "access": "", "host": "History", "params": "", "type": "event", "description": "Fires when the browser history utility is ready"}, {"name": "hitAreaEl", "url": "TreeNode.html#config_hitAreaEl", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Hitarea element."}, {"name": "hitAreaElChange", "url": "TreeNode.html#event_hitAreaElChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hitAreaEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "horizontal", "url": "DD.Scroll.html#config_horizontal", "access": "", "host": "DD.Scroll", "params": "", "type": "config", "description": "Allow horizontal scrolling, default: true."}, {"name": "horizontalChange", "url": "DD.Scroll.html#event_horizontalChange", "access": "", "host": "DD.Scroll", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'horizontal' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "host", "url": "DD.Scroll.html#config_host", "access": "", "host": "DD.Scroll", "params": "", "type": "config", "description": "The host we are plugged into."}, {"name": "host", "url": "Plugin.Base.html#config_host", "access": "", "host": "Plugin.Base", "params": "", "type": "config", "description": "The plugin's host object."}, {"name": "host", "url": "YUI.html#config_host", "access": "", "host": "YUI", "params": "", "type": "config", "description": "The host Drag instance."}, {"name": "host", "url": "CustomEvent.html#property_host", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "Specifies the host for this custom event.  This is used\nto enable event bubbling"}, {"name": "hostChange", "url": "DD.Scroll.html#event_hostChange", "access": "", "host": "DD.Scroll", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'host' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hostChange", "url": "Plugin.Base.html#event_hostChange", "access": "", "host": "Plugin.Base", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'host' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hostChange", "url": "YUI.html#event_hostChange", "access": "", "host": "YUI", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'host' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hover", "url": "A.Node.html#method_hover", "access": "", "host": "A.Node", "params": "overFn <string> , outFn <string> ", "type": "method", "description": "Create a hover interaction."}, {"name": "hoverState", "url": "Toolbar.html#config_hoverState", "access": "", "host": "Toolbar", "params": "", "type": "config", "description": "Receives an interaction state of hover during the\n<code>mouseover</code> event."}, {"name": "hoverState", "url": "ButtonItem.html#config_hoverState", "access": "", "host": "ButtonItem", "params": "", "type": "config", "description": "Whether to track the hover interaction state of the button."}, {"name": "hoverStateChange", "url": "Toolbar.html#event_hoverStateChange", "access": "", "host": "Toolbar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hoverState' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "hoverStateChange", "url": "ButtonItem.html#event_hoverStateChange", "access": "", "host": "ButtonItem", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'hoverState' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "html", "url": "A.Node.html#method_html", "access": "", "host": "A.Node", "params": "value <string>  A string of html to set as the content of the node instance.", "type": "method", "description": "<p>Get or Set the HTML contents of the node. If the <code>value</code>\nis passed it's set the content of the element, otherwise it works as a\ngetter for the current content.</p>\nExample:\n<pre><code>var node = A.one('#nodeId');\nnode.html('Setting new HTML');\n// Alert the value of the current content\nalert( node.html() );\n</code></pre>"}, {"name": "_htmlEscapeMessage", "url": "Console.html#method__htmlEscapeMessage", "access": "protected", "host": "Console", "params": "m <Object>   the normalized message object", "type": "method", "description": "Performs HTML escaping on strings in the message object."}, {"name": "_htmlEscapeMessage", "url": "Plugin.Console.html#method__htmlEscapeMessage", "access": "protected", "host": "Plugin.Console", "params": "m <Object>   the normalized message object", "type": "method", "description": "Performs HTML escaping on strings in the message object."}, {"name": "icon", "url": "ButtonItem.html#config_icon", "access": "", "host": "ButtonItem", "params": "", "type": "config", "description": "The icon to use inside of the button. Possible values are:"}, {"name": "iconChange", "url": "ButtonItem.html#event_iconChange", "access": "", "host": "ButtonItem", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'icon' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "iconEl", "url": "TreeNode.html#config_iconEl", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Icon element."}, {"name": "iconElChange", "url": "TreeNode.html#event_iconElChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'iconEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "iconNode", "url": "ButtonItem.html#config_iconNode", "access": "", "host": "ButtonItem", "params": "", "type": "config", "description": "DOM Node to display the icon of the ButtonItem. If not\nspecified try to query using HTML_PARSER an element inside\nboundingBox which matches <code>aui-button-icon</code>."}, {"name": "iconNodeChange", "url": "ButtonItem.html#event_iconNodeChange", "access": "", "host": "ButtonItem", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'iconNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "icons", "url": "Editable.html#config_icons", "access": "", "host": "Editable", "params": "", "type": "config", "description": "Array with icons for the <a href=\"Toolbar.html\">Toolbar</a>."}, {"name": "icons", "url": "Panel.html#config_icons", "access": "", "host": "Panel", "params": "", "type": "config", "description": "<p>Array of <a href=\"ButtonItem.html\">ButtonItem</a> configuration objects to be displayed as icons\non the Panel title.</p>\nExample:\n<pre><code>icons: [ { icon: 'close', id: 'close' } ]</code></pre>\nFor more information how to use this option see\n<a href=\"ButtonItem.html\">ButtonItem</a>."}, {"name": "iconsChange", "url": "Editable.html#event_iconsChange", "access": "", "host": "Editable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'icons' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "iconsChange", "url": "Panel.html#event_iconsChange", "access": "", "host": "Panel", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'icons' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "id", "url": "Widget.html#config_id", "access": "", "host": "Widget", "params": "", "type": "config", "description": ""}, {"name": "_id", "url": "DelayedTask.html#property__id", "access": "protected", "host": "DelayedTask", "params": "", "type": "property", "description": "Stores the timer <code>id</code> given from the <code>setInterval</code>."}, {"name": "id", "url": "TreeNode.html#config_id", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Id of the TreeNode."}, {"name": "id", "url": "Sortable.html#config_id", "access": "", "host": "Sortable", "params": "", "type": "config", "description": "The id of this sortable, used to get a reference to this sortable list from another list."}, {"name": "id", "url": "Subscriber.html#property_id", "access": "", "host": "Subscriber", "params": "", "type": "property", "description": "Unique subscriber id"}, {"name": "id", "url": "History.Module.html#property_id", "access": "", "host": "History.Module", "params": "", "type": "property", "description": "The module identifier"}, {"name": "idChange", "url": "Widget.html#event_idChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "idChange", "url": "TreeNode.html#event_idChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "idChange", "url": "Sortable.html#event_idChange", "access": "", "host": "Sortable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'id' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "ie", "url": "UA.html#property_ie", "access": "", "host": "UA", "params": "", "type": "property", "description": "Internet Explorer version number or 0.  Example: 6"}, {"name": "IECreateFix", "url": "A.HTML5.html#method_IECreateFix", "access": "", "host": "A.HTML5", "params": "frag <Node | DocumentFragment>  Fragment to be fixed., content <String>  HTML to be set (using innerHTML) on the <code>frag</code>.", "type": "method", "description": "Receives a <code>frag</code> and a HTML content. This method\nshivs the HTML5 nodes appended to a Node or fragment which is not\non the document yet."}, {"name": "ignore", "url": "Loader.html#property_ignore", "access": "", "host": "Loader", "params": "", "type": "property", "description": "A list of modules that should not be loaded, even if\nthey turn up in the dependency tree"}, {"name": "ignore", "url": "Test.Runner.html#event_ignore", "access": "", "host": "Test.Runner", "params": "", "type": "event", "description": "Fires when a test has been ignored."}, {"name": "ignore", "url": "config.html#property_ignore", "access": "", "host": "config", "params": "", "type": "property", "description": "A list of modules that should never be dynamically loaded"}, {"name": "ignoreRegistered", "url": "Loader.html#property_ignoreRegistered", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Ignore modules registered on the YUI global"}, {"name": "image", "url": "ImageViewer.html#config_image", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "Image node element used to load the images."}, {"name": "imageAnim", "url": "ImageViewer.html#config_imageAnim", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "Configuration attributes passed to the <a href=\"Anim.html\">Anim</a>\nclass."}, {"name": "imageAnimChange", "url": "ImageViewer.html#event_imageAnimChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'imageAnim' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "imageChange", "url": "ImageViewer.html#event_imageChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'image' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "ImageGallery.ATTRS", "url": "ImageGallery.html#property_ImageGallery.ATTRS", "access": "", "host": "ImageGallery", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the ImageGallery."}, {"name": "ImageGallery.NAME", "url": "ImageGallery.html#property_ImageGallery.NAME", "access": "", "host": "ImageGallery", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "ImageViewer.ATTRS", "url": "ImageViewer.html#property_ImageViewer.ATTRS", "access": "", "host": "ImageViewer", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the ImageViewer."}, {"name": "ImageViewer.NAME", "url": "ImageViewer.html#property_ImageViewer.NAME", "access": "", "host": "ImageViewer", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "importMethod", "url": "Node.html#method_importMethod", "access": "", "host": "Node", "params": "host <Object>  The object that contains the method to import., name <String>  The name of the method to import, altName <String>  An optional name to use in place of the host name, context <Object>  An optional context to call the method with", "type": "method", "description": "Imports utility methods to be added as Y.Node methods."}, {"name": "_increment", "url": "Test.Assert.html#method__increment", "access": "protected", "host": "Test.Assert", "params": "", "type": "method", "description": "Increments the number of assertions that have been performed."}, {"name": "index", "url": "LiveSearch.html#config_index", "access": "", "host": "LiveSearch", "params": "", "type": "config", "description": "Index for the nodes content."}, {"name": "index", "url": "TreeData.html#config_index", "access": "", "host": "TreeData", "params": "", "type": "config", "description": "Index the nodes."}, {"name": "indexChange", "url": "LiveSearch.html#event_indexChange", "access": "", "host": "LiveSearch", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "indexChange", "url": "TreeData.html#event_indexChange", "access": "", "host": "TreeData", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'index' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "indexOf", "url": "NodeList.html#method_indexOf", "access": "", "host": "NodeList", "params": "node <Y.Node || DOMNode>  the node to search for", "type": "method", "description": "Returns the index of the node in the NodeList instance\nor -1 if the node isn't found."}, {"name": "indexOf", "url": "AsyncQueue.html#method_indexOf", "access": "", "host": "AsyncQueue", "params": "callback <String|Function>   the callback or its specified id", "type": "method", "description": "Returns the current index of a callback.  Pass in either the id or\ncallback function from getCallback."}, {"name": "indexOf", "url": "Rating.html#method_indexOf", "access": "", "host": "Rating", "params": "elem <Node>  Rating element", "type": "method", "description": "Finds the index of the <code>elem</code>."}, {"name": "indexOf", "url": "Assert.ArrayAssert.html#method_indexOf", "access": "", "host": "Assert.ArrayAssert", "params": "needle <Object>  The value to look for., haystack <Array>  The array to search in., index <int>  The index at which the value should exist., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that the given value is contained in an array at the specified index.\nThis uses the triple equals sign so no type cohersion will occur."}, {"name": "indexOf", "url": "ArrayList.html#method_indexOf", "access": "", "host": "ArrayList", "params": "needle < mixed >   The item to search for", "type": "method", "description": "Finds the first index of the needle in the managed array of items."}, {"name": "indexOf", "url": "TreeData.html#method_indexOf", "access": "", "host": "TreeData", "params": "node <TreeNode> ", "type": "method", "description": "Index of the passed TreeNode on the <a\nhref=\"TreeData.html#config_children\">children</a> attribute."}, {"name": "indexOf", "url": "Array.html#method_indexOf", "access": "", "host": "Array", "params": "a <Array>   the array to search, val <Object>  the value to search for", "type": "method", "description": "Returns the index of the first item in the array\nthat contains the specified value, -1 if the\nvalue isn't found."}, {"name": "indexOf", "url": "Queue.html#method_indexOf", "access": "", "host": "Queue", "params": "needle <MIXED>   the item to search for", "type": "method", "description": "Returns the current index in the queue of the specified item"}, {"name": "inDoc", "url": "Node.html#method_inDoc", "access": "", "host": "Node", "params": "doc <Node|HTMLElement>  optional An optional document to check against.\nDefaults to current document.", "type": "method", "description": "Determines whether the node is appended to the document."}, {"name": "inDoc", "url": "DOM.html#method_inDoc", "access": "", "host": "DOM", "params": "element <HTMLElement>  The containing html element., doc <HTMLElement>  optional The document to check.", "type": "method", "description": "Determines whether or not the HTMLElement is part of the document."}, {"name": "info", "url": "Resize.html#property_info", "access": "protected", "host": "Resize", "params": "", "type": "property", "description": "Stores the current values for the height, width, top and left. You are\nable to manipulate these values on resize in order to change the resize\nbehavior."}, {"name": "infoEl", "url": "ImageViewer.html#config_infoEl", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "The element to be used as info."}, {"name": "infoElChange", "url": "ImageViewer.html#event_infoElChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'infoEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "infoTemplate", "url": "ImageViewer.html#config_infoTemplate", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "String template used to display the information."}, {"name": "infoTemplateChange", "url": "ImageViewer.html#event_infoTemplateChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'infoTemplate' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "inGroup", "url": "DD.Drop.html#method_inGroup", "access": "", "host": "DD.Drop", "params": "groups <Array>  The groups to check against", "type": "method", "description": "Check if this target is in one of the supplied groups."}, {"name": "_inheritOwnerTreeAttrs", "url": "TreeNodeIO.html#method__inheritOwnerTreeAttrs", "access": "protected", "host": "TreeNodeIO", "params": "", "type": "method", "description": "If not specified on the TreeNode some attributes are inherited from the\nownerTree by this method."}, {"name": "_init", "url": "AsyncQueue.html#method__init", "access": "protected", "host": "AsyncQueue", "params": "", "type": "method", "description": "Initializes the AsyncQueue instance properties and events."}, {"name": "_init", "url": "SyntheticEvent.html#method__init", "access": "protected", "host": "SyntheticEvent", "params": "cfg <Object>   The configuration object passed to the constructor", "type": "method", "description": "Initializes the synthetic event."}, {"name": "_init", "url": "Queue.html#method__init", "access": "protected", "host": "Queue", "params": "", "type": "method", "description": "Initialize the queue"}, {"name": "init", "url": "Base.html#method_init", "access": "", "host": "Base", "params": "config <Object>  Object with configuration property name/value pairs", "type": "method", "description": "Init lifecycle method, invoked during construction.\nFires the init event prior to setting up attributes and \ninvoking initializers for the class hierarchy."}, {"name": "init", "url": "Base.html#event_init", "access": "", "host": "Base", "params": "e <EventFacade>  Event object, with a cfg property which \nrefers to the configuration object passed to the constructor.", "type": "event", "description": "<p>\nLifecycle event for the init phase, fired prior to initialization. \nInvoking the preventDefault() method on the event object provided \nto subscribers will prevent initialization from occuring.\n</p>\n<p>\nSubscribers to the \"after\" momemt of this event, will be notified\nafter initialization of the object is complete (and therefore\ncannot prevent initialization).\n</p>"}, {"name": "_initAxis", "url": "YUI.html#method__initAxis", "access": "protected", "host": "YUI", "params": "", "type": "method", "description": "Discover the appropriate axis to associate the value to based on the\nthe assignment of <code>stickX</code> or <code>stickY</code> attributes\nin the DDConstrained plugin.  If neither are set, defaults to \"x\"."}, {"name": "_initBody", "url": "Console.html#method__initBody", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Create the DOM structure for the console body&#8212;where messages are\nrendered."}, {"name": "_initBody", "url": "Plugin.Console.html#method__initBody", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Create the DOM structure for the console body&#8212;where messages are\nrendered."}, {"name": "_initButtons", "url": "Dialog.html#method__initButtons", "access": "protected", "host": "Dialog", "params": "", "type": "method", "description": "Render the buttons on the footer of the Dialog."}, {"name": "_initClickableRail", "url": "ClickableRail.html#method__initClickableRail", "access": "protected", "host": "ClickableRail", "params": "", "type": "method", "description": "Initializes the internal state and sets up events."}, {"name": "_initDescendants", "url": "plugin.NodeFocusManager.html#method__initDescendants", "access": "protected", "host": "plugin.NodeFocusManager", "params": "", "type": "method", "description": "Sets the <code>tabIndex</code> attribute of all of the \ndescendants to -1, except the active descendant, whose \n<code>tabIndex</code> attribute is set to 0."}, {"name": "_initEvents", "url": "AsyncQueue.html#method__initEvents", "access": "protected", "host": "AsyncQueue", "params": "", "type": "method", "description": "Initializes the instance events."}, {"name": "_initFocusManager", "url": "plugin.NodeMenuNav.html#method__initFocusManager", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "method", "description": "Initializes and updates the Focus Manager so that is is \nalways managing descendants of the active menu."}, {"name": "_initFoot", "url": "Console.html#method__initFoot", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Create the DOM structure for the footer elements."}, {"name": "_initFoot", "url": "Plugin.Console.html#method__initFoot", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Create the DOM structure for the footer elements."}, {"name": "_initHead", "url": "Console.html#method__initHead", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Create the DOM structure for the header elements."}, {"name": "_initHead", "url": "Plugin.Console.html#method__initHead", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Create the DOM structure for the header elements."}, {"name": "initialize", "url": "History.html#method_initialize", "access": "", "host": "History", "params": "stateField <string|HTML Element>  <input type=\"hidden\"> used\nto store application states. Must be in the static markup., historyIFrame <string|HTML Element>  IFrame used to store\nthe history (only required for IE6/7)", "type": "method", "description": "Initializes the Browser History Manager. Call this method\nfrom a script block located right after the opening body tag."}, {"name": "initialized", "url": "Base.html#config_initialized", "access": "", "host": "Base", "params": "", "type": "config", "description": "Flag indicating whether or not this object\nhas been through the init lifecycle phase."}, {"name": "initializedChange", "url": "Base.html#event_initializedChange", "access": "", "host": "Base", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'initialized' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "initializer", "url": "Plugin.ConsoleFilters.html#method_initializer", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "method", "description": "Initialize entries collection and attach listeners to host events and\nmethods."}, {"name": "initializer", "url": "Toolbar.html#method_initializer", "access": "protected", "host": "Toolbar", "params": "", "type": "method", "description": "Construction logic executed during Toolbar instantiation. Lifecycle."}, {"name": "initializer", "url": "Calendar.html#method_initializer", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Construction logic executed during Calendar instantiation. Lifecycle."}, {"name": "initializer", "url": "ParseContent.html#method_initializer", "access": "protected", "host": "ParseContent", "params": "", "type": "method", "description": "Construction logic executed during ParseContent instantiation. Lifecycle."}, {"name": "initializer", "url": "LoadingMask.html#method_initializer", "access": "protected", "host": "LoadingMask", "params": "", "type": "method", "description": "Construction logic executed during LoadingMask instantiation. Lifecycle."}, {"name": "initializer", "url": "Editable.html#method_initializer", "access": "protected", "host": "Editable", "params": "", "type": "method", "description": "Construction logic executed during Editable instantiation. Lifecycle."}, {"name": "initializer", "url": "Textboxlist.html#method_initializer", "access": "protected", "host": "Textboxlist", "params": "", "type": "method", "description": "Construction logic executed during Textboxlist instantiation. Lifecycle."}, {"name": "initializer", "url": "PortalLayout.html#method_initializer", "access": "protected", "host": "PortalLayout", "params": "", "type": "method", "description": "Construction logic executed during PortalLayout instantiation. Lifecycle."}, {"name": "initializer", "url": "Resize.html#method_initializer", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Construction logic executed during Resize instantiation. Lifecycle."}, {"name": "initializer", "url": "Rating.html#method_initializer", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Construction logic executed during Rating instantiation. Lifecycle."}, {"name": "initializer", "url": "NestedList.html#method_initializer", "access": "protected", "host": "NestedList", "params": "", "type": "method", "description": "Construction logic executed during NestedList instantiation. Lifecycle."}, {"name": "initializer", "url": "Widget.html#method_initializer", "access": "protected", "host": "Widget", "params": "config <Object>   Configuration object literal for the widget", "type": "method", "description": "Initializer lifecycle implementation for the Widget class. Registers the \nwidget instance, and runs through the Widget's HTML_PARSER definition."}, {"name": "initializer", "url": "LiveSearch.html#method_initializer", "access": "protected", "host": "LiveSearch", "params": "", "type": "method", "description": "Construction logic executed during LiveSearch instantiation. Lifecycle."}, {"name": "initializer", "url": "SliderBase.html#method_initializer", "access": "protected", "host": "SliderBase", "params": "", "type": "method", "description": "Construction logic executed during Slider instantiation."}, {"name": "initializer", "url": "CharCounter.html#method_initializer", "access": "protected", "host": "CharCounter", "params": "", "type": "method", "description": "Construction logic executed during CharCounter instantiation. Lifecycle."}, {"name": "initializer", "url": "Plugin.WidgetAnim.html#method_initializer", "access": "", "host": "Plugin.WidgetAnim", "params": "config <Object>  The user configuration for the plugin", "type": "method", "description": "The initializer lifecycle implementation. Modifies the host widget's \nvisibililty implementation to add animation."}, {"name": "initializer", "url": "Dialog.html#method_initializer", "access": "protected", "host": "Dialog", "params": "", "type": "method", "description": "Construction logic executed during Dialog instantiation. Lifecycle."}, {"name": "initializer", "url": "Console.html#method_initializer", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Constructor code.  Set up the buffer and entry template, publish\ninternal events, and subscribe to the configured logEvent."}, {"name": "initializer", "url": "Plugin.Console.html#method_initializer", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Constructor code.  Set up the buffer and entry template, publish\ninternal events, and subscribe to the configured logEvent."}, {"name": "initializer", "url": "OverlayManager.html#method_initializer", "access": "protected", "host": "OverlayManager", "params": "", "type": "method", "description": "Construction logic executed during OverlayManager instantiation. Lifecycle."}, {"name": "initializer", "url": "AutoComplete.html#method_initializer", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Construction logic executed during AutoComplete instantiation. Lifecycle."}, {"name": "initializer", "url": "TreeData.html#method_initializer", "access": "protected", "host": "TreeData", "params": "", "type": "method", "description": "Construction logic executed during TreeData instantiation. Lifecycle."}, {"name": "initializer", "url": "TreeNode.html#method_initializer", "access": "protected", "host": "TreeNode", "params": "", "type": "method", "description": "Construction logic executed during TreeNode instantiation. Lifecycle."}, {"name": "initializer", "url": "Plugin.Base.html#method_initializer", "access": "", "host": "Plugin.Base", "params": "config <Object>  Configuration object with property name/value pairs.", "type": "method", "description": "Initializer lifecycle implementation."}, {"name": "initializer", "url": "Component.html#method_initializer", "access": "protected", "host": "Component", "params": "", "type": "method", "description": "Construction logic executed during Component instantiation. Lifecycle."}, {"name": "initializer", "url": "Panel.html#method_initializer", "access": "protected", "host": "Panel", "params": "", "type": "method", "description": "Construction logic executed during Panel instantiation. Lifecycle."}, {"name": "initializer", "url": "YUI.html#method_initializer", "access": "protected", "host": "YUI", "params": "", "type": "method", "description": "Attach event listeners to keep the UI in sync with the min/max/value\nattributes and DD position, then call syncDragNode() to sync initial state."}, {"name": "initializer", "url": "IORequest.html#method_initializer", "access": "protected", "host": "IORequest", "params": "", "type": "method", "description": "Construction logic executed during IORequest instantiation. Lifecycle."}, {"name": "initialState", "url": "History.Module.html#property_initialState", "access": "", "host": "History.Module", "params": "", "type": "property", "description": "The module's initial state"}, {"name": "initIO", "url": "TreeNodeIO.html#method_initIO", "access": "", "host": "TreeNodeIO", "params": "", "type": "method", "description": "Initialize the IO transaction setup on the <a\nhref=\"TreeNode.html#config_io\">io</a> attribute."}, {"name": "_initSliderValueRange", "url": "SliderValueRange.html#method__initSliderValueRange", "access": "protected", "host": "SliderValueRange", "params": "", "type": "method", "description": "Stub for construction logic.  Override if extending this class and\nyou need to set something up during the initializer phase."}, {"name": "_initThumbUrl", "url": "SliderBase.html#method__initThumbUrl", "access": "protected", "host": "SliderBase", "params": "", "type": "method", "description": "<p>Defaults the thumbURL attribute according to the current skin, or\n&quot;sam&quot; if none can be determined.  Horizontal Sliders will have\ntheir <code>thumbUrl</code> attribute set to</p>\n<p><code>&quot;/<em>configured</em>/<em>yu</em>i/<em>builddi</em>r/slider/assets/skins/sam/thumb-x.png&quot;</code></p>\n<p>And vertical thumbs will get</p>\n<p><code>&quot;/<em>configured</em>/<em>yui</em>/<em>builddir</em>/slider/assets/skins/sam/thumb-y.png&quot;</code></p>"}, {"name": "injected", "url": "config.html#property_injected", "access": "", "host": "config", "params": "", "type": "property", "description": "Set to true if the yui seed file was dynamically loaded in \norder to bootstrap components relying on the window load event \nand the 'domready' custom event."}, {"name": "input", "url": "LiveSearch.html#config_input", "access": "", "host": "LiveSearch", "params": "", "type": "config", "description": "The <code>value</code> of this input node is used to filter the\nresults."}, {"name": "input", "url": "CharCounter.html#config_input", "access": "", "host": "CharCounter", "params": "", "type": "config", "description": "Node or Selector for the input field. Required."}, {"name": "input", "url": "AUI~event~input.html#event_input", "access": "", "host": "AUI~event~input", "params": "type <String>   'input', fn <Function>   the callback function, el <String|Node|etc>   the element to bind (typically document), o <Object>   optional context object, args <Object>  0..n additional arguments that should be provided\nto the listener.", "type": "event", "description": "This event fires when the value of the element changes, either as a result of\na keystroke, or from an input event."}, {"name": "input", "url": "AutoComplete.html#config_input", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "The input field which will recieve the users input."}, {"name": "inputChange", "url": "LiveSearch.html#event_inputChange", "access": "", "host": "LiveSearch", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "inputChange", "url": "CharCounter.html#event_inputChange", "access": "", "host": "CharCounter", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "inputChange", "url": "AutoComplete.html#event_inputChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'input' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_inputKeyUp", "url": "LiveSearch.html#method__inputKeyUp", "access": "protected", "host": "LiveSearch", "params": "event <EventFacade>  keyup event facade", "type": "method", "description": "Fires the keyup event on\n<a href=\"LiveSearch.html#config_input\">input</a>."}, {"name": "inputName", "url": "Rating.html#config_inputName", "access": "", "host": "Rating", "params": "", "type": "config", "description": "Name of the <a\nhref=\"Rating.html#config_hiddenInput\">hiddenInput</a> element. If\nnot specified will use the name of the replaced radio."}, {"name": "inputNameChange", "url": "Rating.html#event_inputNameChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'inputName' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "inputType", "url": "Editable.html#config_inputType", "access": "", "host": "Editable", "params": "", "type": "config", "description": "Type of the input used to edit the <a\nhref=\"Editable.html#config_node\">node</a>."}, {"name": "inputTypeChange", "url": "Editable.html#event_inputTypeChange", "access": "", "host": "Editable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'inputType' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "inRegion", "url": "Node.html#method_inRegion", "access": "", "host": "Node", "params": "node2 <Node|Object>  The node or region to compare with., all <Boolean>  Whether or not all of the node must be in the region., altRegion <Object>  An alternate region to use (rather than this node's).", "type": "method", "description": "Determines whether or not the node is within the giving region."}, {"name": "inRegion", "url": "Plugin.DDConstrained.html#method_inRegion", "access": "", "host": "Plugin.DDConstrained", "params": "xy <Array>  Optional XY to check, if not supplied this.get('dragNode').getXY() is used.", "type": "method", "description": "Checks if the XY passed or the dragNode is inside the active region."}, {"name": "inRegion", "url": "DOM.html#method_inRegion", "access": "", "host": "DOM", "params": "all <Object} node2 The node to get the region from or an Object literal of the region\n$param {Boolean>  Should all of the node be inside the region, altRegion <Object>  An object literal containing the region for this node if we already have the data (for performance i.e. DragDrop)", "type": "method", "description": "Check if any part of this node is in the passed region"}, {"name": "insert", "url": "Node.html#method_insert", "access": "", "host": "Node", "params": "content <String | Y.Node | HTMLElement>  The content to insert, where <Int | Y.Node | HTMLElement | String>  The position to insert at.", "type": "method", "description": "Inserts the content before the reference node."}, {"name": "insert", "url": "NodeList.html#method_insert", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Called on each Node instance"}, {"name": "insert", "url": "Loader.html#method_insert", "access": "", "host": "Loader", "params": "o <Object>  optional options object, type <string>   the type of dependency to insert", "type": "method", "description": "inserts the requested modules and their dependencies.  \n<code>type</code> can be \"js\" or \"css\".  Both script and \ncss are inserted if type is not provided."}, {"name": "insert", "url": "TreeData.html#method_insert", "access": "", "host": "TreeData", "params": "treeNode <TreeNode> , refTreeNode <TreeNode> , where <TreeNode>  'before' or 'after'", "type": "method", "description": "Insert <code>treeNode</code> before or after the <code>refTreeNode</code>."}, {"name": "insertAfter", "url": "TreeData.html#method_insertAfter", "access": "", "host": "TreeData", "params": "treeNode <TreeNode> , refTreeNode <TreeNode> ", "type": "method", "description": "Insert <code>treeNode</code> after the <code>refTreeNode</code>."}, {"name": "insertBefore", "url": "Node.html#method_insertBefore", "access": "", "host": "Node", "params": "newNode <HTMLElement | Node>  Node to be appended, refNode <HTMLElement | Node>  Node to be inserted before", "type": "method", "description": "Passes through to DOM method."}, {"name": "insertBefore", "url": "Loader.html#property_insertBefore", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Node reference or id where new nodes should be inserted before"}, {"name": "insertBefore", "url": "TreeData.html#method_insertBefore", "access": "", "host": "TreeData", "params": "treeNode <TreeNode> , refTreeNode <TreeNode> ", "type": "method", "description": "Insert <code>treeNode</code> before the <code>refTreeNode</code>."}, {"name": "insertBefore", "url": "config.html#property_insertBefore", "access": "", "host": "config", "params": "", "type": "property", "description": "Node or id for a node that should be used as the insertion point for new nodes\nFor dynamic loading."}, {"name": "inserted", "url": "Loader.html#property_inserted", "access": "", "host": "Loader", "params": "", "type": "property", "description": "List of modules inserted by the utility"}, {"name": "instrument", "url": "Profiler.html#method_instrument", "access": "", "host": "Profiler", "params": "name <String>  The name of the report for the function., method <Function>  The function to instrument.", "type": "method", "description": "Instruments a method to have profiling calls."}, {"name": "intersect", "url": "Node.html#method_intersect", "access": "", "host": "Node", "params": "node2 <Node|Object>  The node or region to compare with., altRegion <Object>  An alternate region to use (rather than this node's).", "type": "method", "description": "Compares the intersection of the node with another node or region"}, {"name": "intersect", "url": "DOM.html#method_intersect", "access": "", "host": "DOM", "params": "element <HTMLElement>  The first element, element2 <HTMLElement | Object>  The element or region to check the interect with, altRegion <Object>  An object literal containing the region for the first element if we already have the data (for performance i.e. DragDrop)", "type": "method", "description": "Find the intersect information for the passes nodes."}, {"name": "intervalTime", "url": "Anim.html#property_intervalTime", "access": "", "host": "Anim", "params": "", "type": "property", "description": "Time in milliseconds passed to setInterval for frame processing"}, {"name": "intl:langChange", "url": "Intl.html#event_intl:langChange", "access": "", "host": "Intl", "params": "e <EventFacade>  The event facade\n<p>The event facade contains:</p>\n<dl>\n<dt>module</dt><dd>The name of the module for which the language changed</dd>\n<dt>newVal</dt><dd>The new language tag</dd>\n<dt>prevVal</dt><dd>The current language tag</dd>\n</dl>", "type": "event", "description": "Notification event to indicate when the lang for a module has changed. There is no default behavior associated with this event,\nso the on and after moments are equivalent."}, {"name": "invalid", "url": "DD.Delegate.html#config_invalid", "access": "", "host": "DD.Delegate", "params": "", "type": "config", "description": "A selector query to test a node to see if it's an invalid item."}, {"name": "invalid", "url": "Sortable.html#config_invalid", "access": "", "host": "Sortable", "params": "", "type": "config", "description": "A selector string to test if a list item is invalid and not sortable"}, {"name": "invalidChange", "url": "DD.Delegate.html#event_invalidChange", "access": "", "host": "DD.Delegate", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'invalid' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "invalidChange", "url": "Sortable.html#event_invalidChange", "access": "", "host": "Sortable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'invalid' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "inViewportRegion", "url": "DOM.html#method_inViewportRegion", "access": "", "host": "DOM", "params": "element <HTMLElement>  The DOM element., all <Boolean>  Should all of the node be inside the region, altRegion <Object>  An object literal containing the region for this node if we already have the data (for performance i.e. DragDrop)", "type": "method", "description": "Check if any part of this element is in the viewport"}, {"name": "invoke", "url": "Node.html#method_invoke", "access": "", "host": "Node", "params": "method <String>  The name of the method to invoke, a, <Any>  b, c, etc. Arguments to invoke the method with.", "type": "method", "description": "Invokes a method on the Node instance"}, {"name": "invoke", "url": "YUI~array~invoke.html#method_invoke", "access": "", "host": "YUI~array~invoke", "params": "items < Array >   Array of objects supporting the named method, name < String >   the name of the method to execute on each item, args* < mixed >   Any number of additional args are passed as\nparameters to the execution of the named method.", "type": "method", "description": "<p>Execute a named method on an array of objects.  Items in the list that do\nnot have a function by that name will be skipped. For example,\n<code>Y.Array.invoke( arrayOfDrags, 'plug', Y.Plugin.DDProxy );</code></p>\n<p>The return values from each call are returned in an array.</p>"}, {"name": "_invokeHideTaskOnInteraction", "url": "OverlayContext.html#method__invokeHideTaskOnInteraction", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Invoke the hide event when the OverlayContext looses the focus."}, {"name": "io", "url": "io.html#method_io", "access": "", "host": "io", "params": "uri <string>  - qualified path to transaction resource., c <object>  - configuration object for the transaction.", "type": "method", "description": "Method for requesting a transaction. This\nis the interface for _io()."}, {"name": "io", "url": "DataSource.IO.html#config_io", "access": "", "host": "DataSource.IO", "params": "", "type": "config", "description": "Pointer to IO Utility."}, {"name": "io", "url": "TreeNodeIO.html#config_io", "access": "", "host": "TreeNodeIO", "params": "", "type": "config", "description": "IO options for the current TreeNode load the children."}, {"name": "io", "url": "TreeView.html#config_io", "access": "", "host": "TreeView", "params": "", "type": "config", "description": "IO metadata for loading the children using ajax."}, {"name": "io:complete", "url": "io.html#event_io:complete", "access": "", "host": "io", "params": "", "type": "event", "description": "This event is fired by YUI.io when a transaction is complete.\nResponse status and data are accessible, if available."}, {"name": "io:end", "url": "io.html#event_io:end", "access": "", "host": "io", "params": "", "type": "event", "description": "This event signifies the end of the transaction lifecycle.  The\ntransaction transport is destroyed."}, {"name": "io:failure", "url": "io.html#event_io:failure", "access": "", "host": "io", "params": "", "type": "event", "description": "This event is fired by YUI.io when a transaction is complete, and\nthe HTTP status resolves to HTTP4xx, 5xx and above."}, {"name": "io:start", "url": "io.html#event_io:start", "access": "", "host": "io", "params": "", "type": "event", "description": "This event is fired by YUI.io when a transaction is initiated."}, {"name": "io:success", "url": "io.html#event_io:success", "access": "", "host": "io", "params": "", "type": "event", "description": "This event is fired by YUI.io when a transaction is complete, and\nthe HTTP status resolves to HTTP2xx."}, {"name": "io:xdrReady", "url": "io.html#event_io:xdrReady", "access": "", "host": "io", "params": "", "type": "event", "description": "This event is fired by YUI.io when the specified transport is\nready for use."}, {"name": "ioChange", "url": "DataSource.IO.html#event_ioChange", "access": "", "host": "DataSource.IO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'io' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "ioChange", "url": "TreeNodeIO.html#event_ioChange", "access": "", "host": "TreeNodeIO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'io' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "ioChange", "url": "TreeView.html#event_ioChange", "access": "", "host": "TreeView", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'io' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "ioCompleteHandler", "url": "TreeNodeIO.html#method_ioCompleteHandler", "access": "", "host": "TreeNodeIO", "params": "", "type": "method", "description": "IO Complete handler."}, {"name": "ioFailureHandler", "url": "TreeNodeIO.html#method_ioFailureHandler", "access": "", "host": "TreeNodeIO", "params": "", "type": "method", "description": "IO Failure handler."}, {"name": "IORequest.ATTRS", "url": "IORequest.html#property_IORequest.ATTRS", "access": "", "host": "IORequest", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the IORequest."}, {"name": "IORequest.NAME", "url": "IORequest.html#property_IORequest.NAME", "access": "", "host": "IORequest", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "ioStartHandler", "url": "TreeNodeIO.html#method_ioStartHandler", "access": "", "host": "TreeNodeIO", "params": "", "type": "method", "description": "IO Start handler."}, {"name": "ioSuccessHandler", "url": "TreeNodeIO.html#method_ioSuccessHandler", "access": "", "host": "TreeNodeIO", "params": "", "type": "method", "description": "IO Success handler."}, {"name": "isArray", "url": "Test.Assert.html#method_isArray", "access": "", "host": "Test.Assert", "params": "actual <Object>  The value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is an array."}, {"name": "isArray", "url": "Lang.html#method_isArray", "access": "", "host": "Lang", "params": "o <Object>  The object to test", "type": "method", "description": "Determines whether or not the provided item is an array.\nReturns false for array-like collections such as the\nfunction arguments collection or HTMLElement collection\nwill return false.  You can use @see Array.test if you \nwant to"}, {"name": "isBoolean", "url": "Test.Assert.html#method_isBoolean", "access": "", "host": "Test.Assert", "params": "actual <Object>  The value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is a Boolean."}, {"name": "isBoolean", "url": "Lang.html#method_isBoolean", "access": "", "host": "Lang", "params": "o <Object>  The object to test", "type": "method", "description": "Determines whether or not the provided item is a boolean"}, {"name": "isDate", "url": "Lang.html#method_isDate", "access": "", "host": "Lang", "params": "o <Object>  The object to test", "type": "method", "description": "Determines whether or not the supplied item is a date instance"}, {"name": "_isDescendant", "url": "plugin.NodeFocusManager.html#method__isDescendant", "access": "protected", "host": "plugin.NodeFocusManager", "params": "node <Node>   Node instance to be checked.", "type": "method", "description": "Determines if the specified Node instance is a descendant\nmanaged by the Focus Manager."}, {"name": "isEmpty", "url": "NodeList.html#method_isEmpty", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Determines if the instance is bound to any nodes"}, {"name": "isEmpty", "url": "Assert.ArrayAssert.html#method_isEmpty", "access": "", "host": "Assert.ArrayAssert", "params": "actual <Array>  The array to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that an array is empty."}, {"name": "isEmpty", "url": "ArrayList.html#method_isEmpty", "access": "", "host": "ArrayList", "params": "", "type": "method", "description": "Is this instance managing any items?"}, {"name": "isEnabled", "url": "StyleSheet.html#method_isEnabled", "access": "", "host": "StyleSheet", "params": "", "type": "method", "description": "Returns false if the StyleSheet is disabled.  Otherwise true."}, {"name": "isFalse", "url": "Test.Assert.html#method_isFalse", "access": "", "host": "Test.Assert", "params": "actual <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is false. This uses the triple equals sign\nso no type cohersion may occur."}, {"name": "isFunction", "url": "Test.Assert.html#method_isFunction", "access": "", "host": "Test.Assert", "params": "actual <Object>  The value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is a function."}, {"name": "isFunction", "url": "Lang.html#method_isFunction", "access": "", "host": "Lang", "params": "o <Object>  The object to test", "type": "method", "description": "Determines whether or not the provided item is a function\nNote: Internet Explorer thinks certain functions are objects:\nvar obj = document.createElement(\"object\");\nY.Lang.isFunction(obj.getAttribute) // reports false in IE\nvar input = document.createElement(\"input\"); // append to body\nY.Lang.isFunction(input.focus) // reports false in IE\nYou will have to implement additional tests if these functions\nmatter to you."}, {"name": "_isIgnoreKey", "url": "AutoComplete.html#method__isIgnoreKey", "access": "protected", "host": "AutoComplete", "params": "Number <keyCode>  The numeric code of the key pressed", "type": "method", "description": "Whether or not the pressed key triggers some functionality or if it should\nbe ignored."}, {"name": "_isInLogLevel", "url": "Console.html#method__isInLogLevel", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Determine if incoming log messages are within the configured logLevel\nto be buffered for printing."}, {"name": "_isInLogLevel", "url": "Plugin.Console.html#method__isInLogLevel", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Determine if incoming log messages are within the configured logLevel\nto be buffered for printing."}, {"name": "isInstanceOf", "url": "Test.Assert.html#method_isInstanceOf", "access": "", "host": "Test.Assert", "params": "expected <Function>  The function that the object should be an instance of., actual <Object>  The object to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is an instance of a particular object. This may return\nincorrect results when comparing objects from one frame to constructors in\nanother frame. For best results, don't use in a cross-frame manner."}, {"name": "isLeaf", "url": "TreeNode.html#method_isLeaf", "access": "", "host": "TreeNode", "params": "", "type": "method", "description": "Whether the current TreeNode is a leaf or not."}, {"name": "_isMatch", "url": "Cache.html#method__isMatch", "access": "protected", "host": "Cache", "params": "request <Object>   Request object., entry <Object>   Cached entry.", "type": "method", "description": "Default overridable method compares current request with given cache entry.\nReturns true if current request matches the cached request, otherwise\nfalse. Implementers should override this method to customize the\ncache-matching algorithm."}, {"name": "isNaN", "url": "Test.Assert.html#method_isNaN", "access": "", "host": "Test.Assert", "params": "actual <Object>  The value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is not a number."}, {"name": "isNotEmpty", "url": "Assert.ArrayAssert.html#method_isNotEmpty", "access": "", "host": "Assert.ArrayAssert", "params": "actual <Array>  The array to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that an array is not empty."}, {"name": "isNotNaN", "url": "Test.Assert.html#method_isNotNaN", "access": "", "host": "Test.Assert", "params": "actual <Object>  The value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is not the special NaN value."}, {"name": "isNotNull", "url": "Test.Assert.html#method_isNotNull", "access": "", "host": "Test.Assert", "params": "actual <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is not null. This uses the triple equals sign\nso no type cohersion may occur."}, {"name": "isNotUndefined", "url": "Test.Assert.html#method_isNotUndefined", "access": "", "host": "Test.Assert", "params": "actual <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is not undefined. This uses the triple equals sign\nso no type cohersion may occur."}, {"name": "isNull", "url": "Test.Assert.html#method_isNull", "access": "", "host": "Test.Assert", "params": "actual <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is null. This uses the triple equals sign\nso no type cohersion may occur."}, {"name": "isNull", "url": "Lang.html#method_isNull", "access": "", "host": "Lang", "params": "o <Object>  The object to test", "type": "method", "description": "Determines whether or not the provided item is null"}, {"name": "isNumber", "url": "Test.Assert.html#method_isNumber", "access": "", "host": "Test.Assert", "params": "actual <Object>  The value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is a number."}, {"name": "isNumber", "url": "Lang.html#method_isNumber", "access": "", "host": "Lang", "params": "o <Object>  The object to test", "type": "method", "description": "Determines whether or not the provided item is a legal number"}, {"name": "isObject", "url": "Test.Assert.html#method_isObject", "access": "", "host": "Test.Assert", "params": "actual <Object>  The value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is an object."}, {"name": "isObject", "url": "Lang.html#method_isObject", "access": "", "host": "Lang", "params": "o <Object>  The object to test, failfn <boolean>   fail if the input is a function", "type": "method", "description": "Determines whether or not the provided item is of type object\nor function"}, {"name": "isOverTarget", "url": "DD.DDM.html#method_isOverTarget", "access": "", "host": "DD.DDM", "params": "drop <Object>  The drop to check against", "type": "method", "description": "Check to see if the Drag element is over the target, method varies on current mode"}, {"name": "isPng", "url": "ImgLoadImgObj.html#config_isPng", "access": "", "host": "ImgLoadImgObj", "params": "", "type": "config", "description": "Whether the image is a PNG.\nPNG images get special treatment in that the URL is specified through AlphaImageLoader for IE, versions 6 and earlier.\nOnly used with background images."}, {"name": "isPngChange", "url": "ImgLoadImgObj.html#event_isPngChange", "access": "", "host": "ImgLoadImgObj", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'isPng' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "isRegistered", "url": "TreeData.html#method_isRegistered", "access": "", "host": "TreeData", "params": "node <TreeNode> ", "type": "method", "description": "Whether the TreeNode is registered on this TreeData."}, {"name": "_isRoot", "url": "plugin.NodeMenuNav.html#method__isRoot", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menu <Node>  Node instance representing a menu.", "type": "method", "description": "Returns a boolean indicating if the specified menu is the \nroot menu in the menu."}, {"name": "isRunning", "url": "AsyncQueue.html#method_isRunning", "access": "", "host": "AsyncQueue", "params": "", "type": "method", "description": "Determines if the queue is waiting for a callback to complete execution."}, {"name": "isRunning", "url": "Test.Runner.html#method_isRunning", "access": "", "host": "Test.Runner", "params": "", "type": "method", "description": "Indicates that the TestRunner is busy running tests and therefore can't\nbe stopped and results cannot be gathered."}, {"name": "isSelected", "url": "TreeNode.html#method_isSelected", "access": "", "host": "TreeNode", "params": "", "type": "method", "description": "Whether the current TreeNode is selected or not."}, {"name": "isString", "url": "Test.Assert.html#method_isString", "access": "", "host": "Test.Assert", "params": "actual <Object>  The value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is a string."}, {"name": "isString", "url": "Lang.html#method_isString", "access": "", "host": "Lang", "params": "o <Object>  The object to test", "type": "method", "description": "Determines whether or not the provided item is a string"}, {"name": "isTrue", "url": "Test.Assert.html#method_isTrue", "access": "", "host": "Test.Assert", "params": "actual <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is true. This uses the triple equals sign\nso no type cohersion may occur."}, {"name": "isTypeOf", "url": "Test.Assert.html#method_isTypeOf", "access": "", "host": "Test.Assert", "params": "expectedType <String>  The expected type of the variable., actualValue <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is of a particular type."}, {"name": "isUndefined", "url": "Test.Assert.html#method_isUndefined", "access": "", "host": "Test.Assert", "params": "actual <Object>  The actual value to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a value is undefined. This uses the triple equals sign\nso no type cohersion may occur."}, {"name": "isUndefined", "url": "Lang.html#method_isUndefined", "access": "", "host": "Lang", "params": "o <Object>  The object to test", "type": "method", "description": "Determines whether or not the provided item is undefined"}, {"name": "isValue", "url": "Lang.html#method_isValue", "access": "", "host": "Lang", "params": "o <Object>  The item to test", "type": "method", "description": "A convenience method for detecting a legitimate non-null value.\nReturns false for null/undefined/NaN, true for other values, \nincluding 0/false/''"}, {"name": "isWaiting", "url": "Test.Runner.html#method_isWaiting", "access": "", "host": "Test.Runner", "params": "", "type": "method", "description": "Indicates if the TestRunner is waiting for a test to resume"}, {"name": "item", "url": "Node.html#method_item", "access": "", "host": "Node", "params": "index <Number>  The index of the target Node.", "type": "method", "description": "Retrieves the Node instance at the given index."}, {"name": "item", "url": "NodeList.html#method_item", "access": "", "host": "NodeList", "params": "index <Number>  The index of the target Node.", "type": "method", "description": "Retrieves the Node instance at the given index."}, {"name": "_item", "url": "ArrayList.html#method__item", "access": "protected", "host": "ArrayList", "params": "i < Integer >   Index of item to fetch", "type": "method", "description": "Protected method for optimizations that may be appropriate for API\nmirroring. Similar in functionality to <code>item</code>, but is used by\nmethods added with <code>ArrayList.addMethod()</code>."}, {"name": "item", "url": "ArrayList.html#method_item", "access": "", "host": "ArrayList", "params": "i < Integer >   index to fetch", "type": "method", "description": "Get an item by index from the list.  Override this method if managing a\nlist of objects that have a different public representation (e.g. Node\ninstances vs DOM nodes).  The iteration methods that accept a user\nfunction will use this method for access list items for operation."}, {"name": "item", "url": "TreeData.html#method_item", "access": "", "host": "TreeData", "params": "index <Number> ", "type": "method", "description": "Get a TreeNode children by index."}, {"name": "itemArrowFrom", "url": "AutoComplete.html#event_itemArrowFrom", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The itemArrowFrom event.", "type": "event", "description": "Handles the itemArrowFrom event. Fired when the user navigates via the keyboard away from\na selected item."}, {"name": "itemArrowTo", "url": "AutoComplete.html#event_itemArrowTo", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The itemArrowTo event.", "type": "event", "description": "Handles the itemArrowTo event. Fired when the user navigates via the keyboard to a selected item."}, {"name": "itemClick", "url": "Rating.html#event_itemClick", "access": "", "host": "Rating", "params": "event <Event.Facade>  The itemClick event.", "type": "event", "description": "Handles the itemClick event."}, {"name": "itemMouseOut", "url": "AutoComplete.html#event_itemMouseOut", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The itemMouseOut event.", "type": "event", "description": "Handles the itemMouseOut event. Fired when the user mouses away from an item."}, {"name": "itemMouseOver", "url": "AutoComplete.html#event_itemMouseOver", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The itemMouseOver event.", "type": "event", "description": "Handles the itemMouseOver event. Fired when the user mouses over an item."}, {"name": "itemOut", "url": "Rating.html#event_itemOut", "access": "", "host": "Rating", "params": "event <Event.Facade>  The itemOut event.", "type": "event", "description": "Handles the itemOut event."}, {"name": "itemsAreEqual", "url": "Assert.ArrayAssert.html#method_itemsAreEqual", "access": "", "host": "Assert.ArrayAssert", "params": "expected <Array>  An array of the expected values., actual <Array>  Any array of the actual values., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that the values in an array are equal, and in the same position,\nas values in another array. This uses the double equals sign\nso type cohersion may occur. Note that the array objects themselves\nneed not be the same for this test to pass."}, {"name": "itemsAreEqual", "url": "ArrayList~add.html#method_itemsAreEqual", "access": "", "host": "ArrayList~add", "params": "a < mixed >   item to test equivalence with, b < mixed >   other item to test equivalance", "type": "method", "description": "Default comparitor for items stored in this list.  Used by remove()."}, {"name": "itemsAreEquivalent", "url": "Assert.ArrayAssert.html#method_itemsAreEquivalent", "access": "", "host": "Assert.ArrayAssert", "params": "expected <Array>  An array of the expected values., actual <Array>  Any array of the actual values., comparator <Function>  A function that returns true if the values are equivalent\nor false if not., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that the values in an array are equivalent, and in the same position,\nas values in another array. This uses a function to determine if the values\nare equivalent. Note that the array objects themselves\nneed not be the same for this test to pass."}, {"name": "itemsAreSame", "url": "Assert.ArrayAssert.html#method_itemsAreSame", "access": "", "host": "Assert.ArrayAssert", "params": "expected <Array>  An array of the expected values., actual <Array>  Any array of the actual values., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that the values in an array are the same, and in the same position,\nas values in another array. This uses the triple equals sign\nso no type cohersion will occur. Note that the array objects themselves\nneed not be the same for this test to pass."}, {"name": "itemSelect", "url": "Rating.html#event_itemSelect", "access": "", "host": "Rating", "params": "event <Event.Facade>  The itemSelect event.", "type": "event", "description": "Handles the itemSelect event."}, {"name": "itemSelect", "url": "AutoComplete.html#event_itemSelect", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The itemSelect event.", "type": "event", "description": "Handles the itemSelect event. Fired when an item in the list is selected."}, {"name": "iteration", "url": "Anim.html#event_iteration", "access": "", "host": "Anim", "params": "ev <Event>  The iteration event.", "type": "event", "description": "fires when an animation begins an iteration."}, {"name": "iterationCount", "url": "Anim.html#config_iterationCount", "access": "", "host": "Anim", "params": "", "type": "config", "description": "The number of iterations that have occurred.\nResets when an animation ends (reaches iteration count or stop() called)."}, {"name": "iterationCountChange", "url": "Anim.html#event_iterationCountChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'iterationCount' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "iterations", "url": "Anim.html#config_iterations", "access": "", "host": "Anim", "params": "", "type": "config", "description": "The number of times the animation should run"}, {"name": "iterationsChange", "url": "Anim.html#event_iterationsChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'iterations' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "join", "url": "Sortable.html#method_join", "access": "", "host": "Sortable", "params": "Sortable <Object>  sel The sortable list to join with, String <Object>  type The type of join to do: full, inner, outer, none. Default: full", "type": "method", "description": "Join this Sortable with another Sortable instance.\n<ul>\n<li>full: Exchange nodes with both lists.</li>\n<li>inner: Items can go into this list from the joined list.</li>\n<li>outer: Items can go out of the joined list into this list.</li>\n<li>none: Removes the join.</li>\n</ul>"}, {"name": "jsAttributes", "url": "Loader.html#property_jsAttributes", "access": "", "host": "Loader", "params": "", "type": "property", "description": "An object literal containing attributes to add to script nodes"}, {"name": "jsAttributes", "url": "config.html#property_jsAttributes", "access": "", "host": "config", "params": "", "type": "property", "description": "Object literal containing attributes to add to dynamically loaded script nodes."}, {"name": "JSON", "url": "Assert.DateAssert.html#method_JSON", "access": "", "host": "Assert.DateAssert", "params": "result <Object>  The results object created by TestRunner.", "type": "method", "description": "Returns test results formatted as a JSON string. Requires JSON utility."}, {"name": "JSON.useNativeStringify", "url": "JSON.html#property_JSON.useNativeStringify", "access": "", "host": "JSON", "params": "", "type": "property", "description": "Leverage native JSON stringify if the browser has a native\nimplementation.  In general, this is a good idea.  See the Known Issues\nsection in the JSON user guide for caveats.  The default value is true\nfor browsers with native JSON support."}, {"name": "_jumpSelection", "url": "AutoComplete.html#method__jumpSelection", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "If there is a currently selected item, the right arrow key will select\nthat item and jump to the end of the input element, otherwise the container is closed."}, {"name": "JUnitXML", "url": "Assert.DateAssert.html#method_JUnitXML", "access": "", "host": "Assert.DateAssert", "params": "result <Object>  The results object created by TestRunner.", "type": "method", "description": "Returns test results formatted in JUnit XML format."}, {"name": "_key", "url": "SliderBase.html#property__key", "access": "protected", "host": "SliderBase", "params": "", "type": "property", "description": "Cached fast access map for DOM properties and attributes that\npertain to accessing dimensional or positioning information\naccording to the Slider's axis (e.g. &quot;height&quot; vs.\n&quot;width&quot;).  Extension classes should add to this collection\nfor axis related strings if necessary."}, {"name": "_key", "url": "YUI.html#property__key", "access": "protected", "host": "YUI", "params": "", "type": "property", "description": "Map to property names based on <code>axis</code> for use in\ncalculation and accessing event info."}, {"name": "key", "url": "YUI.html#event_key", "access": "", "host": "YUI", "params": "type <string>   'key', fn <function>   the function to execute, id <string|HTMLElement|collection>   the element(s) to bind, spec <string>   the keyCode and modifier specification, o <Object>  optional context object, args <Object>  0..n additional arguments to provide to the listener.", "type": "event", "description": "Add a key listener.  The listener will only be notified if the\nkeystroke detected meets the supplied specification.  The\nspec consists of the key event type, followed by a colon,\nfollowed by zero or more comma separated key codes, followed\nby zero or more modifiers delimited by a plus sign.  Ex:\npress:12,65+shift+ctrl"}, {"name": "keyCode", "url": "DOMEventFacade.html#property_keyCode", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "The keyCode for key events.  Uses charCode if keyCode is not available"}, {"name": "_keyHandler", "url": "ImageViewer.html#property__keyHandler", "access": "protected", "host": "ImageViewer", "params": "", "type": "property", "description": "Handler for the key events."}, {"name": "keys", "url": "Object.html#method_keys", "access": "", "host": "Object", "params": "o <Object>  an object", "type": "method", "description": "Returns an array containing the object's keys"}, {"name": "keys", "url": "plugin.NodeFocusManager.html#config_keys", "access": "", "host": "plugin.NodeFocusManager", "params": "", "type": "config", "description": "Object literal representing the keys to be used to navigate between the \nnext/previous descendant.  The format for the attribute's value is \n<code>{ next: \"down:40\", previous: \"down:38\" }</code>.  The value for the \n\"next\" and \"previous\" properties are used to attach \n<a href=\"event/#keylistener\"><code>key</code></a> event listeners. See \nthe <a href=\"event/#keylistener\">Using the key Event</a> section of \nthe Event documentation for more information on \"key\" event listeners."}, {"name": "keysChange", "url": "plugin.NodeFocusManager.html#event_keysChange", "access": "", "host": "plugin.NodeFocusManager", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'keys' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "label", "url": "Rating.html#config_label", "access": "", "host": "Rating", "params": "", "type": "config", "description": "Label to be displayed with the Rating elements."}, {"name": "label", "url": "ProgressBar.html#config_label", "access": "", "host": "ProgressBar", "params": "", "type": "config", "description": "Display label of the progressbar. If not specified try to query\nusing HTML_PARSER an element inside contentBox which matches\n<code>aui-progressbar-text</code> and get its innerHTML to be\nused as label."}, {"name": "label", "url": "ButtonItem.html#config_label", "access": "", "host": "ButtonItem", "params": "", "type": "config", "description": "Text to use inside of the button."}, {"name": "label", "url": "TreeNode.html#config_label", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Label of the TreeNode."}, {"name": "label", "url": "Tab.html#config_label", "access": "", "host": "Tab", "params": "", "type": "config", "description": ""}, {"name": "labelChange", "url": "Rating.html#event_labelChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "labelChange", "url": "ProgressBar.html#event_labelChange", "access": "", "host": "ProgressBar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "labelChange", "url": "ButtonItem.html#event_labelChange", "access": "", "host": "ButtonItem", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "labelChange", "url": "TreeNode.html#event_labelChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "labelChange", "url": "Tab.html#event_labelChange", "access": "", "host": "Tab", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'label' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "labelEl", "url": "TreeNode.html#config_labelEl", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Label element to house the <code>label</code> attribute."}, {"name": "labelElChange", "url": "TreeNode.html#event_labelElChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'labelEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "labelNode", "url": "Rating.html#config_labelNode", "access": "", "host": "Rating", "params": "", "type": "config", "description": "DOM Node to display the text of the StarRating. If not\nspecified try to query using HTML_PARSER an element inside\nboundingBox which matches <code>aui-rating-label-element</code>."}, {"name": "labelNode", "url": "ButtonItem.html#config_labelNode", "access": "", "host": "ButtonItem", "params": "", "type": "config", "description": "DOM Node to display the text of the ButtonItem. If not\nspecified try to query using HTML_PARSER an element inside\nboundingBox which matches <code>aui-button-label</code>."}, {"name": "labelNodeChange", "url": "Rating.html#event_labelNodeChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'labelNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "labelNodeChange", "url": "ButtonItem.html#event_labelNodeChange", "access": "", "host": "ButtonItem", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'labelNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "lang", "url": "config.html#property_lang", "access": "", "host": "config", "params": "", "type": "property", "description": "A list of languages in order of preference. This list is matched against\nthe list of available languages in modules that the YUI instance uses to\ndetermine the best possible localization of language sensitive modules.\nLanguages are represented using BCP 47 language tags, such as \"en-GB\" for\nEnglish as used in the United Kingdom, or \"zh-Hans-CN\" for simplified\nChinese as used in China. The list can be provided as a comma-separated\nlist or as an array."}, {"name": "_last", "url": "DataSource.Get.html#property__last", "access": "protected", "host": "DataSource.Get", "params": "", "type": "property", "description": "Stores the most recent request id for validation against stale\nresponse handling."}, {"name": "last", "url": "Queue.html#method_last", "access": "", "host": "Queue", "params": "", "type": "method", "description": "Get the last in the queue. LIFO support"}, {"name": "last", "url": "A.NodeList.html#method_last", "access": "", "host": "A.NodeList", "params": "", "type": "method", "description": "Returns the last element in the node list collection."}, {"name": "lastError", "url": "Event.html#property_lastError", "access": "", "host": "Event", "params": "", "type": "property", "description": "addListener/removeListener can throw errors in unexpected scenarios.\nThese errors are suppressed, the method returns false, and this property\nis set"}, {"name": "lastIndexOf", "url": "Assert.ArrayAssert.html#method_lastIndexOf", "access": "", "host": "Assert.ArrayAssert", "params": "needle <Object>  The value to look for., haystack <Array>  The array to search in., index <int>  The index at which the value should exist., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that the given value is contained in an array at the specified index,\nstarting from the back of the array.\nThis uses the triple equals sign so no type cohersion will occur."}, {"name": "lastNode", "url": "DD.Delegate.html#config_lastNode", "access": "", "host": "DD.Delegate", "params": "", "type": "config", "description": "Y.Node instance of the last item dragged."}, {"name": "lastNodeChange", "url": "DD.Delegate.html#event_lastNodeChange", "access": "", "host": "DD.Delegate", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'lastNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "lastPageLink", "url": "Paginator.html#config_lastPageLink", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The <a href=\"Node.html\">Node</a> or template to be used as the\nlast link element."}, {"name": "lastPageLinkChange", "url": "Paginator.html#event_lastPageLinkChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'lastPageLink' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "lastPageLinkLabel", "url": "Paginator.html#config_lastPageLinkLabel", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The label used as content of the\n<a href=\"Paginator.html#config_lastPageLink\">lastPageLink</a> element."}, {"name": "lastPageLinkLabelChange", "url": "Paginator.html#event_lastPageLinkLabelChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'lastPageLinkLabel' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "lastSelected", "url": "TreeView.html#config_lastSelected", "access": "", "host": "TreeView", "params": "", "type": "config", "description": "Last selected TreeNode."}, {"name": "lastSelectedChange", "url": "TreeView.html#event_lastSelectedChange", "access": "", "host": "TreeView", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'lastSelected' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "lastState", "url": "Paginator.html#property_lastState", "access": "protected", "host": "Paginator", "params": "", "type": "property", "description": "Store the last state object used on the <a href=\"Paginator.html#method_changeRequest\">changeRequest</a> event."}, {"name": "lastTime", "url": "Console.html#config_lastTime", "access": "", "host": "Console", "params": "", "type": "config", "description": "The precise time the last entry was logged.  Used to measure elapsed\ntime between log messages."}, {"name": "lastTime", "url": "Plugin.Console.html#config_lastTime", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "The precise time the last entry was logged.  Used to measure elapsed\ntime between log messages."}, {"name": "lastTimeChange", "url": "Console.html#event_lastTimeChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'lastTime' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "lastTimeChange", "url": "Plugin.Console.html#event_lastTimeChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'lastTime' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "lastXY", "url": "DD.Drag.html#property_lastXY", "access": "", "host": "DD.Drag", "params": "", "type": "property", "description": "The position of the element as it's moving (for offset calculations)"}, {"name": "lastY", "url": "TreeViewDD.html#config_lastY", "access": "", "host": "TreeViewDD", "params": "", "type": "config", "description": "Last Y."}, {"name": "lastYChange", "url": "TreeViewDD.html#event_lastYChange", "access": "", "host": "TreeViewDD", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'lastY' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "later", "url": "YUI.html#method_later", "access": "", "host": "YUI", "params": "when <int>   the number of milliseconds to wait until the fn \nis executed., o <Object>  the context object., fn <Function|String>   the function to execute or the name of \nthe method in the 'o' object to execute., data <Object>  [Array] data that is provided to the function.  This accepts\neither a single item or an array.  If an array is provided, the\nfunction is executed with one parameter for each array item.  If\nyou need to pass a single array parameter, it needs to be wrapped in\nan array [myarray]., periodic <boolean>   if true, executes continuously at supplied \ninterval until canceled.", "type": "method", "description": "Executes the supplied function in the context of the supplied \nobject 'when' milliseconds later.  Executes the function a \nsingle time unless periodic is set to true."}, {"name": "leaf", "url": "TreeNode.html#config_leaf", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Whether the TreeNode could have children or not (i.e. if any\nchildren is present the TreeNode is a leaf)."}, {"name": "leafChange", "url": "TreeNode.html#event_leafChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'leaf' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "length", "url": "SliderBase.html#config_length", "access": "", "host": "SliderBase", "params": "", "type": "config", "description": "The length of the rail (exclusive of the end caps if positioned by\nCSS).  This corresponds to the movable range of the thumb."}, {"name": "lengthChange", "url": "SliderBase.html#event_lengthChange", "access": "", "host": "SliderBase", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'length' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "links", "url": "ImageViewer.html#config_links", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "Selector or NodeList containing the links where the ImageViewer\nextracts the information to generate the thumbnails."}, {"name": "linksChange", "url": "ImageViewer.html#event_linksChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'links' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "LiveSearch.ATTRS", "url": "LiveSearch.html#property_LiveSearch.ATTRS", "access": "", "host": "LiveSearch", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the LiveSearch."}, {"name": "LiveSearch.NAME", "url": "LiveSearch.html#property_LiveSearch.NAME", "access": "", "host": "LiveSearch", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "load", "url": "ImageViewer.html#event_load", "access": "", "host": "ImageViewer", "params": "event <Event.Facade>  The load event.", "type": "event", "description": "Handles the load event. Fired when a image is laoded."}, {"name": "_loadBodyContentFromTitle", "url": "Tooltip.html#method__loadBodyContentFromTitle", "access": "protected", "host": "Tooltip", "params": "currentNode <Node>  Current node being used by the Tooltip", "type": "method", "description": "Use the <code>title</code> content of the <code>currentNode</code> as\nthe content of the Tooltip."}, {"name": "loaded", "url": "Loader.html#property_loaded", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Set when beginning to compute the dependency tree. \nComposed of what YUI reports to be loaded combined\nwith what has been loaded by any instance on the page\nwith the version number specified in the metadata."}, {"name": "loaded", "url": "TreeNodeIO.html#config_loaded", "access": "", "host": "TreeNodeIO", "params": "", "type": "config", "description": "Whether the current TreeNode has loaded the content."}, {"name": "loadedChange", "url": "TreeNodeIO.html#event_loadedChange", "access": "", "host": "TreeNodeIO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'loaded' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "loader", "url": "ImageViewer.html#config_loader", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "HTML element to house the <code>img</code> which is being loaded."}, {"name": "loaderChange", "url": "ImageViewer.html#event_loaderChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'loader' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "loaderPath", "url": "config.html#property_loaderPath", "access": "", "host": "config", "params": "", "type": "property", "description": "The loader 'path' attribute to the loader itself.  This is combined\nwith the 'base' attribute to dynamically load the loader component\nwhen boostrapping with the get utility alone."}, {"name": "loadImage", "url": "ImageViewer.html#method_loadImage", "access": "", "host": "ImageViewer", "params": "src <String>  Image src.", "type": "method", "description": "Load an image <code>src</code> on the ImageViewer."}, {"name": "loading", "url": "ImageViewer.html#config_loading", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "Whether the image is during a loading state."}, {"name": "loading", "url": "TreeNodeIO.html#config_loading", "access": "", "host": "TreeNodeIO", "params": "", "type": "config", "description": "Whether the current TreeNode IO transaction is loading."}, {"name": "loadingChange", "url": "ImageViewer.html#event_loadingChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'loading' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "loadingChange", "url": "TreeNodeIO.html#event_loadingChange", "access": "", "host": "TreeNodeIO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'loading' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "loadingEl", "url": "ImageViewer.html#config_loadingEl", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "The element to be used as loading."}, {"name": "loadingElChange", "url": "ImageViewer.html#event_loadingElChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'loadingEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "loadingMask", "url": "A.Plugin.IO.html#config_loadingMask", "access": "", "host": "A.Plugin.IO", "params": "", "type": "config", "description": "Options passed to the <a href=\"LoadingMask.html\">LoadingMask</a>."}, {"name": "LoadingMask.ATTRS", "url": "LoadingMask.html#property_LoadingMask.ATTRS", "access": "", "host": "LoadingMask", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the LoadingMask."}, {"name": "loadingMaskChange", "url": "A.Plugin.IO.html#event_loadingMaskChange", "access": "", "host": "A.Plugin.IO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'loadingMask' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "LoadingMask.NAME", "url": "LoadingMask.html#property_LoadingMask.NAME", "access": "", "host": "LoadingMask", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "LoadingMask.NS", "url": "LoadingMask.html#property_LoadingMask.NS", "access": "", "host": "LoadingMask", "params": "", "type": "property", "description": "Static property provides a string to identify the namespace."}, {"name": "loadNext", "url": "Loader.html#method_loadNext", "access": "", "host": "Loader", "params": "mname <string>   optional the name of the module that has\nbeen loaded (which is usually why it is time to load the next\none)", "type": "method", "description": "Executed every time a module is loaded, and if we are in a load\ncycle, we attempt to load the next script.  Public so that it\nis possible to call this if using a method other than\nY.register to determine when scripts are fully loaded"}, {"name": "loadOptional", "url": "Loader.html#property_loadOptional", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Whether or not to load optional dependencies for \nthe requested modules"}, {"name": "locale", "url": "config.html#property_locale", "access": "", "host": "config", "params": "", "type": "property", "description": "The default locale"}, {"name": "lock", "url": "DD.Drag.html#config_lock", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "Set to lock this drag element so that it can't be dragged: default false."}, {"name": "lock", "url": "DD.Drop.html#config_lock", "access": "", "host": "DD.Drop", "params": "", "type": "config", "description": "Set to lock this drop element."}, {"name": "lockChange", "url": "DD.Drag.html#event_lockChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'lock' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "lockChange", "url": "DD.Drop.html#event_lockChange", "access": "", "host": "DD.Drop", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'lock' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "log", "url": "Console.html#method_log", "access": "", "host": "Console", "params": "arg* <MIXED>   (all arguments passed through to <code>Y.log</code>)", "type": "method", "description": "Wrapper for <code>Y.log</code>."}, {"name": "log", "url": "Plugin.Console.html#method_log", "access": "", "host": "Plugin.Console", "params": "arg* <MIXED>   (all arguments passed through to <code>Y.log</code>)", "type": "method", "description": "Wrapper for <code>Y.log</code>."}, {"name": "log", "url": "YUI.html#method_log", "access": "", "host": "YUI", "params": "msg <String>   The message to log., cat <String>   The log category for the message.  Default\ncategories are \"info\", \"warn\", \"error\", time\".\nCustom categories can be used as well. (opt), src <String>   The source of the the message (opt), silent <boolean>  If true, the log event won't fire", "type": "method", "description": "If the 'debug' config is true, a 'yui:log' event will be\ndispatched, which the Console widget and anything else\ncan consume.  If the 'useBrowserConsole' config is true, it will\nwrite to the browser console if available.  YUI-specific log\nmessages will only be present in the -debug versions of the\nJS files.  The build system is supposed to remove log statements\nfrom the raw and minified versions of the files."}, {"name": "log", "url": "CustomEvent.html#method_log", "access": "", "host": "CustomEvent", "params": "msg <string>   message to log, cat <string>   log category", "type": "method", "description": "Logger abstraction to centralize the application of the silent flag"}, {"name": "logEvent", "url": "Console.html#config_logEvent", "access": "", "host": "Console", "params": "", "type": "config", "description": "Name of the custom event that will communicate log messages."}, {"name": "logEvent", "url": "Plugin.Console.html#config_logEvent", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Name of the custom event that will communicate log messages."}, {"name": "logEventChange", "url": "Console.html#event_logEventChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'logEvent' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "logEventChange", "url": "Plugin.Console.html#event_logEventChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'logEvent' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "logExclude", "url": "config.html#property_logExclude", "access": "", "host": "config", "params": "", "type": "property", "description": "A hash of log sources that should be not be logged.  If specified, all sources are logged if not on this list."}, {"name": "logFn", "url": "config.html#property_logFn", "access": "", "host": "config", "params": "", "type": "property", "description": "Alternative console log function for use in environments without\na supported native console."}, {"name": "logInclude", "url": "config.html#property_logInclude", "access": "", "host": "config", "params": "", "type": "property", "description": "A hash of log sources that should be logged.  If specified, only log messages from these sources will be logged."}, {"name": "logLevel", "url": "Console.html#config_logLevel", "access": "", "host": "Console", "params": "", "type": "config", "description": "Minimum entry log level to render into the Console.  The initial\nlogLevel value for all Console instances defaults from the\nY.config.logLevel YUI configuration, or Console.LOG_LEVEL_INFO if\nthat configuration is not set.\nPossible values are &quot;info&quot;, &quot;warn&quot;,\n&quot;error&quot; (case insensitive), or their corresponding statics\nConsole.LOG_LEVEL_INFO and so on."}, {"name": "logLevel", "url": "Plugin.Console.html#config_logLevel", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Minimum entry log level to render into the Console.  The initial\nlogLevel value for all Console instances defaults from the\nY.config.logLevel YUI configuration, or Console.LOG_LEVEL_INFO if\nthat configuration is not set.\nPossible values are &quot;info&quot;, &quot;warn&quot;,\n&quot;error&quot; (case insensitive), or their corresponding statics\nConsole.LOG_LEVEL_INFO and so on."}, {"name": "logLevelChange", "url": "Console.html#event_logLevelChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'logLevel' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "logLevelChange", "url": "Plugin.Console.html#event_logLevelChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'logLevel' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "logSource", "url": "Console.html#config_logSource", "access": "", "host": "Console", "params": "", "type": "config", "description": "Object that will emit the log events.  By default the YUI instance.\nTo have a single Console capture events from all YUI instances, set\nthis to the Y.Global object."}, {"name": "logSource", "url": "Plugin.Console.html#config_logSource", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Object that will emit the log events.  By default the YUI instance.\nTo have a single Console capture events from all YUI instances, set\nthis to the Y.Global object."}, {"name": "logSourceChange", "url": "Console.html#event_logSourceChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'logSource' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "logSourceChange", "url": "Plugin.Console.html#event_logSourceChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'logSource' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "lookupBestLang", "url": "Intl.html#method_lookupBestLang", "access": "", "host": "Intl", "params": "preferredLanguages <String[] | String>  The list of preferred languages\nin descending preference order, represented as BCP 47 language\ntags. A string array or a comma-separated list., availableLanguages <String[]>  The list of languages\nthat the application supports, represented as BCP 47 language\ntags.", "type": "method", "description": "Returns the language among those available that\nbest matches the preferred language list, using the Lookup\nalgorithm of BCP 47.\nIf none of the available languages meets the user's preferences,\nthen \"\" is returned.\nExtended language ranges are not supported."}, {"name": "matchKey", "url": "AutoComplete.html#config_matchKey", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "The key or numeric index in the schema to match the result against."}, {"name": "matchKeyChange", "url": "AutoComplete.html#event_matchKeyChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'matchKey' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "matchRegex", "url": "LiveSearch.html#config_matchRegex", "access": "", "host": "LiveSearch", "params": "", "type": "config", "description": "The input <code>value</code> need to matches with this RegExp to be\naccept as a filter (i.e., in order to accept only digits you\ncould use /\\d+/g)."}, {"name": "matchRegexChange", "url": "LiveSearch.html#event_matchRegexChange", "access": "", "host": "LiveSearch", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'matchRegex' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "max", "url": "Cache.html#config_max", "access": "", "host": "Cache", "params": "", "type": "config", "description": "Maximum number of entries the Cache can hold.\nSet to 0 to turn off caching."}, {"name": "max", "url": "ProgressBar.html#config_max", "access": "", "host": "ProgressBar", "params": "", "type": "config", "description": "Represents the top value for the bar. The bar will be fully\nextended when reaching this value. Values higher than this will\nbe ignored."}, {"name": "max", "url": "SliderValueRange.html#config_max", "access": "", "host": "SliderValueRange", "params": "", "type": "config", "description": "The value associated with the farthest bottom, right position of\nthe rail.  Can be less than the configured <code>min</code> if\nyou want values to increase from right-to-left or bottom-to-top."}, {"name": "max", "url": "YUI.html#config_max", "access": "", "host": "YUI", "params": "", "type": "config", "description": "The value associated with the farthest bottom, right position of the\nDrag element within its constraining element.  Can be less than\nthe configured <code>min</code> if you want values to increase from\nright-to-left or bottom-to-top."}, {"name": "maxChange", "url": "Cache.html#event_maxChange", "access": "", "host": "Cache", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'max' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxChange", "url": "ProgressBar.html#event_maxChange", "access": "", "host": "ProgressBar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'max' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxChange", "url": "SliderValueRange.html#event_maxChange", "access": "", "host": "SliderValueRange", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'max' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxChange", "url": "YUI.html#event_maxChange", "access": "", "host": "YUI", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'max' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxDate", "url": "Calendar.html#config_maxDate", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "Maximum allowable date. Values supported by the Date\nconstructor are supported."}, {"name": "maxDateChange", "url": "Calendar.html#event_maxDateChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'maxDate' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxHeight", "url": "Resize.html#config_maxHeight", "access": "", "host": "Resize", "params": "", "type": "config", "description": "The maximum height of the element"}, {"name": "maxHeight", "url": "ImageViewer.html#config_maxHeight", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "The maximum height of the element"}, {"name": "maxHeightChange", "url": "Resize.html#event_maxHeightChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'maxHeight' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxHeightChange", "url": "ImageViewer.html#event_maxHeightChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'maxHeight' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxLength", "url": "CharCounter.html#config_maxLength", "access": "", "host": "CharCounter", "params": "", "type": "config", "description": "Max number of characters the <a\nhref=\"CharCounter.html#config_input\">input</a> can have."}, {"name": "maxLengthChange", "url": "CharCounter.html#event_maxLengthChange", "access": "", "host": "CharCounter", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'maxLength' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxPageLinks", "url": "Paginator.html#config_maxPageLinks", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The max number of page links to be displayed. If lower than the\ntotal number of pages they are still navigable using next and prev\nlinks."}, {"name": "maxPageLinksChange", "url": "Paginator.html#event_maxPageLinksChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'maxPageLinks' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxResultsDisplayed", "url": "AutoComplete.html#config_maxResultsDisplayed", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "The maximum number of results to display."}, {"name": "maxResultsDisplayedChange", "url": "AutoComplete.html#event_maxResultsDisplayedChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'maxResultsDisplayed' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxURLLength", "url": "Loader.html#property_maxURLLength", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Max url length for combo urls.  The default is 2048 for\ninternet explorer, and 8192 otherwise.  This is the URL\nlimit for the Yahoo! hosted combo servers.  If consuming\na different combo service that has a different URL limit\nit is possible to override this default by supplying \nthe maxURLLength config option.  The config option will\nonly take effect if lower than the default.\nBrowsers:\nIE: 2048\nOther A-Grade Browsers: Higher that what is typically supported \n'capable' mobile browsers: @TODO\nServers:\nApache: 8192"}, {"name": "maxWidth", "url": "Resize.html#config_maxWidth", "access": "", "host": "Resize", "params": "", "type": "config", "description": "The maximum width of the element"}, {"name": "maxWidth", "url": "ImageViewer.html#config_maxWidth", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "The maximum width of the element"}, {"name": "maxWidthChange", "url": "Resize.html#event_maxWidthChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'maxWidth' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "maxWidthChange", "url": "ImageViewer.html#event_maxWidthChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'maxWidth' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "merge", "url": "YUI.html#method_merge", "access": "", "host": "YUI", "params": "arguments <Object*>   the objects to merge", "type": "method", "description": "Returns a new object containing all of the properties of\nall the supplied objects.  The properties from later objects\nwill overwrite those in earlier objects.  Passing in a\nsingle object will create a shallow copy of it.  For a deep\ncopy, use clone."}, {"name": "message", "url": "YUI.html#method_message", "access": "", "host": "YUI", "params": "msg <String>   The message to log., cat <String>   The log category for the message.  Default\ncategories are \"info\", \"warn\", \"error\", time\".\nCustom categories can be used as well. (opt), src <String>   The source of the the message (opt), silent <boolean>  If true, the log event won't fire", "type": "method", "description": "Write a system message.  This message will be preserved in the\nminified and raw versions of the YUI files, unlike log statements."}, {"name": "messageEl", "url": "LoadingMask.html#config_messageEl", "access": "", "host": "LoadingMask", "params": "", "type": "config", "description": "Node element to display the message."}, {"name": "messageElChange", "url": "LoadingMask.html#event_messageElChange", "access": "", "host": "LoadingMask", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'messageEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "method", "url": "IORequest.html#config_method", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "See <a href=\"http://developer.yahoo.com/yui/3/io/#configuration\">IO\nConfiguration</a>."}, {"name": "methodChange", "url": "IORequest.html#event_methodChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'method' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "min", "url": "ProgressBar.html#config_min", "access": "", "host": "ProgressBar", "params": "", "type": "config", "description": "Represents the lowest value for the bar. The bar will be\ntotally collapsed when reaching this value. Values lower than\nthis will be ignored."}, {"name": "min", "url": "SliderValueRange.html#config_min", "access": "", "host": "SliderValueRange", "params": "", "type": "config", "description": "The value associated with the farthest top, left position of the\nrail.  Can be greater than the configured <code>max</code> if you\nwant values to increase from right-to-left or bottom-to-top."}, {"name": "min", "url": "YUI.html#config_min", "access": "", "host": "YUI", "params": "", "type": "config", "description": "The value associated with the farthest top, left position of the\nDrag element within its constraining element.  Can be greater than\nthe configured <code>max</code> if you want values to increase from\nright-to-left or bottom-to-top."}, {"name": "minChange", "url": "ProgressBar.html#event_minChange", "access": "", "host": "ProgressBar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'min' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "minChange", "url": "SliderValueRange.html#event_minChange", "access": "", "host": "SliderValueRange", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'min' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "minChange", "url": "YUI.html#event_minChange", "access": "", "host": "YUI", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'min' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "minDate", "url": "Calendar.html#config_minDate", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "Minimum allowable date. Values supported by the Date\nconstructor are supported."}, {"name": "minDateChange", "url": "Calendar.html#event_minDateChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'minDate' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "minHeight", "url": "Resize.html#config_minHeight", "access": "", "host": "Resize", "params": "", "type": "config", "description": "The minimum height of the element"}, {"name": "minHeightChange", "url": "Resize.html#event_minHeightChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'minHeight' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "minQueryLength", "url": "AutoComplete.html#config_minQueryLength", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "The minimum number of characters required to query the data source."}, {"name": "minQueryLengthChange", "url": "AutoComplete.html#event_minQueryLengthChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'minQueryLength' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "minWidth", "url": "Resize.html#config_minWidth", "access": "", "host": "Resize", "params": "", "type": "config", "description": "The minimum width of the element"}, {"name": "minWidthChange", "url": "Resize.html#event_minWidthChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'minWidth' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "mix", "url": "YUI.html#method_mix", "access": "", "host": "YUI", "params": "r <Function>   the object to receive the augmentation, s <Function>   the object that supplies the properties to augment, ov <boolean>   if true, properties already on the receiver\nwill be overwritten if found on the supplier., wl <string[]>   a whitelist.  If supplied, only properties in \nthis list will be applied to the receiver., mode <int>  what should be copies, and to where\ndefault(0): object to object\n1: prototype to prototype (old augment)\n2: prototype to prototype and object props (new augment)\n3: prototype to object\n4: object to prototype, merge <boolean/int>   merge objects instead of overwriting/ignoring.  A value of 2\nwill skip array merge\nUsed by Y.aggregate", "type": "method", "description": "Applies the supplier's properties to the receiver.  By default\nall prototype and static propertes on the supplier are applied\nto the corresponding spot on the receiver.  By default all\nproperties are applied, and a property that is already on the\nreciever will not be overwritten.  The default behavior can\nbe modified by supplying the appropriate parameters."}, {"name": "mobile", "url": "UA.html#property_mobile", "access": "", "host": "UA", "params": "", "type": "property", "description": "The mobile property will be set to a string containing any relevant\nuser agent information when a modern mobile browser is detected.\nCurrently limited to Safari on the iPhone/iPod Touch, Nokia N-series\ndevices with the WebKit-based browser, and Opera Mini."}, {"name": "modal", "url": "ImageViewer.html#config_modal", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "Displays the modal <a href=\"OverlayMask.html\">OverlayMask</a> on\nthe viewport. Set to <code>false</code> to disable."}, {"name": "modal", "url": "Dialog.html#config_modal", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "True if the Panel should be displayed in a modal fashion,\nautomatically creating a transparent mask over the document that\nwill not be removed until the Dialog is dismissed. Uses\n<a href=\"OverlayMask.html\">OverlayMask</a>."}, {"name": "modalChange", "url": "ImageViewer.html#event_modalChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'modal' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "modalChange", "url": "Dialog.html#event_modalChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'modal' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "modifyAttr", "url": "Attribute.html#method_modifyAttr", "access": "", "host": "Attribute", "params": "name <String>  The name of the attribute whose configuration is to be updated., config <Object>  An object with configuration property/value pairs, specifying the configuration properties to modify.", "type": "method", "description": "Updates the configuration of an attribute which has already been added.\n<p>\nThe properties which can be modified through this interface are limited\nto the following subset of attributes, which can be safely modified\nafter a value has already been set on the attribute: readOnly, writeOnce, \nbroadcast and getter.\n</p>"}, {"name": "moduleInfo", "url": "Loader.html#property_moduleInfo", "access": "", "host": "Loader", "params": "", "type": "property", "description": "The library metadata"}, {"name": "modules", "url": "config.html#property_modules", "access": "", "host": "config", "params": "", "type": "property", "description": "A hash of module definitions to add to the list of YUI components.  \nThese components can then be dynamically loaded side by side with\nYUI via the use() method. This is a hash, the key is the module\nname, and the value is an object literal specifying the metdata\nfor the module.  * See Loader.addModule for the supported module\nmetadata fields.  Also @see groups, which provides a way to\nconfigure the base and combo spec for a \n<code>\nmodules: {\n&nbsp; mymod1: {\n&nbsp;   requires: ['node'],\n&nbsp;   fullpath: 'http://myserver.mydomain.com/mymod1/mymod1.js'\n&nbsp; },\n&nbsp; mymod2: {\n&nbsp;   requires: ['mymod1'],\n&nbsp;   fullpath: 'http://myserver.mydomain.com/mymod2/mymod2.js'\n&nbsp; }\n}\n</code>"}, {"name": "modulus", "url": "NodeList.html#method_modulus", "access": "", "host": "NodeList", "params": "n <Int>  The offset to use (return every nth node), r <Int>  An optional remainder to use with the modulus operation (defaults to zero)", "type": "method", "description": "Creates a new NodeList containing all nodes at every n indices, where \nremainder n % index equals r.\n(zero-based index)."}, {"name": "monitor", "url": "EventHandle.html#method_monitor", "access": "", "host": "EventHandle", "params": "what <string>   what to monitor ('attach', 'detach', 'publish')", "type": "method", "description": "Monitor the event state for the subscribed event.  The first parameter\nis what should be monitored, the rest are the normal parameters when\nsubscribing to an event."}, {"name": "monitor", "url": "CustomEvent.html#method_monitor", "access": "", "host": "CustomEvent", "params": "what <string>   what to monitor ('detach', 'attach', 'publish')", "type": "method", "description": "Monitor the event state for the subscribed event.  The first parameter\nis what should be monitored, the rest are the normal parameters when\nsubscribing to an event."}, {"name": "monitored", "url": "CustomEvent.html#property_monitored", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "Monitor when an event is attached or detached."}, {"name": "monthDaysNode", "url": "Calendar.html#property_monthDaysNode", "access": "protected", "host": "Calendar", "params": "", "type": "property", "description": "Container for house the month days elements."}, {"name": "monthNode", "url": "DatePickerSelect.html#config_monthNode", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "DOM Node to display the month of the DatePickerSelect. If not\nspecified try to query using HTML_PARSER an element inside\ncontentBox which matches <code>aui-datepicker-year</code>."}, {"name": "monthNodeChange", "url": "DatePickerSelect.html#event_monthNodeChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'monthNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "monthNodeName", "url": "DatePickerSelect.html#config_monthNodeName", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "Name attribute used on the\n<a href=\"DatePickerSelect.html#config_monthNode\">monthNode</a>."}, {"name": "monthNodeNameChange", "url": "DatePickerSelect.html#event_monthNodeNameChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'monthNodeName' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "mouseenter", "url": "YUI.html#event_mouseenter", "access": "", "host": "YUI", "params": "type <string>   \"mouseenter\", fn <function>   The method the event invokes., el <string|node>   The element(s) to assign the listener to., spec <string>   Optional.  String representing a selector that must \nmatch the target of the event in order for the listener to be called.", "type": "event", "description": "Sets up a \"mouseenter\" listener&#151;a listener that is called the first time \nthe user's mouse enters the specified element(s)."}, {"name": "mouseleave", "url": "YUI.html#event_mouseleave", "access": "", "host": "YUI", "params": "type <string>   \"mouseleave\", fn <function>   The method the event invokes., el <string|node>   The element(s) to assign the listener to., spec <string>   Optional.  String representing a selector that must \nmatch the target of the event in order for the listener to be called.", "type": "event", "description": "Sets up a \"mouseleave\" listener&#151;a listener that is called the first time \nthe user's mouse leaves the specified element(s)."}, {"name": "mouseOutHideDelay", "url": "plugin.NodeMenuNav.html#config_mouseOutHideDelay", "access": "", "host": "plugin.NodeMenuNav", "params": "", "type": "config", "description": "Number indicating the time (in milliseconds) that should expire before a \nsubmenu is hidden when the user mouses out of it."}, {"name": "mouseOutHideDelayChange", "url": "plugin.NodeMenuNav.html#event_mouseOutHideDelayChange", "access": "", "host": "plugin.NodeMenuNav", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'mouseOutHideDelay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "mousewheel", "url": "YUI.html#event_mousewheel", "access": "", "host": "YUI", "params": "type <string>   'mousewheel', fn <function>   the callback to execute, context <Object>  optional context object, args <Object>  0..n additional arguments to provide to the listener.", "type": "event", "description": "Mousewheel event.  This listener is automatically attached to the\ncorrect target, so one should not be supplied.  Mouse wheel \ndirection and velocity is stored in the 'mouseDelta' field."}, {"name": "mouseXY", "url": "DD.Drag.html#property_mouseXY", "access": "", "host": "DD.Drag", "params": "", "type": "property", "description": "The XY coords of the mousemove"}, {"name": "move", "url": "WidgetPosition.html#method_move", "access": "", "host": "WidgetPosition", "params": "x <Number>  The new x position, y <Number>  The new y position\n<p>Or</p>, x, <Array>  y values passed as an array ([x, y]), to support\nsimple pass through of Node.getXY results", "type": "method", "description": "Moves the Widget to the specified page xy co-ordinate position."}, {"name": "move", "url": "DD.Drag.html#config_move", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "If this is false, the drag element will not move with the cursor: default true. Can be used to \"resize\" the element."}, {"name": "moveChange", "url": "DD.Drag.html#event_moveChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'move' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "moveOnEnd", "url": "Plugin.DDProxy.html#config_moveOnEnd", "access": "", "host": "Plugin.DDProxy", "params": "", "type": "config", "description": "Move the original node at the end of the drag. Default: true"}, {"name": "moveOnEndChange", "url": "Plugin.DDProxy.html#event_moveOnEndChange", "access": "", "host": "Plugin.DDProxy", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'moveOnEnd' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_moveSelection", "url": "AutoComplete.html#method__moveSelection", "access": "protected", "host": "AutoComplete", "params": "keyCode <Number>  The numeric code of the key pressed", "type": "method", "description": "Triggered by the up and down arrow keys, changes the currently selected list element item, and scrolls the\ncontainer if necessary."}, {"name": "moveType", "url": "Sortable.html#config_moveType", "access": "", "host": "Sortable", "params": "", "type": "config", "description": "How should an item move to another list: insert, swap, move, copy. Default: insert"}, {"name": "moveTypeChange", "url": "Sortable.html#event_moveTypeChange", "access": "", "host": "Sortable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'moveType' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_movingToSubmenu", "url": "plugin.NodeMenuNav.html#property__movingToSubmenu", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Boolean indicating if the mouse is moving from a menu \nlabel to its corresponding submenu."}, {"name": "multiNavigate", "url": "History.html#method_multiNavigate", "access": "", "host": "History", "params": "states <object>  Associative array of module-state pairs to set simultaneously.", "type": "method", "description": "Stores a new entry in the browser history by changing the state\nof several registered modules in one atomic operation."}, {"name": "multiple", "url": "WidgetParent.html#config_multiple", "access": "", "host": "WidgetParent", "params": "", "type": "config", "description": "Boolean indicating if multiple children can be selected at \nonce.  Whether or not multiple selection is enabled is always delegated\nto the value of the <code>multiple</code> attribute of the root widget\nin the object hierarchy."}, {"name": "multipleChange", "url": "WidgetParent.html#event_multipleChange", "access": "", "host": "WidgetParent", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'multiple' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "NAME", "url": "Node.html#property_NAME", "access": "", "host": "Node", "params": "", "type": "property", "description": "The name of the component"}, {"name": "NAME", "url": "Cache.html#property_NAME", "access": "", "host": "Cache", "params": "", "type": "property", "description": "Class name."}, {"name": "name", "url": "Test.Case.html#property_name", "access": "", "host": "Test.Case", "params": "", "type": "property", "description": "Name for the test case."}, {"name": "name", "url": "Test.Suite.html#property_name", "access": "", "host": "Test.Suite", "params": "", "type": "property", "description": "The name of the test suite."}, {"name": "name", "url": "Assert.Error.html#property_name", "access": "", "host": "Assert.Error", "params": "", "type": "property", "description": "The name of the error that occurred."}, {"name": "name", "url": "Assert.ComparisonFailure.html#property_name", "access": "", "host": "Assert.ComparisonFailure", "params": "", "type": "property", "description": "The name of the error that occurred."}, {"name": "name", "url": "Assert.UnexpectedValue.html#property_name", "access": "", "host": "Assert.UnexpectedValue", "params": "", "type": "property", "description": "The name of the error that occurred."}, {"name": "name", "url": "Assert.ShouldFail.html#property_name", "access": "", "host": "Assert.ShouldFail", "params": "", "type": "property", "description": "The name of the error that occurred."}, {"name": "name", "url": "Assert.ShouldError.html#property_name", "access": "", "host": "Assert.ShouldError", "params": "", "type": "property", "description": "The name of the error that occurred."}, {"name": "name", "url": "Assert.UnexpectedError.html#property_name", "access": "", "host": "Assert.UnexpectedError", "params": "", "type": "property", "description": "The name of the error that occurred."}, {"name": "NAME", "url": "Plugin.Drag.html#property_NAME", "access": "", "host": "Plugin.Drag", "params": "", "type": "property", "description": "dd-plugin"}, {"name": "NAME", "url": "Plugin.Drop.html#property_NAME", "access": "", "host": "Plugin.Drop", "params": "", "type": "property", "description": "dd-drop-plugin"}, {"name": "NAME", "url": "DataSourceArraySchema.html#property_NAME", "access": "", "host": "DataSourceArraySchema", "params": "", "type": "property", "description": "Class name."}, {"name": "NAME", "url": "DataSourceCache.html#property_NAME", "access": "", "host": "DataSourceCache", "params": "", "type": "property", "description": "Class name."}, {"name": "NAME", "url": "DataSource.Local.html#property_NAME", "access": "", "host": "DataSource.Local", "params": "", "type": "property", "description": "Class name."}, {"name": "NAME", "url": "DataSource.IO.html#property_NAME", "access": "", "host": "DataSource.IO", "params": "", "type": "property", "description": "Class name."}, {"name": "NAME", "url": "DataSource.Get.html#property_NAME", "access": "", "host": "DataSource.Get", "params": "", "type": "property", "description": "Class name."}, {"name": "NAME", "url": "DataSource.Function.html#property_NAME", "access": "", "host": "DataSource.Function", "params": "", "type": "property", "description": "Class name."}, {"name": "NAME", "url": "DataSourceJSONSchema.html#property_NAME", "access": "", "host": "DataSourceJSONSchema", "params": "", "type": "property", "description": "Class name."}, {"name": "NAME", "url": "DataSourceXMLSchema.html#property_NAME", "access": "", "host": "DataSourceXMLSchema", "params": "", "type": "property", "description": "Class name."}, {"name": "NAME", "url": "DataSourceTextSchema.html#property_NAME", "access": "", "host": "DataSourceTextSchema", "params": "", "type": "property", "description": "Class name."}, {"name": "name", "url": "Base.html#property_name", "access": "", "host": "Base", "params": "", "type": "property", "description": "The string used to identify the class of this object."}, {"name": "name", "url": "ImgLoadGroup.html#config_name", "access": "", "host": "ImgLoadGroup", "params": "", "type": "config", "description": "Name for the group. Only used to identify the group in logging statements."}, {"name": "nameChange", "url": "ImgLoadGroup.html#event_nameChange", "access": "", "host": "ImgLoadGroup", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'name' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "namespace", "url": "YUI.html#method_namespace", "access": "", "host": "YUI", "params": "arguments <string*>  1-n namespaces to create", "type": "method", "description": "Returns the namespace specified and creates it if it doesn't exist\n<pre>\nYUI.namespace(\"property.package\");\nYUI.namespace(\"YAHOO.property.package\");\n</pre>\nEither of the above would create YUI.property, then\nYUI.property.package (YAHOO is scrubbed out, this is\nto remain compatible with YUI2)\nBe careful when naming packages. Reserved words may work in some browsers\nand not others. For instance, the following will fail in Safari:\n<pre>\nYUI.namespace(\"really.long.nested.namespace\");\n</pre>\nThis fails because \"long\" is a future reserved word in ECMAScript"}, {"name": "navigate", "url": "History.html#method_navigate", "access": "", "host": "History", "params": "module <string>  Non-empty string representing your module., state <string>  String representing the new state of the specified module.", "type": "method", "description": "Stores a new entry in the browser history by changing the state of a registered module."}, {"name": "_navigateMonth", "url": "Calendar.html#method__navigateMonth", "access": "protected", "host": "Calendar", "params": "offset <Number>  Offset of the number of months to navigate.\nCould be a positive or a negative offset.", "type": "method", "description": "Navigate through months and re-sync the UI."}, {"name": "_nearestValue", "url": "SliderValueRange.html#method__nearestValue", "access": "protected", "host": "SliderValueRange", "params": "value < mixed >   Value to test against current min - max range", "type": "method", "description": "Returns the nearest valid value to the value input.  If the provided\nvalue is outside the min - max range, accounting for min > max\nscenarios, the nearest of either min or max is returned.  Otherwise,\nthe provided value is returned."}, {"name": "_nearestValue", "url": "YUI.html#method__nearestValue", "access": "protected", "host": "YUI", "params": "value < mixed >   Value to test against current min - max range", "type": "method", "description": "Returns the nearest valid value to the value input.  If the provided\nvalue is outside the min - max range, accounting for min > max\nscenarios, the nearest of either min or max is returned.  Otherwise, the\nprovided value is returned."}, {"name": "NestedList.ATTRS", "url": "NestedList.html#property_NestedList.ATTRS", "access": "", "host": "NestedList", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the NestedList."}, {"name": "NestedList.NAME", "url": "NestedList.html#property_NestedList.NAME", "access": "", "host": "NestedList", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "newestOnTop", "url": "Console.html#config_newestOnTop", "access": "", "host": "Console", "params": "", "type": "config", "description": "New entries should display at the top of the Console or the bottom?"}, {"name": "newestOnTop", "url": "Plugin.Console.html#config_newestOnTop", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "New entries should display at the top of the Console or the bottom?"}, {"name": "newestOnTopChange", "url": "Console.html#event_newestOnTopChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'newestOnTop' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "newestOnTopChange", "url": "Plugin.Console.html#event_newestOnTopChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'newestOnTop' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "next", "url": "Node.html#method_next", "access": "", "host": "Node", "params": "fn <String | Function>  A selector or boolean method for testing elements.\nIf a function is used, it receives the current node being tested as the only argument.", "type": "method", "description": "Returns the next matching sibling. \nReturns the nearest element node sibling if no method provided."}, {"name": "next", "url": "AsyncQueue.html#method_next", "access": "", "host": "AsyncQueue", "params": "", "type": "method", "description": "Returns the next callback needing execution.  If a callback is\nconfigured to repeat via iterations or until, it will be returned until\nthe completion criteria is met.\nWhen the queue is empty, null is returned."}, {"name": "next", "url": "ImageViewer.html#method_next", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Load the next image."}, {"name": "next", "url": "Queue.html#method_next", "access": "", "host": "Queue", "params": "", "type": "method", "description": "Get the next item in the queue. FIFO support"}, {"name": "nextPageLink", "url": "Paginator.html#config_nextPageLink", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The <a href=\"Node.html\">Node</a> or template to be used as the\nnext link element."}, {"name": "nextPageLinkChange", "url": "Paginator.html#event_nextPageLinkChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'nextPageLink' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nextPageLinkLabel", "url": "Paginator.html#config_nextPageLinkLabel", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The label used as content of the\n<a href=\"Paginator.html#config_nextPageLink\">nextPageLink</a> element."}, {"name": "nextPageLinkLabelChange", "url": "Paginator.html#event_nextPageLinkLabelChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'nextPageLinkLabel' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nextSibling", "url": "TreeNode.html#config_nextSibling", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Next sibling of the current TreeNode."}, {"name": "nextSiblingChange", "url": "TreeNode.html#event_nextSiblingChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'nextSibling' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "node", "url": "Editable.html#config_node", "access": "", "host": "Editable", "params": "", "type": "config", "description": "Node to setup the editable."}, {"name": "node", "url": "Resize.html#config_node", "access": "", "host": "Resize", "params": "", "type": "config", "description": "The selector or element to resize. Required."}, {"name": "node", "url": "DD.Drag.html#config_node", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "Y.Node instance to use as the element to initiate a drag operation"}, {"name": "node", "url": "Plugin.DDNodeScroll.html#config_node", "access": "", "host": "Plugin.DDNodeScroll", "params": "", "type": "config", "description": "The node we want to scroll. Used to set the internal parentScroll attribute."}, {"name": "node", "url": "DD.Drop.html#config_node", "access": "", "host": "DD.Drop", "params": "", "type": "config", "description": "Y.Node instanace to use as the element to make a Drop Target"}, {"name": "node", "url": "Anim.html#config_node", "access": "", "host": "Anim", "params": "", "type": "config", "description": "The object to be animated."}, {"name": "node", "url": "A.Plugin.IO.html#config_node", "access": "", "host": "A.Plugin.IO", "params": "", "type": "config", "description": "Plug IO in any object we want, the setContent will use the node to\nset the content."}, {"name": "nodeChange", "url": "Editable.html#event_nodeChange", "access": "", "host": "Editable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nodeChange", "url": "Resize.html#event_nodeChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nodeChange", "url": "DD.Drag.html#event_nodeChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nodeChange", "url": "Plugin.DDNodeScroll.html#event_nodeChange", "access": "", "host": "Plugin.DDNodeScroll", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nodeChange", "url": "DD.Drop.html#event_nodeChange", "access": "", "host": "DD.Drop", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nodeChange", "url": "Anim.html#event_nodeChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nodeChange", "url": "A.Plugin.IO.html#event_nodeChange", "access": "", "host": "A.Plugin.IO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'node' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nodeContent", "url": "TreeViewDD.html#config_nodeContent", "access": "", "host": "TreeViewDD", "params": "", "type": "config", "description": "Reference for the current drop node."}, {"name": "nodeContentChange", "url": "TreeViewDD.html#event_nodeContentChange", "access": "", "host": "TreeViewDD", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'nodeContent' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "NodeList.getDOMNodes", "url": "NodeList.html#method_NodeList.getDOMNodes", "access": "", "host": "NodeList", "params": "node <Y.NodeList>  The NodeList instance", "type": "method", "description": "Retrieves the DOM nodes bound to a NodeList instance"}, {"name": "NodeMenuNav.SHIM_TEMPLATE", "url": "plugin.NodeMenuNav.html#property_NodeMenuNav.SHIM_TEMPLATE", "access": "", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "String representing the HTML used to create the \n<code>&#60;iframe&#62;</code> shim used to prevent \n<code>&#60;select&#62;</code> elements from poking through menus in IE 6."}, {"name": "NodeMenuNav.SHIM_TEMPLATE_TITLE", "url": "plugin.NodeMenuNav.html#property_NodeMenuNav.SHIM_TEMPLATE_TITLE", "access": "", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "String representing the value for the <code>title</code> \nattribute for the shim used to prevent <code>&#60;select&#62;</code> elements \nfrom poking through menus in IE 6."}, {"name": "Node.plug", "url": "Node.html#method_Node.plug", "access": "", "host": "Node", "params": "plugin <Function | Array>  Either the plugin class, an array of plugin classes or an array of objects (with fn and cfg properties defined), config <Object>  (Optional) If plugin is the plugin class, the configuration for the plugin", "type": "method", "description": "Registers plugins to be instantiated at the class level (plugins \nwhich should be plugged into every instance of Node by default)."}, {"name": "nodes", "url": "DD.Delegate.html#config_nodes", "access": "", "host": "DD.Delegate", "params": "", "type": "config", "description": "A selector query to get the children of the \"container\" to make draggable elements from."}, {"name": "nodes", "url": "LiveSearch.html#config_nodes", "access": "", "host": "LiveSearch", "params": "", "type": "config", "description": "Nodes to be indexed for the filtering."}, {"name": "nodes", "url": "Sortable.html#config_nodes", "access": "", "host": "Sortable", "params": "", "type": "config", "description": "A selector query to get the children of the \"container\" to make draggable elements from."}, {"name": "nodesChange", "url": "DD.Delegate.html#event_nodesChange", "access": "", "host": "DD.Delegate", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'nodes' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nodesChange", "url": "LiveSearch.html#event_nodesChange", "access": "", "host": "LiveSearch", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'nodes' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "nodesChange", "url": "Sortable.html#event_nodesChange", "access": "", "host": "Sortable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'nodes' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Node.unplug", "url": "Node.html#method_Node.unplug", "access": "", "host": "Node", "params": "plugin <Function | Array>  The plugin class, or an array of plugin classes", "type": "method", "description": "Unregisters any class level plugins which have been registered by the Node"}, {"name": "nodeXY", "url": "DD.Drag.html#property_nodeXY", "access": "", "host": "DD.Drag", "params": "", "type": "property", "description": "The initial element position"}, {"name": "normalizedQuery", "url": "LiveSearch.html#property_normalizedQuery", "access": "protected", "host": "LiveSearch", "params": "", "type": "property", "description": "Stores the normalized query value given from\n<a href=\"LiveSearch.html#config__normalizeQuery\">_normalizeQuery</a>."}, {"name": "_normalizeMessage", "url": "Console.html#method__normalizeMessage", "access": "protected", "host": "Console", "params": "e <Event>   custom event containing the log message", "type": "method", "description": "Create a log entry message from the inputs including the following keys:\n<ul>\n<li>time - this moment</li>\n<li>message - leg message</li>\n<li>category - logLevel or custom category for the message</li>\n<li>source - when provided, the widget or util calling Y.log</li>\n<li>sourceAndDetail - same as source but can include instance info</li>\n<li>localTime - readable version of time</li>\n<li>elapsedTime - ms since last entry</li>\n<li>totalTime - ms since Console was instantiated or reset</li>\n</ul>"}, {"name": "_normalizeMessage", "url": "Plugin.Console.html#method__normalizeMessage", "access": "protected", "host": "Plugin.Console", "params": "e <Event>   custom event containing the log message", "type": "method", "description": "Create a log entry message from the inputs including the following keys:\n<ul>\n<li>time - this moment</li>\n<li>message - leg message</li>\n<li>category - logLevel or custom category for the message</li>\n<li>source - when provided, the widget or util calling Y.log</li>\n<li>sourceAndDetail - same as source but can include instance info</li>\n<li>localTime - readable version of time</li>\n<li>elapsedTime - ms since last entry</li>\n<li>totalTime - ms since Console was instantiated or reset</li>\n</ul>"}, {"name": "_normalizeQuery", "url": "LiveSearch.html#method__normalizeQuery", "access": "protected", "host": "LiveSearch", "params": "query <String>  Query to filter results", "type": "method", "description": "Normalize the input query. With <code>trim</code>,\n<code>matchRegex</code> and replace '*' to '' (on a regex empty match\nwith everything like *)."}, {"name": "_normalizeYearMonth", "url": "Calendar.html#method__normalizeYearMonth", "access": "protected", "host": "Calendar", "params": "year <Number>  Year in the format YYYY., month <Number>  0 for January 11 for December., day <Number> ", "type": "method", "description": "Returns an Object with the current day, month and year."}, {"name": "notify", "url": "Subscriber.html#method_notify", "access": "", "host": "Subscriber", "params": "args <Array>   Arguments array for the subscriber, ce <CustomEvent>   The custom event that sent the notification", "type": "method", "description": "Executes the subscriber."}, {"name": "NS", "url": "Cache.html#property_NS", "access": "", "host": "Cache", "params": "", "type": "property", "description": "The namespace for the plugin. This will be the property on the host which\nreferences the plugin instance."}, {"name": "NS", "url": "Plugin.DDConstrained.html#property_NS", "access": "protected", "host": "Plugin.DDConstrained", "params": "", "type": "property", "description": "The Constrained instance will be placed on the Drag instance under the con namespace."}, {"name": "NS", "url": "Plugin.DDProxy.html#property_NS", "access": "protected", "host": "Plugin.DDProxy", "params": "", "type": "property", "description": "The Proxy instance will be placed on the Drag instance under the proxy namespace."}, {"name": "NS", "url": "Plugin.DDWindowScroll.html#property_NS", "access": "protected", "host": "Plugin.DDWindowScroll", "params": "", "type": "property", "description": "The Scroll instance will be placed on the Drag instance under the winscroll namespace."}, {"name": "NS", "url": "Plugin.DDNodeScroll.html#property_NS", "access": "protected", "host": "Plugin.DDNodeScroll", "params": "", "type": "property", "description": "The NodeScroll instance will be placed on the Drag instance under the nodescroll namespace."}, {"name": "NS", "url": "Plugin.Drag.html#property_NS", "access": "", "host": "Plugin.Drag", "params": "", "type": "property", "description": "The Drag instance will be placed on the Node instance under the dd namespace. It can be accessed via Node.dd;"}, {"name": "NS", "url": "Plugin.Drop.html#property_NS", "access": "", "host": "Plugin.Drop", "params": "", "type": "property", "description": "The Drop instance will be placed on the Node instance under the drop namespace. It can be accessed via Node.drop;"}, {"name": "NS", "url": "DataSourceArraySchema.html#property_NS", "access": "", "host": "DataSourceArraySchema", "params": "", "type": "property", "description": "The namespace for the plugin. This will be the property on the host which\nreferences the plugin instance."}, {"name": "NS", "url": "DataSourceCache.html#property_NS", "access": "", "host": "DataSourceCache", "params": "", "type": "property", "description": "The namespace for the plugin. This will be the property on the host which\nreferences the plugin instance."}, {"name": "NS", "url": "DataSourceJSONSchema.html#property_NS", "access": "", "host": "DataSourceJSONSchema", "params": "", "type": "property", "description": "The namespace for the plugin. This will be the property on the host which\nreferences the plugin instance."}, {"name": "NS", "url": "DataSourceXMLSchema.html#property_NS", "access": "", "host": "DataSourceXMLSchema", "params": "", "type": "property", "description": "The namespace for the plugin. This will be the property on the host which\nreferences the plugin instance."}, {"name": "NS", "url": "DataSourceTextSchema.html#property_NS", "access": "", "host": "DataSourceTextSchema", "params": "", "type": "property", "description": "The namespace for the plugin. This will be the property on the host which\nreferences the plugin instance."}, {"name": "NS", "url": "YUI.html#property_NS", "access": "protected", "host": "YUI", "params": "", "type": "property", "description": "Namespace for the plugin"}, {"name": "numericSort", "url": "Array.html#method_numericSort", "access": "", "host": "Array", "params": "", "type": "method", "description": "Numeric sort convenience function.\nY.ArrayAssert.itemsAreEqual([1, 2, 3], [3, 1, 2].sort(Y.Array.numericSort));"}, {"name": "objs", "url": "Do.html#property_objs", "access": "", "host": "Do", "params": "", "type": "property", "description": "Cache of objects touched by the utility"}, {"name": "odd", "url": "NodeList.html#method_odd", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Creates a new NodeList containing all nodes at odd indices\n(zero-based index)."}, {"name": "offsetNode", "url": "DD.Drag.html#config_offsetNode", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "Offset the drag element by the difference in cursor position: default true"}, {"name": "offsetNodeChange", "url": "DD.Drag.html#event_offsetNodeChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'offsetNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_offsetToValue", "url": "SliderValueRange.html#method__offsetToValue", "access": "protected", "host": "SliderValueRange", "params": "offset < Number >   X or Y pixel offset", "type": "method", "description": "<p>Converts a pixel position into a value.  Calculates current\nthumb offset from the leading edge of the rail multiplied by the\nratio of <code>(max - min) / (constraining dim)</code>.</p>\n<p>Override this if you want to use a different value mapping\nalgorithm.</p>"}, {"name": "_offsetToValue", "url": "YUI.html#method__offsetToValue", "access": "protected", "host": "YUI", "params": "X < Number >  or Y pixel position", "type": "method", "description": "<p>Converts a pixel position into a value.  Calculates current\nposition minus xy offsets of the constraining element multiplied by the\nratio of <code>(max - min) / (constraining dim)</code>.</p>\n<p>Override this if you want to use a different value mapping\nalgorithm.</p>"}, {"name": "_offsetXY", "url": "YUI.html#property__offsetXY", "access": "protected", "host": "YUI", "params": "", "type": "property", "description": "Cached X or Y offset for the constraining element to avoid extraneous\n<code>getXY()</code> calls during run time calculation."}, {"name": "on", "url": "NodeList.html#method_on", "access": "", "host": "NodeList", "params": "type <String>  The event being listened for, fn <Function>  The handler to call when the event fires, context <Object>  The context to call the handler with.\nDefault is the NodeList instance.", "type": "method", "description": "Applies an event listener to each Node bound to the NodeList."}, {"name": "on", "url": "SyntheticEvent.html#method_on", "access": "protected", "host": "SyntheticEvent", "params": "type <String>   the synthetic event name, fn <Function>   the callback function, el <HTMLElement | Node | HTMLElement[] | NodeList>   \nsubscription target(s)", "type": "method", "description": "Initial receiver of the event subscription.  Passes off control to the\nimplementation <code>on</code> specified in the constructor\nconfiguration after setting up the boiler plate code necessary for clean\ndetaching and destruction in the Event infrastructure.  Note that the\nimplementation function specified in the configuration will be called\nonce for each node passed in <code>el</code>, and each will be a Node\ninstance."}, {"name": "on", "url": "YUI.html#method_on", "access": "", "host": "YUI", "params": "type** <Object>  event type (this parameter does not apply for function events), fn <Object>  the callback, target** <Object>  a descriptor for the target (applies to custom events only).\nFor function events, this is the object that contains the function to\nexecute., extra** <Object>  0..n Extra information a particular event may need.  These\nwill be documented with the event.  In the case of function events, this\nis the name of the function to execute on the host.  In the case of\ndelegate listeners, this is the event delegation specification., context <Object>  optionally change the value of 'this' in the callback, args* <Object>  0..n additional arguments to pass to the callback.", "type": "method", "description": "<code>YUI</code>'s <code>on</code> method is a unified interface for subscribing to\nmost events exposed by YUI.  This includes custom events, DOM events, and \nfunction events.  <code>detach</code> is also provided to remove listeners\nserviced by this function.\nThe signature that <code>on</code> accepts varies depending on the type\nof event being consumed.  Refer to the specific methods that will\nservice a specific request for additional information about subscribing\nto that type of event.\n<ul>\n<li>Custom events.  These events are defined by various\nmodules in the library.  This type of event is delegated to\n<code>EventTarget</code>'s <code>on</code> method.\n<ul>\n<li>The type of the event</li>\n<li>The callback to execute</li>\n<li>An optional context object</li>\n<li>0..n additional arguments to supply the callback.</li>\n</ul>\nExample: \n<code>Y.on('domready', function() { // start work });</code>\n</li>\n<li>DOM events.  These are moments reported by the browser related\nto browser functionality and user interaction.\nThis type of event is delegated to <code>Event</code>'s \n<code>attach</code> method.\n<ul>\n<li>The type of the event</li>\n<li>The callback to execute</li>\n<li>The specification for the Node(s) to attach the listener\nto.  This can be a selector, collections, or Node/Element\nrefereces.</li>\n<li>An optional context object</li>\n<li>0..n additional arguments to supply the callback.</li>\n</ul>\nExample: \n<code>Y.on('click', function(e) { // something was clicked }, '#someelement');</code>\n</li>\n<li>Function events.  These events can be used to react before or after a\nfunction is executed.  This type of event is delegated to <code>Event.Do</code>'s \n<code>before</code> method.\n<ul>\n<li>The callback to execute</li>\n<li>The object that has the function that will be listened for.</li>\n<li>The name of the function to listen for.</li>\n<li>An optional context object</li>\n<li>0..n additional arguments to supply the callback.</li>\n</ul>\nExample <code>Y.on(function(arg1, arg2, etc) { // obj.methodname was executed }, obj 'methodname');</code>\n</li>\n</ul>\n<code>on</code> corresponds to the moment before any default behavior of\nthe event.  <code>after</code> works the same way, but these listeners\nexecute after the event's default behavior.  <code>before</code> is an\nalias for <code>on</code>."}, {"name": "on", "url": "CustomEvent.html#method_on", "access": "", "host": "CustomEvent", "params": "fn <Function>  The function to execute, context <object>   optional execution context., arg* <mixed>   0..n additional arguments to supply to the subscriber\nwhen the event fires.", "type": "method", "description": "Listen for this event"}, {"name": "on", "url": "EventTarget.html#method_on", "access": "", "host": "EventTarget", "params": "type <string>        The type of the event, fn <Function>   The callback, context <object>   optional execution context., arg* <mixed>   0..n additional arguments to supply to the subscriber", "type": "method", "description": "Subscribe to a custom event hosted by this object"}, {"name": "_onActiveChange", "url": "A.Plugin.IO.html#method__onActiveChange", "access": "protected", "host": "A.Plugin.IO", "params": "event <EventFacade> ", "type": "method", "description": "Fires after the value of the\n<a href=\"A.Plugin.IO.html#config_active\">active</a> attribute change."}, {"name": "_onActiveDescendantChange", "url": "plugin.NodeMenuNav.html#method__onActiveDescendantChange", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the Attribute change event., menuNav <NodeMenuNav>  Object representing the NodeMenuNav instance.", "type": "method", "description": "\"activeDescendantChange\" event handler for menu's \nFocus Manager."}, {"name": "onAvailable", "url": "Event.html#method_onAvailable", "access": "", "host": "Event", "params": "id <string||string[]>  the id of the element, or an array\nof ids to look for., fn <function>  what to execute when the element is found., p_obj <object>  an optional object to be passed back as\na parameter to fn., p_override <boolean|object>  If set to true, fn will execute\nin the context of p_obj, if set to an object it\nwill execute in the context of that object, checkContent <boolean>   check child node readiness (onContentReady)", "type": "method", "description": "Executes the supplied callback when the item with the supplied\nid is found.  This is meant to be used to execute behavior as\nsoon as possible as the page loads.  If you use this after the\ninitial page load it will poll for a fixed time for the element.\nThe number of times it will poll and the frequency are\nconfigurable.  By default it will poll for 10 seconds.\n<p>The callback is executed with a single parameter:\nthe custom object parameter, if provided.</p>"}, {"name": "_onButtonMouseDown", "url": "AutoComplete.html#method__onButtonMouseDown", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Called when the user mouses down on the button element in the combobox."}, {"name": "_onCategoryCheckboxClick", "url": "Plugin.ConsoleFilters.html#method__onCategoryCheckboxClick", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "e <Event>   the DOM event", "type": "method", "description": "Passes checkbox clicks on to the category attribute."}, {"name": "once", "url": "YUI.html#method_once", "access": "", "host": "YUI", "params": "type** <Object>  event type (this parameter does not apply for function events), fn <Object>  the callback, target** <Object>  a descriptor for the target (applies to custom events only).\nFor function events, this is the object that contains the function to\nexecute., extra** <Object>  0..n Extra information a particular event may need.  These\nwill be documented with the event.  In the case of function events, this\nis the name of the function to execute on the host.  In the case of\ndelegate listeners, this is the event delegation specification., context <Object>  optionally change the value of 'this' in the callback, args* <Object>  0..n additional arguments to pass to the callback.", "type": "method", "description": "Listen for an event one time.  Equivalent to <code>on</code>, except that\nthe listener is immediately detached when executed."}, {"name": "once", "url": "Subscriber.html#property_once", "access": "", "host": "Subscriber", "params": "", "type": "property", "description": "This listener only reacts to the event once"}, {"name": "once", "url": "EventTarget.html#method_once", "access": "", "host": "EventTarget", "params": "type <string>        The type of the event, fn <Function>   The callback, context <object>   optional execution context., arg* <mixed>   0..n additional arguments to supply to the subscriber", "type": "method", "description": "Listen to a custom event hosted by this object one time.  \nThis is the equivalent to <code>on</code> except the\nlistener is immediatelly detached when it is executed."}, {"name": "_onClearClick", "url": "Console.html#method__onClearClick", "access": "protected", "host": "Console", "params": "e <Event>   DOM event facade for the click event", "type": "method", "description": "Event handler for clicking on the Clear button.  Pass-through to\n<code>this.clearConsole()</code>."}, {"name": "_onClearClick", "url": "Plugin.Console.html#method__onClearClick", "access": "protected", "host": "Plugin.Console", "params": "e <Event>   DOM event facade for the click event", "type": "method", "description": "Event handler for clicking on the Clear button.  Pass-through to\n<code>this.clearConsole()</code>."}, {"name": "_onClickCloseEl", "url": "ImageViewer.html#method__onClickCloseEl", "access": "protected", "host": "ImageViewer", "params": "event <EventFacade>  click event facade", "type": "method", "description": "Fires the click event on the close icon."}, {"name": "_onClickDays", "url": "Calendar.html#method__onClickDays", "access": "protected", "host": "Calendar", "params": "event <EventFacade> ", "type": "method", "description": "Fires on click days elements."}, {"name": "_onClickFirstLinkEl", "url": "Paginator.html#method__onClickFirstLinkEl", "access": "protected", "host": "Paginator", "params": "event <EventFacade> ", "type": "method", "description": "Click event handler for the\n<a href=\"Paginator.html#config_firstLinkEl\">firstLinkEl</a>."}, {"name": "_onClickHitArea", "url": "TreeView.html#method__onClickHitArea", "access": "protected", "host": "TreeView", "params": "event <EventFacade> ", "type": "method", "description": "Fires on <code>click</code> the TreeNode hitarea."}, {"name": "_onClickLastLinkEl", "url": "Paginator.html#method__onClickLastLinkEl", "access": "protected", "host": "Paginator", "params": "event <EventFacade> ", "type": "method", "description": "Click event handler for the\n<a href=\"Paginator.html#config_lastLinkEl\">lastLinkEl</a>."}, {"name": "_onClickLeftArrow", "url": "ImageViewer.html#method__onClickLeftArrow", "access": "protected", "host": "ImageViewer", "params": "event <EventFacade>  click event facade", "type": "method", "description": "Fires the click event on the left arrow icon."}, {"name": "_onClickLinks", "url": "ImageViewer.html#method__onClickLinks", "access": "protected", "host": "ImageViewer", "params": "event <EventFacade>  click event facade", "type": "method", "description": "Fires the click event on the links."}, {"name": "_onClickNextLinkEl", "url": "Paginator.html#method__onClickNextLinkEl", "access": "protected", "host": "Paginator", "params": "event <EventFacade> ", "type": "method", "description": "Click event handler for the\n<a href=\"Paginator.html#config_nextLinkEl\">nextLinkEl</a>."}, {"name": "_onClickNodeEl", "url": "TreeView.html#method__onClickNodeEl", "access": "protected", "host": "TreeView", "params": "event <EventFacade> ", "type": "method", "description": "Fires on click the TreeView (i.e. set the select/unselect state)."}, {"name": "_onClickPageLinkEl", "url": "Paginator.html#method__onClickPageLinkEl", "access": "protected", "host": "Paginator", "params": "event <EventFacade> ", "type": "method", "description": "Click event handler for the\n<a href=\"Paginator.html#config_pageLinkEl\">pageLinkEl</a>."}, {"name": "_onClickPrevLinkEl", "url": "Paginator.html#method__onClickPrevLinkEl", "access": "protected", "host": "Paginator", "params": "event <EventFacade> ", "type": "method", "description": "Click event handler for the\n<a href=\"Paginator.html#config_prevLinkEl\">prevLinkEl</a>."}, {"name": "_onClickRightArrow", "url": "ImageViewer.html#method__onClickRightArrow", "access": "protected", "host": "ImageViewer", "params": "event <EventFacade>  click event facade", "type": "method", "description": "Fires the click event on the right arrow icon."}, {"name": "_onCollapseClick", "url": "Console.html#method__onCollapseClick", "access": "protected", "host": "Console", "params": "e <Event>   DOM event facade for the click event", "type": "method", "description": "Event handler for clicking on the Collapse/Expand button. Sets the\n&quot;collapsed&quot; attribute accordingly."}, {"name": "_onCollapseClick", "url": "Plugin.Console.html#method__onCollapseClick", "access": "protected", "host": "Plugin.Console", "params": "e <Event>   DOM event facade for the click event", "type": "method", "description": "Event handler for clicking on the Collapse/Expand button. Sets the\n&quot;collapsed&quot; attribute accordingly."}, {"name": "_onContainerClick", "url": "AutoComplete.html#method__onContainerClick", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Handles when a user clicks on the container."}, {"name": "_onContainerMouseout", "url": "AutoComplete.html#method__onContainerMouseout", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Handles when a user mouses out of the container."}, {"name": "_onContainerMouseover", "url": "AutoComplete.html#method__onContainerMouseover", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Handles when a user mouses over the container."}, {"name": "_onContainerScroll", "url": "AutoComplete.html#method__onContainerScroll", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Handles the container scroll events."}, {"name": "onContentReady", "url": "Event.html#method_onContentReady", "access": "", "host": "Event", "params": "id <string>  the id of the element to look for., fn <function>  what to execute when the element is ready., p_obj <object>  an optional object to be passed back as\na parameter to fn., p_override <boolean|object>  If set to true, fn will execute\nin the context of p_obj.  If an object, fn will\nexectute in the context of that object", "type": "method", "description": "Works the same way as onAvailable, but additionally checks the\nstate of sibling elements to determine if the content of the\navailable element is safe to modify.\n<p>The callback is executed with a single parameter:\nthe custom object parameter, if provided.</p>"}, {"name": "onCSS", "url": "Loader.html#method_onCSS", "access": "", "host": "Loader", "params": "", "type": "method", "description": "Callback for the 'CSSComplete' event.  When loading YUI components with CSS\nthe CSS is loaded first, then the script.  This provides a moment you can tie into to improve\nthe presentation of the page while the script is loading."}, {"name": "onCSS", "url": "config.html#property_onCSS", "access": "", "host": "config", "params": "", "type": "property", "description": "Callback for the 'CSSComplete' event.  When dynamically loading YUI \ncomponents with CSS, this property fires when the CSS is finished\nloading but script loading is still ongoing.  This provides an\nopportunity to enhance the presentation of a loading page a little\nbit before the entire loading process is done."}, {"name": "_onDocFocus", "url": "plugin.NodeMenuNav.html#method__onDocFocus", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the DOM event.", "type": "method", "description": "\"focus\" event handler for the owner document of the MenuNav."}, {"name": "_onDocFocus", "url": "Widget.html#method__onDocFocus", "access": "protected", "host": "Widget", "params": "evt <EventFacade>  The event facade for the DOM focus event", "type": "method", "description": "DOM focus event handler, used to sync the state of the Widget with the DOM"}, {"name": "_onDocFocus", "url": "plugin.NodeFocusManager.html#method__onDocFocus", "access": "protected", "host": "plugin.NodeFocusManager", "params": "event <Object>   Object representing the DOM event.", "type": "method", "description": "\"focus\" event handler for the owner document of the \nFocus Manager's Node."}, {"name": "_onDocMouseDown", "url": "plugin.NodeMenuNav.html#method__onDocMouseDown", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mousedown\" event handler for the owner document of \nthe menu."}, {"name": "_onDocMouseDown", "url": "Widget.html#method__onDocMouseDown", "access": "protected", "host": "Widget", "params": "evt <EventFacade>  The event facade for the DOM focus event", "type": "method", "description": "\"mousedown\" event handler for the owner document of the \nwidget's bounding box."}, {"name": "_onDocMouseDown", "url": "plugin.NodeFocusManager.html#method__onDocMouseDown", "access": "protected", "host": "plugin.NodeFocusManager", "params": "event <Object>   Object representing the DOM event.", "type": "method", "description": "\"mousedown\" event handler for the owner document of the \nFocus Manager's Node."}, {"name": "_onDragAlign", "url": "TreeViewDD.html#method__onDragAlign", "access": "protected", "host": "TreeViewDD", "params": "event <EventFacade>  append event facade", "type": "method", "description": "Fires on drag align event."}, {"name": "_onDragEnd", "url": "SliderBase.html#method__onDragEnd", "access": "protected", "host": "SliderBase", "params": "e <Event>   the <code>drag:end</code> event from the thumb", "type": "method", "description": "Dispatches the <code>slideEnd</code> event."}, {"name": "_onDragStart", "url": "SliderBase.html#method__onDragStart", "access": "protected", "host": "SliderBase", "params": "e <Event>   the <code>drag:start</code> event from the thumb", "type": "method", "description": "Dispatches the <code>slideStart</code> event."}, {"name": "_onDragStart", "url": "TreeViewDD.html#method__onDragStart", "access": "protected", "host": "TreeViewDD", "params": "event <EventFacade>  append event facade", "type": "method", "description": "Fires on drag start event."}, {"name": "_onDropExit", "url": "TreeViewDD.html#method__onDropExit", "access": "protected", "host": "TreeViewDD", "params": "event <EventFacade>  append event facade", "type": "method", "description": "Fires on drop exit event."}, {"name": "_onDropHit", "url": "TreeViewDD.html#method__onDropHit", "access": "protected", "host": "TreeViewDD", "params": "event <EventFacade>  append event facade", "type": "method", "description": "Fires on drop hit event."}, {"name": "_onDropOver", "url": "TreeViewDD.html#method__onDropOver", "access": "protected", "host": "TreeViewDD", "params": "event <EventFacade>  append event facade", "type": "method", "description": "Fires on drop over event."}, {"name": "one", "url": "Node.html#method_one", "access": "", "host": "Node", "params": "selector <string>  The CSS selector to test against.", "type": "method", "description": "Retrieves a Node instance of nodes based on the given CSS selector."}, {"name": "one", "url": "A.NodeList.html#method_one", "access": "", "host": "A.NodeList", "params": "", "type": "method", "description": "See <a href=\"Node.html#method_one\">Node one</a>."}, {"name": "_onEntry", "url": "Plugin.ConsoleFilters.html#method__onEntry", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "e <Event>   the custom event object", "type": "method", "description": "Ensures a filter is set up for any new categories or sources and\ncollects the messages in _entries.  If the message is stamped with a\ncategory or source that is currently being filtered out, the message\nwill not pass to the Console's print buffer."}, {"name": "onFailure", "url": "Loader.html#method_onFailure", "access": "", "host": "Loader", "params": "", "type": "method", "description": "Callback that will be executed if there is a failure"}, {"name": "_onFocusedChange", "url": "OverlayManager.html#method__onFocusedChange", "access": "protected", "host": "OverlayManager", "params": "event <EventFacade> ", "type": "method", "description": "Fires when the <a href=\"Widget.html#config_focused\">focused</a>\nattribute change. Used to invoke\n<a href=\"OverlayManager.html#method_bringToTop\">bringToTop</a>."}, {"name": "_onHandleMouseOut", "url": "Resize.html#method__onHandleMouseOut", "access": "protected", "host": "Resize", "params": "event <EventFacade> ", "type": "method", "description": "Mouseout event handler for the handles."}, {"name": "_onHandleMouseOver", "url": "Resize.html#method__onHandleMouseOver", "access": "protected", "host": "Resize", "params": "event <EventFacade> ", "type": "method", "description": "Mouseover event handler for the handles."}, {"name": "_onHorizontalMenuKeyDown", "url": "plugin.NodeMenuNav.html#method__onHorizontalMenuKeyDown", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the DOM event.", "type": "method", "description": "\"keydown\" event handler for horizontal menus."}, {"name": "onHostEvent", "url": "Plugin.Base.html#method_onHostEvent", "access": "", "host": "Plugin.Base", "params": "type <String | Object>  The event type., fn <Function>  The listener., context <Object>  The execution context. Defaults to the plugin instance.", "type": "method", "description": "Listens for the \"on\" moment of events fired by the host object.\nListeners attached through this method will be detached when the plugin is unplugged."}, {"name": "_onInputChange", "url": "CharCounter.html#method__onInputChange", "access": "protected", "host": "CharCounter", "params": "event <EventFacade> ", "type": "method", "description": "Fired on input value change."}, {"name": "_onInterval", "url": "AutoComplete.html#method__onInterval", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Enables the query to be triggered based on detecting text input via intervals instead of via\nkey events."}, {"name": "_onKeyDown", "url": "plugin.NodeMenuNav.html#method__onKeyDown", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the DOM event.", "type": "method", "description": "\"keydown\" event handler for the menu."}, {"name": "_onKeyInteraction", "url": "ImageViewer.html#method__onKeyInteraction", "access": "protected", "host": "ImageViewer", "params": "event <EventFacade>  click event facade", "type": "method", "description": "Handles the key interaction (i.e., next, prev etc)."}, {"name": "_onKeyPress", "url": "plugin.NodeMenuNav.html#method__onKeyPress", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the DOM event.", "type": "method", "description": "\"keypress\" event handler for the menu."}, {"name": "_onKeypressEditable", "url": "Editable.html#method__onKeypressEditable", "access": "protected", "host": "Editable", "params": "event <EventFacade> ", "type": "method", "description": "Fires <code>onkeypress</code> occurs on the editable element."}, {"name": "_onLoadImage", "url": "ImageViewer.html#method__onLoadImage", "access": "protected", "host": "ImageViewer", "params": "event <EventFacade> ", "type": "method", "description": "Fires on a image load."}, {"name": "_onLogEvent", "url": "Console.html#method__onLogEvent", "access": "protected", "host": "Console", "params": "msg <String>   the log message, cat <String>   OPTIONAL the category or logLevel of the message, src <String>   OPTIONAL the source of the message (e.g. widget name)", "type": "method", "description": "Responds to log events by normalizing qualifying messages and passing\nthem along through the entry event for buffering etc."}, {"name": "_onLogEvent", "url": "Plugin.Console.html#method__onLogEvent", "access": "protected", "host": "Plugin.Console", "params": "msg <String>   the log message, cat <String>   OPTIONAL the category or logLevel of the message, src <String>   OPTIONAL the source of the message (e.g. widget name)", "type": "method", "description": "Responds to log events by normalizing qualifying messages and passing\nthem along through the entry event for buffering etc."}, {"name": "_onMenuItemMouseOut", "url": "plugin.NodeMenuNav.html#method__onMenuItemMouseOut", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menuItem <Node>  Node instance representing a menuitem., event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mouseout\" event handler for a menuitem."}, {"name": "_onMenuItemMouseOver", "url": "plugin.NodeMenuNav.html#method__onMenuItemMouseOver", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menuItem <Node>  Node instance representing a menuitem., event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mouseover\" event handler for a menuitem."}, {"name": "_onMenuLabelMouseOut", "url": "plugin.NodeMenuNav.html#method__onMenuLabelMouseOut", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menuLabel <Node>  Node instance representing a menu label., event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mouseout\" event handler for a menu label."}, {"name": "_onMenuLabelMouseOver", "url": "plugin.NodeMenuNav.html#method__onMenuLabelMouseOver", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menuLabel <Node>  Node instance representing a menu label., event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mouseover\" event handler for a menu label."}, {"name": "_onMenuMouseOut", "url": "plugin.NodeMenuNav.html#method__onMenuMouseOut", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menu <Node>  Node instance representing a menu., event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mouseout\" event handler for a menu."}, {"name": "_onMenuMouseOver", "url": "plugin.NodeMenuNav.html#method__onMenuMouseOver", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menu <Node>  Node instance representing a menu., event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mouseover\" event handler for a menu."}, {"name": "_onMouseDown", "url": "OverlayManager.html#method__onMouseDown", "access": "protected", "host": "OverlayManager", "params": "event <EventFacade> ", "type": "method", "description": "Mousedown event handler, used to invoke\n<a href=\"OverlayManager.html#method_bringToTop\">bringToTop</a>."}, {"name": "_onMouseEnterDays", "url": "Calendar.html#method__onMouseEnterDays", "access": "protected", "host": "Calendar", "params": "event <EventFacade> ", "type": "method", "description": "Fires on mouseenter days elements."}, {"name": "_onMouseEnterEditable", "url": "Editable.html#method__onMouseEnterEditable", "access": "protected", "host": "Editable", "params": "event <EventFacade> ", "type": "method", "description": "Fires <code>onmouseenter</code> occurs on the editable element."}, {"name": "_onMouseEnterNodeEl", "url": "TreeView.html#method__onMouseEnterNodeEl", "access": "protected", "host": "TreeView", "params": "event <EventFacade> ", "type": "method", "description": "Fires on <code>mouseeneter</code> the TreeNode."}, {"name": "_onMouseLeaveDays", "url": "Calendar.html#method__onMouseLeaveDays", "access": "protected", "host": "Calendar", "params": "event <EventFacade> ", "type": "method", "description": "Fires on mouseleave days elements."}, {"name": "_onMouseLeaveEditable", "url": "Editable.html#method__onMouseLeaveEditable", "access": "protected", "host": "Editable", "params": "event <EventFacade> ", "type": "method", "description": "Fires <code>onmouseleave</code> occurs on the editable element."}, {"name": "_onMouseLeaveNodeEl", "url": "TreeView.html#method__onMouseLeaveNodeEl", "access": "protected", "host": "TreeView", "params": "event <EventFacade> ", "type": "method", "description": "Fires on <code>mouseleave</code> the TreeNode."}, {"name": "_onMouseMove", "url": "plugin.NodeMenuNav.html#method__onMouseMove", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mousemove\" event handler for the menu."}, {"name": "_onMouseOut", "url": "plugin.NodeMenuNav.html#method__onMouseOut", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mouseout\" event handler for the menu."}, {"name": "_onMouseOver", "url": "plugin.NodeMenuNav.html#method__onMouseOver", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mouseover\" event handler for the menu."}, {"name": "_onPauseClick", "url": "Console.html#method__onPauseClick", "access": "protected", "host": "Console", "params": "e <Event>   DOM event facade for the click event", "type": "method", "description": "Event handler for clicking on the Pause checkbox to update the paused\nattribute."}, {"name": "_onPauseClick", "url": "Plugin.Console.html#method__onPauseClick", "access": "protected", "host": "Plugin.Console", "params": "e <Event>   DOM event facade for the click event", "type": "method", "description": "Event handler for clicking on the Pause checkbox to update the paused\nattribute."}, {"name": "_onPausedChange", "url": "ImageGallery.html#method__onPausedChange", "access": "protected", "host": "ImageGallery", "params": "event <EventFacade> ", "type": "method", "description": "Fires before the value of the\n<a href=\"ImageGallery.html#config_paused\">paused</a> attribute change."}, {"name": "_onPlayingChange", "url": "ImageGallery.html#method__onPlayingChange", "access": "protected", "host": "ImageGallery", "params": "event <EventFacade> ", "type": "method", "description": "Fires before the value of the\n<a href=\"ImageGallery.html#config_playing\">playing</a> attribute change."}, {"name": "onProgress", "url": "Loader.html#method_onProgress", "access": "", "host": "Loader", "params": "", "type": "method", "description": "Callback executed each time a script or css file is loaded"}, {"name": "_onRailMouseDown", "url": "ClickableRail.html#method__onRailMouseDown", "access": "protected", "host": "ClickableRail", "params": "e <DOMEvent>   the mousedown event object", "type": "method", "description": "Dispatches the railMouseDown event."}, {"name": "_onSelectChange", "url": "DatePickerSelect.html#method__onSelectChange", "access": "protected", "host": "DatePickerSelect", "params": "event <EventFacade> ", "type": "method", "description": "Fired on any select change."}, {"name": "_onSourceCheckboxClick", "url": "Plugin.ConsoleFilters.html#method__onSourceCheckboxClick", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "e <Event>   the DOM event", "type": "method", "description": "Passes checkbox clicks on to the source attribute."}, {"name": "onSuccess", "url": "Loader.html#method_onSuccess", "access": "", "host": "Loader", "params": "", "type": "method", "description": "Callback that will be executed when the loader is finished\nwith an insert"}, {"name": "_onTextboxBlur", "url": "AutoComplete.html#method__onTextboxBlur", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Handles the input element losing focus."}, {"name": "_onTextboxFocus", "url": "AutoComplete.html#method__onTextboxFocus", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Handles the input element gaining focus."}, {"name": "_onTextboxKeyDown", "url": "AutoComplete.html#method__onTextboxKeyDown", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Handles the keydown events on the input element for functional keys."}, {"name": "_onTextboxKeyPress", "url": "AutoComplete.html#method__onTextboxKeyPress", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Handles the key press events of the input element."}, {"name": "_onTextboxKeyUp", "url": "AutoComplete.html#method__onTextboxKeyUp", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Handles the keyup events of the input element."}, {"name": "onTimeout", "url": "Loader.html#method_onTimeout", "access": "", "host": "Loader", "params": "", "type": "method", "description": "Callback that will be executed if a timeout occurs"}, {"name": "_onVerticalMenuKeyDown", "url": "plugin.NodeMenuNav.html#method__onVerticalMenuKeyDown", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the DOM event.", "type": "method", "description": "\"keydown\" event handler for vertical menus."}, {"name": "_onVisibleChangeOverlayContext", "url": "OverlayContext.html#method__onVisibleChangeOverlayContext", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Fires when the <a href=\"OverlayContext.html#config_visible\">visible</a>\nattribute changes."}, {"name": "_onWrapperMouseEnter", "url": "Resize.html#method__onWrapperMouseEnter", "access": "protected", "host": "Resize", "params": "event <EventFacade> ", "type": "method", "description": "Mouseenter event handler for the <a href=\"Resize.html#config_wrapper\">wrapper</a>."}, {"name": "_onWrapperMouseLeave", "url": "Resize.html#method__onWrapperMouseLeave", "access": "protected", "host": "Resize", "params": "event <EventFacade> ", "type": "method", "description": "Mouseleave event handler for the <a href=\"Resize.html#config_wrapper\">wrapper</a>."}, {"name": "opacity", "url": "OverlayMask.html#config_opacity", "access": "", "host": "OverlayMask", "params": "", "type": "config", "description": "CSS opacity of the mask."}, {"name": "opacity", "url": "Sortable.html#config_opacity", "access": "", "host": "Sortable", "params": "", "type": "config", "description": "The ocpacity to test the proxy item to when dragging."}, {"name": "opacityChange", "url": "OverlayMask.html#event_opacityChange", "access": "", "host": "OverlayMask", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'opacity' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "opacityChange", "url": "Sortable.html#event_opacityChange", "access": "", "host": "Sortable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'opacity' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "opacityNode", "url": "Sortable.html#config_opacityNode", "access": "", "host": "Sortable", "params": "", "type": "config", "description": "The node to set opacity on when dragging (dragNode or currentNode). Default: currentNode."}, {"name": "opacityNodeChange", "url": "Sortable.html#event_opacityNodeChange", "access": "", "host": "Sortable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'opacityNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "opera", "url": "UA.html#property_opera", "access": "", "host": "UA", "params": "", "type": "property", "description": "Opera version number or 0.  Example: 9.2"}, {"name": "operators", "url": "Selector.html#property_operators", "access": "", "host": "Selector", "params": "", "type": "property", "description": "List of operators and corresponding boolean functions. \nThese functions are passed the attribute and the current node's value of the attribute."}, {"name": "orientation", "url": "Toolbar.html#config_orientation", "access": "", "host": "Toolbar", "params": "", "type": "config", "description": "Representing the orientation of the progress bar. Could be\n<code>horizontal</code> or <code>vertical</code>."}, {"name": "orientation", "url": "ProgressBar.html#config_orientation", "access": "", "host": "ProgressBar", "params": "", "type": "config", "description": "Display orientation of the progressbar (i.e. vertical or\nhorizontal)."}, {"name": "orientationChange", "url": "Toolbar.html#event_orientationChange", "access": "", "host": "Toolbar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'orientation' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "orientationChange", "url": "ProgressBar.html#event_orientationChange", "access": "", "host": "ProgressBar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'orientation' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "originalInfo", "url": "Resize.html#property_originalInfo", "access": "protected", "host": "Resize", "params": "", "type": "property", "description": "Stores the original values for the height, width, top and left, stored\non resize start."}, {"name": "os", "url": "UA.html#property_os", "access": "", "host": "UA", "params": "", "type": "property", "description": "The operating system.  Currently only detecting windows or macintosh"}, {"name": "otherDrops", "url": "DD.DDM.html#property_otherDrops", "access": "", "host": "DD.DDM", "params": "", "type": "property", "description": "An object literal of Other Drop Targets that we encountered during this interaction (in the case of overlapping Drop Targets)"}, {"name": "outerHTML", "url": "A.Node.html#method_outerHTML", "access": "", "host": "A.Node", "params": "", "type": "method", "description": "Gets the outerHTML of a node, which islike innerHTML, except that it\nactually contains the HTML of the node itself."}, {"name": "over", "url": "DD.Delegate.html#config_over", "access": "", "host": "DD.Delegate", "params": "", "type": "config", "description": "Is the mouse currently over the container"}, {"name": "overChange", "url": "DD.Delegate.html#event_overChange", "access": "", "host": "DD.Delegate", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'over' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "OverlayContext.ATTRS", "url": "OverlayContext.html#property_OverlayContext.ATTRS", "access": "", "host": "OverlayContext", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the OverlayContext."}, {"name": "OverlayContext.NAME", "url": "OverlayContext.html#property_OverlayContext.NAME", "access": "", "host": "OverlayContext", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "OverlayContextPanel.ATTRS", "url": "OverlayContextPanel.html#property_OverlayContextPanel.ATTRS", "access": "", "host": "OverlayContextPanel", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the OverlayContextPanel."}, {"name": "OverlayContextPanel.NAME", "url": "OverlayContextPanel.html#property_OverlayContextPanel.NAME", "access": "", "host": "OverlayContextPanel", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "OverlayManager.ATTRS", "url": "OverlayManager.html#property_OverlayManager.ATTRS", "access": "", "host": "OverlayManager", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the OverlayManager."}, {"name": "OverlayManager.NAME", "url": "OverlayManager.html#property_OverlayManager.NAME", "access": "", "host": "OverlayManager", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "overlayMask", "url": "LoadingMask.html#property_overlayMask", "access": "protected", "host": "LoadingMask", "params": "", "type": "property", "description": "Stores the <a href=\"OverlayMask.html\">OverlayMask</a> used\ninternally."}, {"name": "OverlayMask.ATTRS", "url": "OverlayMask.html#property_OverlayMask.ATTRS", "access": "", "host": "OverlayMask", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the OverlayMask."}, {"name": "OverlayMask.NAME", "url": "OverlayMask.html#property_OverlayMask.NAME", "access": "", "host": "OverlayMask", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "overTarget", "url": "DD.Drop.html#property_overTarget", "access": "", "host": "DD.Drop", "params": "", "type": "property", "description": "This flag is tripped when a drag element is over this target."}, {"name": "ownerTree", "url": "TreeNode.html#config_ownerTree", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "TreeView which contains the current TreeNode."}, {"name": "ownerTreeChange", "url": "TreeNode.html#event_ownerTreeChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'ownerTree' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "owns", "url": "Object.html#method_owns", "access": "", "host": "Object", "params": "o <any>   The object being testing, p <string>   the property to look for", "type": "method", "description": "Determines whether or not the property was added\nto the object instance.  Returns false if the property is not present\nin the object, or was inherited from the prototype."}, {"name": "ownsKey", "url": "Assert.ObjectAssert.html#method_ownsKey", "access": "", "host": "Assert.ObjectAssert", "params": "propertyName <String>  The name of the property to test., object <Object>  The object to search., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a property with the given name exists on an object instance (not on its prototype)."}, {"name": "ownsKeys", "url": "Assert.ObjectAssert.html#method_ownsKeys", "access": "", "host": "Assert.ObjectAssert", "params": "properties <Array>  An array of property names that should be on the object., object <Object>  The object to search., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that all properties exist on an object instance (not on its prototype)."}, {"name": "ownsNoKeys", "url": "Assert.ObjectAssert.html#method_ownsNoKeys", "access": "", "host": "Assert.ObjectAssert", "params": "object <Object>  The object to check., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that an object owns no properties."}, {"name": "padding", "url": "DD.Drop.html#config_padding", "access": "", "host": "DD.Drop", "params": "", "type": "config", "description": "CSS style padding to make the Drop Target bigger than the node."}, {"name": "paddingChange", "url": "DD.Drop.html#event_paddingChange", "access": "", "host": "DD.Drop", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'padding' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "page", "url": "Paginator.html#config_page", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Page to display on initial paint."}, {"name": "pageChange", "url": "Paginator.html#event_pageChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'page' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "pageContainerTemplate", "url": "Paginator.html#config_pageContainerTemplate", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "HTML Template for the page links container."}, {"name": "pageContainerTemplateChange", "url": "Paginator.html#event_pageContainerTemplateChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'pageContainerTemplate' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "pageLinkContent", "url": "Paginator.html#config_pageLinkContent", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "<p>Function which set the content of the each page element. The passed\nfunction receive as arguments the reference for the page element\nnode, the page number and the index of the page element.</p>\nExample:\n<pre><code>function(pageEl, pageNumber, index) {\npageEl.html(pageNumber);\n}</code></pre>"}, {"name": "pageLinkContentChange", "url": "Paginator.html#event_pageLinkContentChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'pageLinkContent' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "pageLinkTemplate", "url": "Paginator.html#config_pageLinkTemplate", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "HTML Template for the link elements."}, {"name": "pageLinkTemplateChange", "url": "Paginator.html#event_pageLinkTemplateChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'pageLinkTemplate' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "pageReportEl", "url": "Paginator.html#config_pageReportEl", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Node element to display the page report (i.e., (1 of 100))."}, {"name": "pageReportElChange", "url": "Paginator.html#event_pageReportElChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'pageReportEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "pageReportLabelTemplate", "url": "Paginator.html#config_pageReportLabelTemplate", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Template for the\n<a href=\"Paginator.html#config_pageReportEl\">pageReportEl</a> content.\nNote the placeholders for the page {page} and the total pages\n{totalPages}."}, {"name": "pageReportLabelTemplateChange", "url": "Paginator.html#event_pageReportLabelTemplateChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'pageReportLabelTemplate' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "pageX", "url": "DOMEventFacade.html#property_pageX", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "The X location of the event on the page (including scroll)"}, {"name": "pageY", "url": "DOMEventFacade.html#property_pageY", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "The Y location of the event on the page (including scroll)"}, {"name": "paginator", "url": "ImageGallery.html#config_paginator", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "<a href=\"Paginator.html\">Paginator</a> configuration Object. The\n<code>Paginator</code> handles the thumbnails control."}, {"name": "Paginator.ATTRS", "url": "Paginator.html#property_Paginator.ATTRS", "access": "", "host": "Paginator", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the Paginator."}, {"name": "paginatorChange", "url": "ImageGallery.html#event_paginatorChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'paginator' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "paginatorEl", "url": "ImageGallery.html#config_paginatorEl", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "Element which contains the <a href=\"Paginator.html\">Paginator</a>\nwith the thumbnails."}, {"name": "paginatorElChange", "url": "ImageGallery.html#event_paginatorElChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'paginatorEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "paginatorInstance", "url": "ImageGallery.html#config_paginatorInstance", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "Stores the <a href=\"Paginator.html\">Paginator</a> instance."}, {"name": "paginatorInstanceChange", "url": "ImageGallery.html#event_paginatorInstanceChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'paginatorInstance' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Paginator.NAME", "url": "Paginator.html#property_Paginator.NAME", "access": "", "host": "Paginator", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "Panel.ATTRS", "url": "Panel.html#property_Panel.ATTRS", "access": "", "host": "Panel", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the Panel."}, {"name": "panelNode", "url": "Tab.html#config_panelNode", "access": "", "host": "Tab", "params": "", "type": "config", "description": ""}, {"name": "panelNodeChange", "url": "Tab.html#event_panelNodeChange", "access": "", "host": "Tab", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'panelNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "parentNode", "url": "TreeNode.html#config_parentNode", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Parent node of the current TreeNode."}, {"name": "PARENT_NODE", "url": "Selector.html#property_PARENT_NODE", "access": "", "host": "Selector", "params": "", "type": "property", "description": "Provides helper methods for collecting and filtering DOM elements."}, {"name": "parentNodeChange", "url": "TreeNode.html#event_parentNodeChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'parentNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "parentScroll", "url": "DD.Scroll.html#config_parentScroll", "access": "", "host": "DD.Scroll", "params": "", "type": "config", "description": "Internal config option to hold the node that we are scrolling. Should not be set by the developer."}, {"name": "parentScrollChange", "url": "DD.Scroll.html#event_parentScrollChange", "access": "", "host": "DD.Scroll", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'parentScroll' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "parse", "url": "DataType.Boolean.html#method_parse", "access": "", "host": "DataType.Boolean", "params": "data <*>  falsey or non-falsey values (i.e., falsey values: null, false, undefined, NaN; non-falsey values: 1, true, 'abc').", "type": "method", "description": "Parses any <code>falsey</code> value to <code>false</code> and\n<code>non-falsey</code> to <code>true</code>."}, {"name": "parse", "url": "JSON.html#method_parse", "access": "", "host": "JSON", "params": "s <string>   JSON string data, reviver <function>   (optional) function(k,v) passed each key value\npair of object literals, allowing pruning or altering values", "type": "method", "description": "Parse a JSON string, returning the native JavaScript representation."}, {"name": "parse", "url": "DataSchema.Base.html#method_parse", "access": "", "host": "DataSchema.Base", "params": "value <Object>   Original value., field <Object>   Field.", "type": "method", "description": "Applies field parser, if defined"}, {"name": "parse", "url": "DataType.Date.html#method_parse", "access": "", "host": "DataType.Date", "params": "data <String | Number>   Data to convert. Values supported by the Date constructor are supported.", "type": "method", "description": "Converts data to type Date."}, {"name": "parse", "url": "DataType.Number.html#method_parse", "access": "", "host": "DataType.Number", "params": "data <String | Number | Boolean>   Data to convert. The following\nvalues return as null: null, undefined, NaN, \"\".", "type": "method", "description": "Converts data to type Number."}, {"name": "parse", "url": "DataType.XML.html#method_parse", "access": "", "host": "DataType.XML", "params": "data <String>   Data to convert.", "type": "method", "description": "Converts data to type XMLDocument."}, {"name": "parseContent", "url": "ParseContent.html#method_parseContent", "access": "", "host": "ParseContent", "params": "content <String>  HTML string", "type": "method", "description": "Extract the <code>script</code> tags from the string content and\nevaluate the chunks."}, {"name": "parseContent", "url": "A.Plugin.IO.html#config_parseContent", "access": "", "host": "A.Plugin.IO", "params": "", "type": "config", "description": "If true the <a href=\"ParseContent.html\">ParseContent</a> plugin\nwill be plugged to the <a href=\"A.Plugin.IO.html#config_node\">node</a>."}, {"name": "ParseContent.ATTRS", "url": "ParseContent.html#property_ParseContent.ATTRS", "access": "", "host": "ParseContent", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the ParseContent."}, {"name": "parseContentChange", "url": "A.Plugin.IO.html#event_parseContentChange", "access": "", "host": "A.Plugin.IO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'parseContent' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "ParseContent.NAME", "url": "ParseContent.html#property_ParseContent.NAME", "access": "", "host": "ParseContent", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "ParseContent.NS", "url": "ParseContent.html#property_ParseContent.NS", "access": "", "host": "ParseContent", "params": "", "type": "property", "description": "Static property provides a string to identify the namespace."}, {"name": "parseDate", "url": "Calendar.html#method_parseDate", "access": "", "host": "Calendar", "params": "dateString <String> ", "type": "method", "description": "Parse a string to a Date object."}, {"name": "_parseField", "url": "DataSchema.XML.html#method__parseField", "access": "protected", "host": "DataSchema.XML", "params": "field <String | Object>   Required. Field definition., result <Object>   Required. Schema parsed data object., context <Object>   Required. XML node or document to search within.", "type": "method", "description": "Schema-parsed result field."}, {"name": "_parseInputElements", "url": "Rating.html#method__parseInputElements", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Parse the HTML radio elements from the markup to be Rating elements."}, {"name": "_parseMeta", "url": "DataSchema.JSON.html#method__parseMeta", "access": "protected", "host": "DataSchema.JSON", "params": "metaFields <Object>   Metafields definitions., json_in <Object>   JSON to parse., data_out <Object>   In-progress parsed data to update.", "type": "method", "description": "Parses results data according to schema"}, {"name": "_parseMeta", "url": "DataSchema.XML.html#method__parseMeta", "access": "protected", "host": "DataSchema.XML", "params": "xmldoc_in <Object>   XML document parse., data_out <Object>   In-progress schema-parsed data to update.", "type": "method", "description": "Parses results data according to schema"}, {"name": "_parseResult", "url": "DataSchema.XML.html#method__parseResult", "access": "protected", "host": "DataSchema.XML", "params": "fields <Array>   Required. A collection of field definition., context <Object>   Required. XML node or document to search within.", "type": "method", "description": "Schema-parsed result to add to results list."}, {"name": "_parseResults", "url": "DataSchema.Array.html#method__parseResults", "access": "protected", "host": "DataSchema.Array", "params": "fields <Array>   Schema to parse against., array_in <Array>   Array to parse., data_out <Object>   In-progress parsed data to update.", "type": "method", "description": "Schema-parsed list of results from full data"}, {"name": "_parseResults", "url": "DataSchema.JSON.html#method__parseResults", "access": "protected", "host": "DataSchema.JSON", "params": "schema <Object>   Schema to parse against., json_in <Object>   JSON to parse., data_out <Object>   In-progress parsed data to update.", "type": "method", "description": "Schema-parsed list of results from full data"}, {"name": "_parseResults", "url": "DataSchema.XML.html#method__parseResults", "access": "protected", "host": "DataSchema.XML", "params": "schema <Object>   Schema to parse against., context <Object>   XML node document parse., data_out <Object>   In-progress schema-parsed data to update.", "type": "method", "description": "Schema-parsed list of results from full data"}, {"name": "_parseResults", "url": "DataSchema.Text.html#method__parseResults", "access": "protected", "host": "DataSchema.Text", "params": "schema <Array>   Schema to parse against., text_in <String>   Text to parse., data_out <Object>   In-progress parsed data to update.", "type": "method", "description": "Schema-parsed list of results from full data"}, {"name": "_parseURL", "url": "IORequest.html#method__parseURL", "access": "protected", "host": "IORequest", "params": "url <String> ", "type": "method", "description": "Parse the <a href=\"IORequest.html#config_uri\">uri</a> to add a\ntimestamp if <a href=\"IORequest.html#config_cache\">cache</a> is\n<code>true</code>. Also applies the\n<code>YUI.AUI.defaults.io.uriFormatter</code>."}, {"name": "pass", "url": "Test.Runner.html#event_pass", "access": "", "host": "Test.Runner", "params": "", "type": "event", "description": "Fires when a test has passed."}, {"name": "patterns", "url": "Loader.html#property_patterns", "access": "", "host": "Loader", "params": "", "type": "property", "description": "If a module name is predefined when requested, it is checked againsts\nthe patterns provided in this property.  If there is a match, the\nmodule is added with the default configuration.\nAt the moment only supporting module prefixes, but anticipate supporting\nat least regular expressions."}, {"name": "pause", "url": "AsyncQueue.html#method_pause", "access": "", "host": "AsyncQueue", "params": "", "type": "method", "description": "Pause the execution of the queue after the execution of the current\ncallback completes.  If called from code outside of a queued callback,\nclears the timeout for the pending callback. Paused queue can be\nrestarted with q.run()"}, {"name": "pause", "url": "Profiler.html#method_pause", "access": "", "host": "Profiler", "params": "name <String>  The name of the data point.", "type": "method", "description": "Pauses profiling information for a given name."}, {"name": "pause", "url": "Anim.html#method_pause", "access": "", "host": "Anim", "params": "", "type": "method", "description": "Pauses all animation instances."}, {"name": "pause", "url": "Anim.html#event_pause", "access": "", "host": "Anim", "params": "ev <Event>  The pause event.", "type": "event", "description": "fires when an animation is paused."}, {"name": "pause", "url": "ImageGallery.html#method_pause", "access": "", "host": "ImageGallery", "params": "", "type": "method", "description": "Pause the slide show."}, {"name": "paused", "url": "Anim.html#config_paused", "access": "", "host": "Anim", "params": "", "type": "config", "description": "Whether or not the animation is currently paused."}, {"name": "paused", "url": "ImageGallery.html#config_paused", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "If <code>true</code> the slide show is paused."}, {"name": "paused", "url": "Console.html#config_paused", "access": "", "host": "Console", "params": "", "type": "config", "description": "Boolean to pause the outputting of new messages to the console.\nWhen paused, messages will accumulate in the buffer."}, {"name": "paused", "url": "Plugin.Console.html#config_paused", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Boolean to pause the outputting of new messages to the console.\nWhen paused, messages will accumulate in the buffer."}, {"name": "pausedChange", "url": "Anim.html#event_pausedChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'paused' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "pausedChange", "url": "ImageGallery.html#event_pausedChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'paused' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "pausedChange", "url": "Console.html#event_pausedChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'paused' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "pausedChange", "url": "Plugin.Console.html#event_pausedChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'paused' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "pausedLabel", "url": "ImageGallery.html#config_pausedLabel", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "Label to display when the slide show is paused."}, {"name": "pausedLabelChange", "url": "ImageGallery.html#event_pausedLabelChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'pausedLabel' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "placeAfter", "url": "A.Node.html#method_placeAfter", "access": "", "host": "A.Node", "params": "newNode <Node>  Node to insert.", "type": "method", "description": "<p>Inserts a <code>newNode</code> after the node instance (i.e., as the next\nsibling). If the reference node has no parent, then does nothing.</p>\nExample:\n<pre><code>var titleNode = A.one('#titleNode');\nvar descriptionNode = A.one('#descriptionNode');\n// the description is usually shown after the title\ntitleNode.placeAfter(descriptionNode);\n</code></pre>"}, {"name": "placeBefore", "url": "A.Node.html#method_placeBefore", "access": "", "host": "A.Node", "params": "newNode <Node>  Node to insert.", "type": "method", "description": "<p>Inserts a <code>newNode</code> before the node instance (i.e., as the previous\nsibling). If the reference node has no parent, then does nothing.</p>\nExample:\n<pre><code>var descriptionNode = A.one('#descriptionNode');\nvar titleNode = A.one('#titleNode');\n// the title is usually shown before the description\ndescriptionNode.placeBefore(titleNode);\n</code></pre>"}, {"name": "play", "url": "ImageGallery.html#method_play", "access": "", "host": "ImageGallery", "params": "", "type": "method", "description": "Play the slide show."}, {"name": "playing", "url": "ImageGallery.html#config_playing", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "If <code>true</code> the slide show is playing."}, {"name": "playingChange", "url": "ImageGallery.html#event_playingChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'playing' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "playingLabel", "url": "ImageGallery.html#config_playingLabel", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "Label to display when the slide show is playing."}, {"name": "playingLabelChange", "url": "ImageGallery.html#event_playingLabelChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'playingLabel' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "plug", "url": "Plugin.Host.html#method_plug", "access": "", "host": "Plugin.Host", "params": "p <Function | Object |Array>   Accepts the plugin class, or an \nobject with a \"fn\" property specifying the plugin class and \na \"cfg\" property specifying the configuration for the Plugin.\n<p>\nAdditionally an Array can also be passed in, with the above function or \nobject values, allowing the user to add multiple plugins in a single call.\n</p>, config <Object>  (Optional) If the first argument is the plugin class, the second argument\ncan be the configuration for the plugin.", "type": "method", "description": "Adds a plugin to the host object. This will instantiate the \nplugin and attach it to the configured namespace on the host object."}, {"name": "plug", "url": "Sortable.html#method_plug", "access": "", "host": "Sortable", "params": "Class <Object>  cls The class to plug, Object <Object>  config The class config", "type": "method", "description": "Passthrough to the DD.Delegate.ddplug method"}, {"name": "Plugin.Base.ATTRS", "url": "Plugin.Base.html#property_Plugin.Base.ATTRS", "access": "", "host": "Plugin.Base", "params": "", "type": "property", "description": "Object defining the set of attributes supported by the Plugin.Base class"}, {"name": "Plugin.Base.NAME", "url": "Plugin.Base.html#property_Plugin.Base.NAME", "access": "", "host": "Plugin.Base", "params": "", "type": "property", "description": "The string identifying the Plugin.Base class. Plugins extending\nPlugin.Base should set their own NAME value."}, {"name": "Plugin.Host.plug", "url": "Plugin.Host.html#method_Plugin.Host.plug", "access": "", "host": "Plugin.Host", "params": "hostClass <Function>  The host class on which to register the plugins, plugin <Function | Array>  Either the plugin class, an array of plugin classes or an array of objects (with fn and cfg properties defined), config <Object>  (Optional) If plugin is the plugin class, the configuration for the plugin", "type": "method", "description": "Registers plugins to be instantiated at the class level (plugins \nwhich should be plugged into every instance of the class by default)."}, {"name": "Plugin.Host.unplug", "url": "Plugin.Host.html#method_Plugin.Host.unplug", "access": "", "host": "Plugin.Host", "params": "hostClass <Function>  The host class from which to unregister the plugins, plugin <Function | Array>  The plugin class, or an array of plugin classes", "type": "method", "description": "Unregisters any class level plugins which have been registered by the host class, or any\nother class in the hierarchy."}, {"name": "Plugin.NS", "url": "Plugin.Base.html#property_Plugin.NS", "access": "", "host": "Plugin.Base", "params": "", "type": "property", "description": "The name of the property the the plugin will be attached to\nwhen plugged into a Plugin Host. Plugins extending Plugin.Base,\nshould set their own NS value."}, {"name": "POLL_INTERVAL", "url": "Event.html#property_POLL_INTERVAL", "access": "", "host": "Event", "params": "", "type": "property", "description": "The poll interval in milliseconds"}, {"name": "pollInterval", "url": "config.html#property_pollInterval", "access": "", "host": "config", "params": "", "type": "property", "description": "The default interval when polling in milliseconds."}, {"name": "POLL_RETRYS", "url": "Event.html#property_POLL_RETRYS", "access": "", "host": "Event", "params": "", "type": "property", "description": "The number of times we should look for elements that are not\nin the DOM at the time the event is requested after the document\nhas been loaded.  The default is 1000@amp;40 ms, so it will poll\nfor 40 seconds or until all outstanding handlers are bound\n(whichever comes first)."}, {"name": "populateDay", "url": "DatePickerSelect.html#config_populateDay", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "If true the select element for the days will be automatic\npopulated."}, {"name": "populateDayChange", "url": "DatePickerSelect.html#event_populateDayChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'populateDay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_populateDays", "url": "DatePickerSelect.html#method__populateDays", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Populate the day select element with the correct data."}, {"name": "_populateList", "url": "AutoComplete.html#method__populateList", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Populates the container with list items of the query results."}, {"name": "populateMonth", "url": "DatePickerSelect.html#config_populateMonth", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "If true the select element for the month will be automatic\npopulated."}, {"name": "populateMonthChange", "url": "DatePickerSelect.html#event_populateMonthChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'populateMonth' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_populateMonths", "url": "DatePickerSelect.html#method__populateMonths", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Populate the month select element with the correct data."}, {"name": "_populateSelect", "url": "DatePickerSelect.html#method__populateSelect", "access": "protected", "host": "DatePickerSelect", "params": "select <HTMLSelectElement>  Select to be populated, fromIndex <Number>  Index to start, toIndex <Number>  Index to end, values <Object>  Object with labels to be used as content of each\noption. Optional.", "type": "method", "description": "Populate a select element with the data passed on the params."}, {"name": "populateYear", "url": "DatePickerSelect.html#config_populateYear", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "If true the select element for the year will be automatic\npopulated."}, {"name": "populateYearChange", "url": "DatePickerSelect.html#event_populateYearChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'populateYear' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_populateYears", "url": "DatePickerSelect.html#method__populateYears", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Populate the year select element with the correct data."}, {"name": "PortalLayout.ATTRS", "url": "PortalLayout.html#property_PortalLayout.ATTRS", "access": "", "host": "PortalLayout", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the PortalLayout."}, {"name": "PortalLayout.NAME", "url": "PortalLayout.html#property_PortalLayout.NAME", "access": "", "host": "PortalLayout", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "positionProxy", "url": "Plugin.DDProxy.html#config_positionProxy", "access": "", "host": "Plugin.DDProxy", "params": "", "type": "config", "description": "Make the Proxy node appear in the same place as the original node. Default: true"}, {"name": "positionProxyChange", "url": "Plugin.DDProxy.html#event_positionProxyChange", "access": "", "host": "Plugin.DDProxy", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'positionProxy' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_preInitEventCfg", "url": "Base.html#method__preInitEventCfg", "access": "", "host": "Base", "params": "config <Object>  The user configuration object", "type": "method", "description": "Handles the special on, after and target properties which allow the user to\neasily configure on and after listeners as well as bubble targets during \nconstruction, prior to init."}, {"name": "preloadAllImages", "url": "ImageViewer.html#method_preloadAllImages", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Preload all images."}, {"name": "preloadAllImages", "url": "ImageViewer.html#config_preloadAllImages", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "Preload all images grabbed from the <a\nhref=\"ImageViewer.html#config_links\">links</a> attribute."}, {"name": "preloadAllImagesChange", "url": "ImageViewer.html#event_preloadAllImagesChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'preloadAllImages' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "preloadImage", "url": "ImageViewer.html#method_preloadImage", "access": "", "host": "ImageViewer", "params": "currentIndex <Number> ", "type": "method", "description": "Preload an image based on its <code>index</code>."}, {"name": "_prepare", "url": "AsyncQueue.html#method__prepare", "access": "protected", "host": "AsyncQueue", "params": "callback <Object|Function>   the raw callback", "type": "method", "description": "Creates a wrapper function to execute the callback using the aggregated \nconfiguration generated by combining the static AsyncQueue.defaults, the\ninstance defaults, and the specified callback settings.\nThe wrapper function is decorated with the callback configuration as\nproperties for runtime modification."}, {"name": "prepend", "url": "Node.html#method_prepend", "access": "", "host": "Node", "params": "content <String | Y.Node | HTMLElement>  The content to insert", "type": "method", "description": "Inserts the content as the firstChild of the node."}, {"name": "prepend", "url": "NodeList.html#method_prepend", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Called on each Node instance"}, {"name": "prependTo", "url": "A.Node.html#method_prependTo", "access": "", "host": "A.Node", "params": "selector <Node | String>  A selector, element, HTML string, Node", "type": "method", "description": "<p>Inserts the node instance to the begining of the <code>selector</code>\nnode (i.e., insert before the <code>firstChild</code> of the\n<code>selector</code>).</p>\nExample:\n<pre><code>var node = A.one('#nodeId');\nnode.prependTo('body');\n</code></pre>"}, {"name": "preserveRatio", "url": "Resize.html#config_preserveRatio", "access": "", "host": "Resize", "params": "", "type": "config", "description": "Maintain the element's ratio when resizing."}, {"name": "preserveRatioChange", "url": "Resize.html#event_preserveRatioChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'preserveRatio' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "preventable", "url": "CustomEvent.html#property_preventable", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "Specifies whether or not this event's default function\ncan be cancelled by a subscriber by executing preventDefault() \non the event facade"}, {"name": "preventDefault", "url": "DOMEventFacade.html#method_preventDefault", "access": "", "host": "DOMEventFacade", "params": "returnValue <string>   sets the returnValue of the event to this value\n(rather than the default false value).  This can be used to add a customized \nconfirmation query to the beforeunload event).", "type": "method", "description": "Prevents the event's default behavior"}, {"name": "preventDefault", "url": "YUI.html#method_preventDefault", "access": "", "host": "YUI", "params": "ev <Event>  the event", "type": "method", "description": "Prevents the default behavior of the event"}, {"name": "preventDefault", "url": "CustomEvent.html#method_preventDefault", "access": "", "host": "CustomEvent", "params": "", "type": "method", "description": "Prevents the execution of this event's defaultFn"}, {"name": "preventDefault", "url": "EventFacade.html#method_preventDefault", "access": "", "host": "EventFacade", "params": "", "type": "method", "description": "Prevents the event's default behavior"}, {"name": "prevented", "url": "CustomEvent.html#property_prevented", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "Flag for preventDefault that is modified during fire().\nif it is not 0, the default behavior for this event"}, {"name": "preventedFn", "url": "CustomEvent.html#property_preventedFn", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "The function to execute if a subscriber calls\npreventDefault"}, {"name": "_preventOverlap", "url": "WidgetPositionConstrain.html#method__preventOverlap", "access": "protected", "host": "WidgetPositionConstrain", "params": "val <Number>  The value being constrain, axis <String>  The axis to being constrained, nodeRegion <Region>  The region of the node being constrained, constrainingRegion <Region>  The region of the node (or viewport) we need to constrain to", "type": "method", "description": "The method which performs the preventOverlap calculations for a given axis (\"x\" or \"y\") based\non the value and regions provided."}, {"name": "preventOverlap", "url": "WidgetPositionConstrain.html#config_preventOverlap", "access": "", "host": "WidgetPositionConstrain", "params": "", "type": "config", "description": "If set to true, and WidgetPositionAlign is also added to the Widget, \nconstrained positioning will attempt to prevent the widget's bounding box from overlapping \nthe element to which it has been aligned, by flipping the orientation of the alignment\nfor corner based alignments"}, {"name": "preventOverlapChange", "url": "WidgetPositionConstrain.html#event_preventOverlapChange", "access": "", "host": "WidgetPositionConstrain", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'preventOverlap' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_preventScroll", "url": "plugin.NodeFocusManager.html#method__preventScroll", "access": "protected", "host": "plugin.NodeFocusManager", "params": "", "type": "method", "description": "Prevents the viewport from scolling when the user presses \nthe up, down, left, or right key."}, {"name": "previous", "url": "Node.html#method_previous", "access": "", "host": "Node", "params": "fn <String | Function>  A selector or boolean method for testing elements.\nIf a function is used, it receives the current node being tested as the only argument.", "type": "method", "description": "Returns the previous matching sibling. \nReturns the nearest element node sibling if no method provided."}, {"name": "prevPageLink", "url": "Paginator.html#config_prevPageLink", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The <a href=\"Node.html\">Node</a> or template to be used as the\nprev link element."}, {"name": "prevPageLinkChange", "url": "Paginator.html#event_prevPageLinkChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'prevPageLink' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "prevPageLinkLabel", "url": "Paginator.html#config_prevPageLinkLabel", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The label used as content of the\n<a href=\"Paginator.html#config_prevPageLink\">prevPageLink</a> element."}, {"name": "prevPageLinkLabelChange", "url": "Paginator.html#event_prevPageLinkLabelChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'prevPageLinkLabel' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "prevSibling", "url": "TreeNode.html#config_prevSibling", "access": "", "host": "TreeNode", "params": "", "type": "config", "description": "Previous sibling of the current TreeNode."}, {"name": "prevSiblingChange", "url": "TreeNode.html#event_prevSiblingChange", "access": "", "host": "TreeNode", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'prevSibling' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "primaryButtonOnly", "url": "DD.Drag.html#config_primaryButtonOnly", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "By default a drag operation will only begin if the mousedown occurred with the primary mouse button. Setting this to false will allow for all mousedown events to trigger a drag."}, {"name": "primaryButtonOnlyChange", "url": "DD.Drag.html#event_primaryButtonOnlyChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'primaryButtonOnly' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "printBuffer", "url": "Console.html#method_printBuffer", "access": "", "host": "Console", "params": "limit <Number>   (optional) max number of buffered entries to write", "type": "method", "description": "Outputs buffered messages to the console UI.  This is typically called\nfrom a scheduled interval until the buffer is empty (referred to as the\nprint loop).  The number of buffered messages output to the Console is\nlimited to the number provided as an argument.  If no limit is passed,\nall buffered messages are rendered."}, {"name": "printBuffer", "url": "Plugin.Console.html#method_printBuffer", "access": "", "host": "Plugin.Console", "params": "limit <Number>   (optional) max number of buffered entries to write", "type": "method", "description": "Outputs buffered messages to the console UI.  This is typically called\nfrom a scheduled interval until the buffer is empty (referred to as the\nprint loop).  The number of buffered messages output to the Console is\nlimited to the number provided as an argument.  If no limit is passed,\nall buffered messages are rendered."}, {"name": "printLimit", "url": "Console.html#config_printLimit", "access": "", "host": "Console", "params": "", "type": "config", "description": "Maximum number of entries printed in each iteration of the print\nloop. This is used to prevent excessive logging locking the page UI."}, {"name": "printLimit", "url": "Plugin.Console.html#config_printLimit", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Maximum number of entries printed in each iteration of the print\nloop. This is used to prevent excessive logging locking the page UI."}, {"name": "printLimitChange", "url": "Console.html#event_printLimitChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'printLimit' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "printLimitChange", "url": "Plugin.Console.html#event_printLimitChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'printLimit' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_printLoop", "url": "Console.html#property__printLoop", "access": "protected", "host": "Console", "params": "", "type": "property", "description": "Holds the object API returned from <code>Y.later</code> for the print\nloop interval."}, {"name": "_printLoop", "url": "Plugin.Console.html#property__printLoop", "access": "protected", "host": "Plugin.Console", "params": "", "type": "property", "description": "Holds the object API returned from <code>Y.later</code> for the print\nloop interval."}, {"name": "printTimeout", "url": "Console.html#config_printTimeout", "access": "", "host": "Console", "params": "", "type": "config", "description": "Millisecond timeout between iterations of the print loop, moving\nentries from the buffer to the UI."}, {"name": "printTimeout", "url": "Plugin.Console.html#config_printTimeout", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Millisecond timeout between iterations of the print loop, moving\nentries from the buffer to the UI."}, {"name": "printTimeoutChange", "url": "Console.html#event_printTimeoutChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'printTimeout' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "printTimeoutChange", "url": "Plugin.Console.html#event_printTimeoutChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'printTimeout' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_processArgs", "url": "SyntheticEvent.html#method__processArgs", "access": "protected", "host": "SyntheticEvent", "params": "args <Array>   Array of arguments passed to <code>on</code>", "type": "method", "description": "Stub implementation.  Specify this in the configuration object passed to \nthe constructor (rather, passed to <code>Y.Event.define</code>)."}, {"name": "ProgressBar.ATTRS", "url": "ProgressBar.html#property_ProgressBar.ATTRS", "access": "", "host": "ProgressBar", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the ProgressBar."}, {"name": "ProgressBar.HTML_PARSER", "url": "ProgressBar.html#property_ProgressBar.HTML_PARSER", "access": "", "host": "ProgressBar", "params": "", "type": "property", "description": "Object hash, defining how attribute values are to be parsed from\nmarkup contained in the widget's content box."}, {"name": "ProgressBar.NAME", "url": "ProgressBar.html#property_ProgressBar.NAME", "access": "", "host": "ProgressBar", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "promote", "url": "AsyncQueue.html#method_promote", "access": "", "host": "AsyncQueue", "params": "callback <String|Object>   the callback object or a callback's id", "type": "method", "description": "Promotes the named callback to the top of the queue. If a callback is\ncurrently executing or looping (via until or iterations), the promotion\nis scheduled to occur after the current callback has completed."}, {"name": "promote", "url": "io.html#method_promote", "access": "", "host": "io", "params": "o <Object>  - Reference to queued transaction.", "type": "method", "description": "Method for promoting a transaction to the top of the queue.\nThis is the interface for _unshift()."}, {"name": "promote", "url": "Queue.html#method_promote", "access": "", "host": "Queue", "params": "item <MIXED>   an item in the queue", "type": "method", "description": "Moves the referenced item to the head of the queue"}, {"name": "_protectAttrs", "url": "Attribute.html#method__protectAttrs", "access": "protected", "host": "Attribute", "params": "attrs <Object>  A hash of attribute to configuration object pairs.", "type": "method", "description": "Utility method to protect an attribute configuration\nhash, by merging the entire object and the individual \nattr config objects."}, {"name": "proxy", "url": "Resize.html#config_proxy", "access": "", "host": "Resize", "params": "", "type": "config", "description": "Resize a proxy element instead of the real element."}, {"name": "proxyChange", "url": "Resize.html#event_proxyChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'proxy' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "proxyEl", "url": "Resize.html#config_proxyEl", "access": "", "host": "Resize", "params": "", "type": "config", "description": "The Resize proxy element."}, {"name": "proxyElChange", "url": "Resize.html#event_proxyElChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'proxyEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "publish", "url": "EventTarget.html#method_publish", "access": "", "host": "EventTarget", "params": "type <string>   the type, or name of the event, opts <object>   optional config params.  Valid properties are:\n<ul>\n<li>\n'broadcast': whether or not the YUI instance and YUI global are notified when the event is fired (false)\n</li>\n<li>\n'bubbles': whether or not this event bubbles (true)\nEvents can only bubble if emitFacade is true.\n</li>\n<li>\n'context': the default execution context for the listeners (this)\n</li>\n<li>\n'defaultFn': the default function to execute when this event fires if preventDefault was not called\n</li>\n<li>\n'emitFacade': whether or not this event emits a facade (false)\n</li>\n<li>\n'prefix': the prefix for this targets events, e.g., 'menu' in 'menu:click' \n</li>\n<li>\n'fireOnce': if an event is configured to fire once, new subscribers after\nthe fire will be notified immediately.\n</li>\n<li>\n'preventable': whether or not preventDefault() has an effect (true)\n</li>\n<li>\n'preventedFn': a function that is executed when preventDefault is called\n</li>\n<li>\n'queuable': whether or not this event can be queued during bubbling (false)\n</li>\n<li>\n'silent': if silent is true, debug messages are not provided for this event.\n</li>\n<li>\n'stoppedFn': a function that is executed when stopPropagation is called\n</li>\n<li>\n'monitored': specifies whether or not this event should send notifications about\nwhen the event has been attached, detached, or published.\n</li>\n<li>\n'type': the event type (valid option if not provided as the first parameter to publish)\n</li>\n</ul>", "type": "method", "description": "Creates a new custom event of the specified type.  If a custom event\nby that name already exists, it will not be re-created.  In either\ncase the custom event is returned."}, {"name": "_pupulateSelects", "url": "DatePickerSelect.html#method__pupulateSelects", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Populate each select element with the correct data for the day, month\nand year."}, {"name": "purge", "url": "Node.html#method_purge", "access": "", "host": "Node", "params": "recurse <Boolean>  (optional) Whether or not to remove listeners from the\nnode's subtree, type <String>  (optional) Only remove listeners of the specified type", "type": "method", "description": "Removes event listeners from the node and (optionally) its subtree"}, {"name": "purgeElement", "url": "Event.html#method_purgeElement", "access": "", "host": "Event", "params": "el <HTMLElement>  the element to purge, recurse <boolean>  recursively purge this element's children\nas well.  Use with caution., type <string>  optional type of listener to purge. If\nleft out, all listeners will be removed", "type": "method", "description": "Removes all listeners attached to the given element via addListener.\nOptionally, the node's children can also be purged.\nOptionally, you can specify a specific type of event to remove."}, {"name": "purgethreshold", "url": "config.html#property_purgethreshold", "access": "", "host": "config", "params": "", "type": "property", "description": "The number of dynamic nodes to insert by default before\nautomatically removing them.  This applies to script nodes\nbecause remove the node will not make the evaluated script\nunavailable.  Dynamic CSS is not auto purged, because removing\na linked style sheet will also remove the style definitions."}, {"name": "_q", "url": "Queue.html#property__q", "access": "protected", "host": "Queue", "params": "", "type": "property", "description": "The collection of enqueued items"}, {"name": "query", "url": "Node.html#method_query", "access": "", "host": "Node", "params": "selector <string>  The CSS selector to test against.", "type": "method", "description": "Retrieves a Node instance of nodes based on the given CSS selector."}, {"name": "query", "url": "LiveSearch.html#property_query", "access": "protected", "host": "LiveSearch", "params": "", "type": "property", "description": "Stores the query value."}, {"name": "query", "url": "Selector.html#method_query", "access": "", "host": "Selector", "params": "selector <string>  The CSS Selector to test the node against., root <HTMLElement>  optional An HTMLElement to start the query from. Defaults to Y.config.doc, firstOnly <Boolean>  optional Whether or not to return only the first match.", "type": "method", "description": "Retrieves a set of nodes based on a given CSS selector."}, {"name": "queryAll", "url": "Node.html#method_queryAll", "access": "", "host": "Node", "params": "selector <string>  The CSS selector to test against.", "type": "method", "description": "Retrieves a nodeList based on the given CSS selector."}, {"name": "queryDelay", "url": "AutoComplete.html#config_queryDelay", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "The amount of time in seconds to delay before submitting the query."}, {"name": "queryDelayChange", "url": "AutoComplete.html#event_queryDelayChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'queryDelay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "queryInterval", "url": "AutoComplete.html#config_queryInterval", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "When IME usage is detected or interval detection is explicitly enabled,\nAutoComplete will detect the input value at the given interval and send a\nquery if the value has changed."}, {"name": "queryIntervalChange", "url": "AutoComplete.html#event_queryIntervalChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'queryInterval' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "queryMatchCase", "url": "AutoComplete.html#config_queryMatchCase", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "When <a href=\"AutoComplete.html#config_applyLocalFilter\">applyLocalFilter</a> is true,\nsetting this to true will match only results with the same case."}, {"name": "queryMatchCaseChange", "url": "AutoComplete.html#event_queryMatchCaseChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'queryMatchCase' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "queryMatchContains", "url": "AutoComplete.html#config_queryMatchContains", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "When <a href=\"AutoComplete.html#config_applyLocalFilter\">applyLocalFilter</a> is true,\nsetting this to true will match results which contain the query anywhere in the text,\ninstead of just matching just items that start with the query."}, {"name": "queryMatchContainsChange", "url": "AutoComplete.html#event_queryMatchContainsChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'queryMatchContains' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "queryQuestionMark", "url": "AutoComplete.html#config_queryQuestionMark", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "For IO DataSources, AutoComplete will automatically insert a \"?\" between the server URI and \nthe encoded query string. To prevent this behavior, you can\nset this value to false. If you need to customize this even further, you\ncan override the <a href=\"AutoComplete.html#method_generateRequest\">generateRequest</a> method."}, {"name": "queryQuestionMarkChange", "url": "AutoComplete.html#event_queryQuestionMarkChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'queryQuestionMark' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "queuable", "url": "CustomEvent.html#property_queuable", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "Specifies whether this event should be queued when the host is actively\nprocessing an event.  This will effect exectution order of the callbacks\nfor the various events."}, {"name": "radioClass", "url": "A.Node.html#method_radioClass", "access": "", "host": "A.Node", "params": "cssClass <String> ", "type": "method", "description": "Add one or more CSS classes to an element and remove the class(es)\nfrom the siblings of the element."}, {"name": "rail", "url": "SliderBase.html#property_rail", "access": "", "host": "SliderBase", "params": "", "type": "property", "description": "The Node instance of the Slider's rail element.  Do not write to\nthis property."}, {"name": "railMouseDown", "url": "ClickableRail.html#event_railMouseDown", "access": "", "host": "ClickableRail", "params": "", "type": "event", "description": "Broadcasts when the rail has received a mousedown event and\ntriggers the thumb positioning.  Use\n<code>e.preventDefault()</code> or\n<code>set(&quot;clickableRail&quot;, false)</code> to prevent\nthe thumb positioning."}, {"name": "RAIL_TEMPLATE", "url": "SliderBase.html#property_RAIL_TEMPLATE", "access": "", "host": "SliderBase", "params": "", "type": "property", "description": "Rail template that will contain the end caps and the thumb.\n{placeholder}s are used for template substitution at render time."}, {"name": "Rating.ATTRS", "url": "Rating.html#property_Rating.ATTRS", "access": "", "host": "Rating", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the Rating."}, {"name": "Rating.NAME", "url": "Rating.html#property_Rating.NAME", "access": "", "host": "Rating", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "ratio", "url": "ProgressBar.html#config_ratio", "access": "", "host": "ProgressBar", "params": "", "type": "config", "description": "Calculate the ratio based on <code>max</code> and\n<code>min</code> values."}, {"name": "ratioChange", "url": "ProgressBar.html#event_ratioChange", "access": "", "host": "ProgressBar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'ratio' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "rbind", "url": "YUI~oop.html#method_rbind", "access": "", "host": "YUI~oop", "params": "f <Function|String>   the function to bind, or a function name\nto execute on the context object, c <Object>  the execution context, args* <Object>  0..n arguments to append to the end of arguments collection\nsupplied to the function", "type": "method", "description": "Returns a function that will execute the supplied function in the\nsupplied object's context, optionally adding any additional\nsupplied parameters to the end of the arguments the function\nis executed with."}, {"name": "_realignContainer", "url": "AutoComplete.html#method__realignContainer", "access": "protected", "host": "AutoComplete", "params": "event <EventFacade> ", "type": "method", "description": "Realigns the container to the input element."}, {"name": "realXY", "url": "DD.Drag.html#property_realXY", "access": "", "host": "DD.Drag", "params": "", "type": "property", "description": "The real xy position of the node."}, {"name": "RE_DEFAULT_UNIT", "url": "Anim.html#property_RE_DEFAULT_UNIT", "access": "", "host": "Anim", "params": "", "type": "property", "description": "Regex of properties that should use the default unit."}, {"name": "refresh", "url": "NodeList.html#method_refresh", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Reruns the initial query, when created using a selector query"}, {"name": "refresh", "url": "plugin.NodeFocusManager.html#method_refresh", "access": "", "host": "plugin.NodeFocusManager", "params": "", "type": "method", "description": "Refreshes the Focus Manager's descendants by re-executing the \nCSS selector query specified by the <code>descendants</code> attribute."}, {"name": "refreshAlign", "url": "OverlayContext.html#method_refreshAlign", "access": "", "host": "OverlayContext", "params": "", "type": "method", "description": "Refreshes the alignment of the OverlayContext with the\n<a href=\"OverlayContext.html#config_currentNode\">currentNode</a>. See\nalso <a href=\"OverlayContext.html#config_align\">align</a>."}, {"name": "refreshByChild", "url": "DialogManager.html#method_refreshByChild", "access": "", "host": "DialogManager", "params": "child <Node | String>  Child node of the Dialog.", "type": "method", "description": "<p>Invoke the <a href=\"IOPlugin.html#method_start\">start</a> method\nfrom the <a href=\"IOPlugin.html\">IOPlugin</a> plugged on this Dialog\ninstance. If there is no IOPlugin plugged it does nothing.</p>\nExample:\n<pre><code>A.DialogManager.refreshByChild('#dialogContent1');</code></pre>"}, {"name": "refreshConsole", "url": "Plugin.ConsoleFilters.html#method_refreshConsole", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "method", "description": "Repopulates the Console with entries appropriate to the current filter\nsettings."}, {"name": "refreshIndex", "url": "LiveSearch.html#method_refreshIndex", "access": "", "host": "LiveSearch", "params": "", "type": "method", "description": "Refreshes the <a href=\"LiveSearch.html#config_index\">index</a>."}, {"name": "refreshIndex", "url": "TreeData.html#method_refreshIndex", "access": "", "host": "TreeData", "params": "", "type": "method", "description": "Refresh the index (i.e. re-index all nodes)."}, {"name": "refreshMask", "url": "LoadingMask.html#method_refreshMask", "access": "", "host": "LoadingMask", "params": "", "type": "method", "description": "Invoke the\n<a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>\n<code>refreshMask</code> method."}, {"name": "refreshMask", "url": "OverlayMask.html#method_refreshMask", "access": "", "host": "OverlayMask", "params": "", "type": "method", "description": "Repaint the OverlayMask UI, respecting the\n<a href=\"OverlayMask.html#config_target\">target</a> size and the\n<a href=\"OverlayMask.html#config_alignPoints\">alignPoints</a>."}, {"name": "reg", "url": "Sortable.html#method_reg", "access": "", "host": "Sortable", "params": "Sortable <Object>  s A Sortable instance.", "type": "method", "description": "Register a Sortable instance with the singleton to allow lookups later."}, {"name": "regDelegate", "url": "DD.DDM.html#method_regDelegate", "access": "", "host": "DD.DDM", "params": "", "type": "method", "description": "Register a Delegate with the DDM"}, {"name": "region", "url": "Node.html#config_region", "access": "", "host": "Node", "params": "", "type": "config", "description": "Returns a region object for the node"}, {"name": "region", "url": "DD.Drag.html#property_region", "access": "", "host": "DD.Drag", "params": "", "type": "property", "description": "A region object associated with this drag, used for checking regions while dragging."}, {"name": "region", "url": "DD.Drop.html#property_region", "access": "", "host": "DD.Drop", "params": "", "type": "property", "description": "A region object associated with this target, used for checking regions while dragging."}, {"name": "region", "url": "DOM.html#method_region", "access": "", "host": "DOM", "params": "element <HTMLElement>  The DOM element.", "type": "method", "description": "Returns an Object literal containing the following about this element: (top, right, bottom, left)"}, {"name": "register", "url": "OverlayManager.html#method_register", "access": "", "host": "OverlayManager", "params": "overlay <Overlay>  <a href=\"Overlay.html\">Overlay</a> instance to be registered", "type": "method", "description": "Register the passed <a href=\"Overlay.html\">Overlay</a> to this\nOverlayManager."}, {"name": "register", "url": "Do.Method.html#method_register", "access": "", "host": "Do.Method", "params": "sid <string>   the subscriber id, fn <Function>   the function to execute, when <string>   when to execute the function", "type": "method", "description": "Register a aop subscriber"}, {"name": "register", "url": "History.html#method_register", "access": "", "host": "History", "params": "moduleId <string>  Non-empty string uniquely identifying the\nmodule you wish to register., initialState <string>  The initial state of the specified\nmodule corresponding to its earliest history entry.", "type": "method", "description": "Registers a new module."}, {"name": "registerConstructor", "url": "Profiler.html#method_registerConstructor", "access": "", "host": "Profiler", "params": "name <string>  The fully-qualified name of the function including namespace information., owner <Object>  (Optional) The object that owns the function (namespace or containing object).", "type": "method", "description": "Sets up a constructor for profiling, including all properties and methods on the prototype."}, {"name": "_registered", "url": "OverlayManager.html#method__registered", "access": "protected", "host": "OverlayManager", "params": "overlay <Overlay>  Overlay", "type": "method", "description": "Check if the overlay is registered."}, {"name": "registerFunction", "url": "Profiler.html#method_registerFunction", "access": "", "host": "Profiler", "params": "name <String>  The full name of the function including namespacing. This\nis the name of the function that is stored in the report., owner <Object>  (Optional) The object that owns the function. If the function\nisn't global then this argument is required. This could be the namespace that\nthe function belongs to or the object on which it's\na method., registerPrototype <Boolean>  (Optional) Indicates that the prototype should\nalso be instrumented. Setting to true has the same effect as calling\nregisterConstructor().", "type": "method", "description": "Sets up a function for profiling. It essentially overwrites the function with one\nthat has instrumentation data. This method also creates an entry for the function\nin the profile report. The original function is stored on the container object."}, {"name": "registerImage", "url": "ImgLoadGroup.html#method_registerImage", "access": "", "host": "ImgLoadGroup", "params": "* <Object>   A configuration object literal with attribute name/value pairs  (passed through to a <code>Y.ImgLoadImgObj</code> constructor)", "type": "method", "description": "Registers an image with the group.\nArguments are passed through to a <code>Y.ImgLoadImgObj</code> constructor; see that class' attribute documentation for detailed information. \"<code>domId</code>\" is a required attribute."}, {"name": "registerNode", "url": "TreeData.html#method_registerNode", "access": "", "host": "TreeData", "params": "node <TreeNode> ", "type": "method", "description": "Register the passed TreeNode on this TreeData."}, {"name": "registerObject", "url": "Profiler.html#method_registerObject", "access": "", "host": "Profiler", "params": "name <String>  The name of the object to profile (shows up in report)., owner <Object>  (Optional) The object represented by the name., recurse <Boolean>  (Optional) Determines if subobject methods are also profiled.", "type": "method", "description": "Sets up an object for profiling. It takes the object and looks for functions.\nWhen a function is found, registerMethod() is called on it. If set to recrusive\nmode, it will also setup objects found inside of this object for profiling, \nusing the same methodology."}, {"name": "relatedTarget", "url": "DOMEventFacade.html#property_relatedTarget", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "Node reference to the relatedTarget"}, {"name": "relatedTarget", "url": "EventFacade.html#property_relatedTarget", "access": "", "host": "EventFacade", "params": "", "type": "property", "description": "Node reference to the relatedTarget"}, {"name": "remove", "url": "Node.html#method_remove", "access": "", "host": "Node", "params": "", "type": "method", "description": "Removes the node from its parent.\nShortcut for myNode.get('parentNode').removeChild(myNode);"}, {"name": "remove", "url": "NodeList.html#method_remove", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Called on each Node instance"}, {"name": "remove", "url": "AsyncQueue.html#method_remove", "access": "", "host": "AsyncQueue", "params": "callback <String|Object>   the callback object or a callback's id", "type": "method", "description": "Removes the callback from the queue.  If the queue is active, the\nremoval is scheduled to occur after the current callback has completed."}, {"name": "remove", "url": "io.html#method_remove", "access": "", "host": "io", "params": "o <Object>  - Reference to queued transaction.", "type": "method", "description": "Method for removing a specific, pending transaction from\nthe queue. This is the interface for _remove()."}, {"name": "remove", "url": "ArrayList~add.html#method_remove", "access": "", "host": "ArrayList~add", "params": "needle < mixed >   Item to find and remove from the list, all < Boolean >   If true, remove all occurrences, comparitor < Function >   optional a/b function to test equivalence", "type": "method", "description": "Removes first or all occurrences of an item to the ArrayList.  If a\ncomparitor is not provided, uses itemsAreEqual method to determine\nmatches."}, {"name": "remove", "url": "WidgetParent.html#method_remove", "access": "", "host": "WidgetParent", "params": "index <Number>   (Optional.)  Number representing the index of the \nchild to be removed.", "type": "method", "description": "Removes the Widget from its parent.  Optionally, can remove\na child by specifying its index."}, {"name": "remove", "url": "OverlayManager.html#method_remove", "access": "", "host": "OverlayManager", "params": "overlay <Overlay>  <a href=\"Overlay.html\">Overlay</a> instance to be removed", "type": "method", "description": "Remove the passed <a href=\"Overlay.html\">Overlay</a> from this\nOverlayManager."}, {"name": "remove", "url": "State.html#method_remove", "access": "", "host": "State", "params": "name <String>   The name of the item., key <String>   The property to remove.", "type": "method", "description": "Removes a property from an item."}, {"name": "remove", "url": "Queue.html#method_remove", "access": "", "host": "Queue", "params": "item <MIXED>   an item in the queue", "type": "method", "description": "Removes the referenced item from the queue"}, {"name": "remove", "url": "Cookie.html#method_remove", "access": "", "host": "Cookie", "params": "name <String>  The name of the cookie to remove., options <Object>  (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), \nand secure (true/false). The expires option will be overwritten\nby the method.", "type": "method", "description": "Removes a cookie from the machine by setting its expiration date to\nsometime in the past."}, {"name": "removeAll", "url": "WidgetParent.html#method_removeAll", "access": "", "host": "WidgetParent", "params": "", "type": "method", "description": "Removes all of the children from the Widget."}, {"name": "removeAll", "url": "State.html#method_removeAll", "access": "", "host": "State", "params": "name <String>   The name of the item., o <Object|Array>   Collection of properties to delete. If not provided, the entire item is removed.", "type": "method", "description": "Removes multiple properties from an item, or remove the item completely."}, {"name": "removeAttr", "url": "Attribute.html#method_removeAttr", "access": "", "host": "Attribute", "params": "name <String>  The name of the attribute to be removed.", "type": "method", "description": "Removes an attribute from the host object"}, {"name": "removeAttribute", "url": "Node.html#method_removeAttribute", "access": "", "host": "Node", "params": "attribute <String>  The attribute to be removed", "type": "method", "description": "Passes through to DOM method."}, {"name": "removeAttribute", "url": "NodeList.html#method_removeAttribute", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Called on each Node instance"}, {"name": "removeChild", "url": "Node.html#method_removeChild", "access": "", "host": "Node", "params": "node <HTMLElement | Node>  Node to be removed", "type": "method", "description": "Passes through to DOM method."}, {"name": "removeChild", "url": "WidgetParent.html#event_removeChild", "access": "", "host": "WidgetParent", "params": "e <EventFacade>  The Event Facade", "type": "event", "description": "Fires when a child Widget is removed.  The event object will have a \n'child' property that returns a reference to the child Widget, as well \nas an 'index' property that returns a reference child's ordinal position.\n<p>\nSubscribers to the \"on\" moment of this event, will be notified \nbefore a child is removed.\n</p>\n<p>\nSubscribers to the \"after\" moment of this event, will be notified\nafter a child is removed.\n</p>"}, {"name": "_removeChild", "url": "TreeData.html#method__removeChild", "access": "", "host": "TreeData", "params": "node <TreeData> ", "type": "method", "description": "Remove the passed <code>node</code> from the current TreeData."}, {"name": "removeChild", "url": "TreeData.html#method_removeChild", "access": "", "host": "TreeData", "params": "node <TreeData> ", "type": "method", "description": "Remove the passed <code>node</code> from the current TreeData."}, {"name": "removeClass", "url": "Node.html#method_removeClass", "access": "", "host": "Node", "params": "className <String>  the class name to remove from the node's class attribute", "type": "method", "description": "Removes a class name from each node."}, {"name": "removeClass", "url": "NodeList.html#method_removeClass", "access": "", "host": "NodeList", "params": "className <String>  the class name to remove from the node's class attribute", "type": "method", "description": "Removes a class name from each node."}, {"name": "removeClass", "url": "DOM.html#method_removeClass", "access": "", "host": "DOM", "params": "element <HTMLElement>  The DOM element., className <String>  the class name to remove from the class attribute", "type": "method", "description": "Removes a class name from a given element."}, {"name": "_removeDate", "url": "Calendar.html#method__removeDate", "access": "protected", "host": "Calendar", "params": "date <Date>  Date to remove", "type": "method", "description": "Remove the passed date from\n<a href=\"Calendar.html#config_dates\">dates</a>."}, {"name": "_removeFocusClass", "url": "plugin.NodeFocusManager.html#method__removeFocusClass", "access": "protected", "host": "plugin.NodeFocusManager", "params": "", "type": "method", "description": "Removes the class name representing focus (as specified by \nthe \"focusClass\" attribute) from the Node instance to which it is \ncurrently applied."}, {"name": "removeFromGroup", "url": "DD.Drag.html#method_removeFromGroup", "access": "", "host": "DD.Drag", "params": "g <String>  The group to remove this Drag Instance from.", "type": "method", "description": "Remove this Drag instance from a group, this should be used for on-the-fly group removals."}, {"name": "removeFromGroup", "url": "DD.Drop.html#method_removeFromGroup", "access": "", "host": "DD.Drop", "params": "g <String>  The group to remove this Drop Instance from.", "type": "method", "description": "Remove this Drop instance from a group, this should be used for on-the-fly group removals."}, {"name": "removeHandle", "url": "DD.Drag.html#method_removeHandle", "access": "", "host": "DD.Drag", "params": "str <String>  The selector for the handle to be removed.", "type": "method", "description": "Remove a Selector added by addHandle"}, {"name": "removeInvalid", "url": "DD.Drag.html#method_removeInvalid", "access": "", "host": "DD.Drag", "params": "str <String>  The invalid handle to remove from the internal list.", "type": "method", "description": "Remove an invalid handle added by addInvalid"}, {"name": "removeListener", "url": "YUI.html#method_removeListener", "access": "", "host": "YUI", "params": "", "type": "method", "description": "Calls Y.Event.attach with the correct argument order"}, {"name": "_removeLoadingClassNames", "url": "Widget.html#method__removeLoadingClassNames", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Removes class names representative of the widget's loading state from \nthe boundingBox."}, {"name": "removeSub", "url": "Cookie.html#method_removeSub", "access": "", "host": "Cookie", "params": "name <String>  The name of the cookie in which the subcookie exists., subName <String>  The name of the subcookie to remove., options <Object>  (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nremoveIfEmpty (true/false), and secure (true/false). This must be the same\nsettings as the original subcookie.", "type": "method", "description": "Removes a sub cookie with a given name."}, {"name": "removeTarget", "url": "EventTarget.html#method_removeTarget", "access": "", "host": "EventTarget", "params": "o <EventTarget>   the target to remove", "type": "method", "description": "Removes a bubble target"}, {"name": "render", "url": "Widget.html#method_render", "access": "", "host": "Widget", "params": "parentNode <Object | String>   Optional. The Node under which the \nWidget is to be rendered. This can be a Node instance or a CSS selector string. \n<p>\nIf the selector string returns more than one Node, the first node will be used \nas the parentNode. NOTE: This argument is required if both the boundingBox and contentBox\nare not currently in the document. If it's not provided, the Widget will be rendered\nto the body of the current document in this case.\n</p>", "type": "method", "description": "Establishes the initial DOM for the widget. Invoking this\nmethod will lead to the creating of all DOM elements for\nthe widget (or the manipulation of existing DOM elements \nfor the progressive enhancement use case).\n<p>\nThis method should only be invoked once for an initialized\nwidget.\n</p>\n<p>\nIt delegates to the widget specific renderer method to do\nthe actual work.\n</p>"}, {"name": "render", "url": "Widget.html#config_render", "access": "", "host": "Widget", "params": "", "type": "config", "description": "Whether or not to render the widget automatically after init, and optionally, to which parent node."}, {"name": "render", "url": "Component.html#config_render", "access": "", "host": "Component", "params": "", "type": "config", "description": "If <code>true</code> the render phase will be autimatically invoked\npreventing the <code>.render()</code> manual call."}, {"name": "_renderBlankDays", "url": "Calendar.html#method__renderBlankDays", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Render Calendar DOM blank days elements. Blank days are used to align\nwith the week day column."}, {"name": "_renderBoundingBox", "url": "TreeNode.html#method__renderBoundingBox", "access": "protected", "host": "TreeNode", "params": "", "type": "method", "description": "Render the <code>boundingBox</code> node."}, {"name": "_renderBoxClassNames", "url": "Widget.html#method__renderBoxClassNames", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Applies standard class names to the boundingBox and contentBox"}, {"name": "_renderCalendar", "url": "Calendar.html#method__renderCalendar", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Render Calendar DOM elements."}, {"name": "renderChange", "url": "Widget.html#event_renderChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "renderChange", "url": "Component.html#event_renderChange", "access": "", "host": "Component", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'render' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_renderChildren", "url": "WidgetParent.html#method__renderChildren", "access": "protected", "host": "WidgetParent", "params": "", "type": "method", "description": "Renders all child Widgets for the parent.\n<p>\nThis method in invoked after renderUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_renderContentBox", "url": "TreeNode.html#method__renderContentBox", "access": "protected", "host": "TreeNode", "params": "", "type": "method", "description": "Render the <code>contentBox</code> node."}, {"name": "_renderControls", "url": "ImageViewer.html#method__renderControls", "access": "protected", "host": "ImageViewer", "params": "", "type": "method", "description": "Render the controls UI."}, {"name": "rendered", "url": "Widget.html#config_rendered", "access": "", "host": "Widget", "params": "", "type": "config", "description": "Flag indicating whether or not this Widget\nhas been through the render lifecycle phase."}, {"name": "renderedChange", "url": "Widget.html#event_renderedChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'rendered' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_renderElements", "url": "DatePickerSelect.html#method__renderElements", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Render DOM elements for the DatePickerSelect."}, {"name": "_renderElements", "url": "Rating.html#method__renderElements", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Render the Rating elements."}, {"name": "_renderElements", "url": "OverlayContextPanel.html#method__renderElements", "access": "protected", "host": "OverlayContextPanel", "params": "", "type": "method", "description": "Render DOM elements for the OverlayContextPanel."}, {"name": "_renderElements", "url": "TreeView.html#method__renderElements", "access": "protected", "host": "TreeView", "params": "", "type": "method", "description": "Render elements."}, {"name": "renderer", "url": "Resize.html#method_renderer", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Creates DOM (or manipulates DOM for progressive enhancement)\nThis method is invoked by initializer(). It's chained automatically for\nsubclasses if required."}, {"name": "renderer", "url": "Widget.html#method_renderer", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Creates DOM (or manipulates DOM for progressive enhancement)\nThis method is invoked by render() and is not chained \nautomatically for the class hierarchy (unlike initializer, destructor) \nso it should be chained manually for subclasses if required."}, {"name": "_renderFooter", "url": "ImageViewer.html#method__renderFooter", "access": "protected", "host": "ImageViewer", "params": "", "type": "method", "description": "Render the footer UI."}, {"name": "_renderHandles", "url": "Resize.html#method__renderHandles", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Responsible for loop each handle element and append to the wrapper."}, {"name": "_renderHeaderText", "url": "Panel.html#method__renderHeaderText", "access": "protected", "host": "Panel", "params": "", "type": "method", "description": "Render the Panel header text with the value of\n<a href=\"Panel.html#config_title\">title</a>."}, {"name": "_renderIconButtons", "url": "Panel.html#method__renderIconButtons", "access": "protected", "host": "Panel", "params": "", "type": "method", "description": "Render the <a href=\"Panel.html#config_icons\">icons</a>."}, {"name": "_renderIconNode", "url": "ButtonItem.html#method__renderIconNode", "access": "protected", "host": "ButtonItem", "params": "", "type": "method", "description": "Renders the underlying markup for the <a href=\"ButtonItem.html#config_icon\">icon</a>."}, {"name": "_renderInput", "url": "AutoComplete.html#method__renderInput", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Handles the rendering of the input element."}, {"name": "_renderLabel", "url": "Rating.html#method__renderLabel", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Render the Rating label."}, {"name": "_renderLabelNode", "url": "ButtonItem.html#method__renderLabelNode", "access": "protected", "host": "ButtonItem", "params": "", "type": "method", "description": "Renders the underlying markup for the <a href=\"ButtonItem.html#config_label\">label</a>."}, {"name": "_renderListElements", "url": "AutoComplete.html#method__renderListElements", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Pre-populates the container with the \n<a href=\"Autocomplete.html#config_maxResultsDisplayed\">maxResultsDisplayed</a>\nnumber of list items."}, {"name": "_renderMonthDays", "url": "Calendar.html#method__renderMonthDays", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Render Calendar DOM month days elements."}, {"name": "_renderOverlay", "url": "AutoComplete.html#method__renderOverlay", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Handles the creation of the overlay where the result list will be displayed."}, {"name": "_renderOverlayMask", "url": "LoadingMask.html#method__renderOverlayMask", "access": "protected", "host": "LoadingMask", "params": "", "type": "method", "description": "Render\n<a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>\ninstance."}, {"name": "_renderPaginator", "url": "ImageGallery.html#method__renderPaginator", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Render the <a href=\"Paginator.html\">Paginator</a> with the thumbnails."}, {"name": "_renderPlayer", "url": "ImageGallery.html#method__renderPlayer", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Render the player controls."}, {"name": "_renderProxy", "url": "Resize.html#method__renderProxy", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Render the <a href=\"Resize.html#config_proxyEl\">proxyEl</a> element and\nmake it sibling of the <a href=\"Resize.html#config_node\">node</a>."}, {"name": "renderRail", "url": "SliderBase.html#method_renderRail", "access": "", "host": "SliderBase", "params": "", "type": "method", "description": "Creates the Slider rail DOM subtree for insertion into the Slider's\n<code>contentBox</code>.  Override this method if you want to provide\nthe rail element (presumably from existing markup)."}, {"name": "_renderRowsPerPageOptions", "url": "Paginator.html#method__renderRowsPerPageOptions", "access": "protected", "host": "Paginator", "params": "", "type": "method", "description": "Render rows per page options."}, {"name": "_renderStates", "url": "ButtonItem.html#method__renderStates", "access": "protected", "host": "ButtonItem", "params": "event <EventFacade> ", "type": "method", "description": "Attaches state interaction management to the widget."}, {"name": "_renderStatusNode", "url": "ProgressBar.html#method__renderStatusNode", "access": "protected", "host": "ProgressBar", "params": "", "type": "method", "description": "Render the <code>statusNode</code> of the progressbar."}, {"name": "_renderStdMod", "url": "WidgetStdMod.html#method__renderStdMod", "access": "protected", "host": "WidgetStdMod", "params": "section <String>  The section to create/render. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.", "type": "method", "description": "Creates the DOM node for the given section, and inserts it into the correct location in the contentBox."}, {"name": "_renderTemplateUI", "url": "Paginator.html#method__renderTemplateUI", "access": "protected", "host": "Paginator", "params": "", "type": "method", "description": "Render the UI controls based on the\n<a href=\"Paginator.html#config_template\">template</a>."}, {"name": "renderThumb", "url": "SliderBase.html#method_renderThumb", "access": "", "host": "SliderBase", "params": "", "type": "method", "description": "Creates the Slider thumb DOM subtree for insertion into the Slider's\nrail.  Override this method if you want to provide the thumb element\n(presumably from existing markup)."}, {"name": "renderTo", "url": "Editable.html#config_renderTo", "access": "", "host": "Editable", "params": "", "type": "config", "description": "Node to render the editable."}, {"name": "renderToChange", "url": "Editable.html#event_renderToChange", "access": "", "host": "Editable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'renderTo' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_renderTriggerButton", "url": "DatePickerSelect.html#method__renderTriggerButton", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Render DOM element for the trigger button of the DatePickerSelect."}, {"name": "renderUI", "url": "Plugin.ConsoleFilters.html#method_renderUI", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "method", "description": "Adds the category and source filter sections to the Console footer."}, {"name": "renderUI", "url": "Calendar.html#method_renderUI", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Create the DOM structure for the Calendar. Lifecycle."}, {"name": "renderUI", "url": "DatePickerSelect.html#method_renderUI", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Create the DOM structure for the DatePickerSelect. Lifecycle."}, {"name": "renderUI", "url": "LoadingMask.html#method_renderUI", "access": "protected", "host": "LoadingMask", "params": "", "type": "method", "description": "Create the DOM structure for the LoadingMask. Lifecycle."}, {"name": "renderUI", "url": "Editable.html#method_renderUI", "access": "protected", "host": "Editable", "params": "", "type": "method", "description": "Create the DOM structure for the Editable. Lifecycle."}, {"name": "renderUI", "url": "Textboxlist.html#method_renderUI", "access": "protected", "host": "Textboxlist", "params": "", "type": "method", "description": "Create the DOM structure for the Textboxlist. Lifecycle."}, {"name": "renderUI", "url": "Resize.html#method_renderUI", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Create the DOM structure for the Resize. Lifecycle."}, {"name": "renderUI", "url": "Rating.html#method_renderUI", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Create the DOM structure for the Rating. Lifecycle."}, {"name": "renderUI", "url": "ThumbRating.html#method_renderUI", "access": "protected", "host": "ThumbRating", "params": "", "type": "method", "description": "Create the DOM structure for the ThumbRating. Lifecycle."}, {"name": "renderUI", "url": "ProgressBar.html#method_renderUI", "access": "protected", "host": "ProgressBar", "params": "", "type": "method", "description": "Create the DOM structure for the ProgressBar. Lifecycle."}, {"name": "renderUI", "url": "Paginator.html#method_renderUI", "access": "protected", "host": "Paginator", "params": "", "type": "method", "description": "Create the DOM structure for the Paginator. Lifecycle."}, {"name": "renderUI", "url": "ColorPicker.html#method_renderUI", "access": "protected", "host": "ColorPicker", "params": "", "type": "method", "description": "Create the DOM structure for the ColorPicker. Lifecycle."}, {"name": "_renderUI", "url": "Widget.html#method__renderUI", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Initializes the UI state for the Widget's bounding/content boxes."}, {"name": "renderUI", "url": "Widget.html#method_renderUI", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Adds nodes to the DOM \nThis method is not called by framework and is not chained \nautomatically for the class hierarchy."}, {"name": "renderUI", "url": "ImageViewer.html#method_renderUI", "access": "protected", "host": "ImageViewer", "params": "", "type": "method", "description": "Create the DOM structure for the ImageViewer. Lifecycle."}, {"name": "renderUI", "url": "ImageGallery.html#method_renderUI", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Create the DOM structure for the ImageGallery. Lifecycle."}, {"name": "renderUI", "url": "ButtonItem.html#method_renderUI", "access": "protected", "host": "ButtonItem", "params": "", "type": "method", "description": "Create the DOM structure for the ButtonItem. Lifecycle."}, {"name": "renderUI", "url": "SliderBase.html#method_renderUI", "access": "protected", "host": "SliderBase", "params": "", "type": "method", "description": "Create the DOM structure for the Slider."}, {"name": "renderUI", "url": "Console.html#method_renderUI", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Generate the Console UI."}, {"name": "renderUI", "url": "Plugin.Console.html#method_renderUI", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Generate the Console UI."}, {"name": "renderUI", "url": "OverlayContextPanel.html#method_renderUI", "access": "protected", "host": "OverlayContextPanel", "params": "", "type": "method", "description": "Create the DOM structure for the OverlayContextPanel. Lifecycle."}, {"name": "renderUI", "url": "AutoComplete.html#method_renderUI", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Create the DOM structure for the AutoComplete. Lifecycle."}, {"name": "_renderUI", "url": "TreeNode.html#method__renderUI", "access": "protected", "host": "TreeNode", "params": "", "type": "method", "description": "Create the DOM structure for the TreeNode. Lifecycle. Overloading\nprivate _renderUI, don't call this._renderBox method avoid render node on\nthe body."}, {"name": "renderUI", "url": "TreeNode.html#method_renderUI", "access": "protected", "host": "TreeNode", "params": "", "type": "method", "description": "Create the DOM structure for the TreeNode. Lifecycle."}, {"name": "renderUI", "url": "TreeNodeIO.html#method_renderUI", "access": "protected", "host": "TreeNodeIO", "params": "", "type": "method", "description": "Create the DOM structure for the TreeNodeIO. Lifecycle."}, {"name": "renderUI", "url": "TreeView.html#method_renderUI", "access": "protected", "host": "TreeView", "params": "", "type": "method", "description": "Create the DOM structure for the TreeView. Lifecycle."}, {"name": "renderUI", "url": "TreeViewDD.html#method_renderUI", "access": "protected", "host": "TreeViewDD", "params": "", "type": "method", "description": "Create the DOM structure for the TreeViewDD. Lifecycle."}, {"name": "_renderUIPosition", "url": "WidgetPosition.html#method__renderUIPosition", "access": "protected", "host": "WidgetPosition", "params": "", "type": "method", "description": "Creates/Initializes the DOM to support xy page positioning.\n<p>\nThis method in invoked after renderUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_renderUIStack", "url": "WidgetStack.html#method__renderUIStack", "access": "protected", "host": "WidgetStack", "params": "", "type": "method", "description": "Creates/Initializes the DOM to support stackability.\n<p>\nThis method in invoked after renderUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_renderUIStdMod", "url": "WidgetStdMod.html#method__renderUIStdMod", "access": "protected", "host": "WidgetStdMod", "params": "", "type": "method", "description": "Creates/Initializes the DOM for standard module support.\n<p>\nThis method is invoked after renderUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_renderWeekDays", "url": "Calendar.html#method__renderWeekDays", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Render Calendar DOM week days elements."}, {"name": "repeat", "url": "ImageGallery.html#config_repeat", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "Restart the navigation when reach the last element."}, {"name": "repeatChange", "url": "ImageGallery.html#event_repeatChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'repeat' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "replace", "url": "Node.html#method_replace", "access": "", "host": "Node", "params": "newNode <Y.Node || HTMLNode>  Node to be inserted", "type": "method", "description": "Replace the node with the other node. This is a DOM update only\nand does not change the node bound to the Node instance.\nShortcut for myNode.get('parentNode').replaceChild(newNode, myNode);"}, {"name": "replaceChild", "url": "Node.html#method_replaceChild", "access": "", "host": "Node", "params": "node <HTMLElement | Node>  Node to be inserted, refNode <HTMLElement | Node>  Node to be replaced", "type": "method", "description": "Passes through to DOM method."}, {"name": "replaceClass", "url": "Node.html#method_replaceClass", "access": "", "host": "Node", "params": "oldClassName <String>  the class name to be replaced, newClassName <String>  the class name that will be replacing the old class name", "type": "method", "description": "Replace a class with another class for each node.\nIf no oldClassName is present, the newClassName is simply added."}, {"name": "replaceClass", "url": "NodeList.html#method_replaceClass", "access": "", "host": "NodeList", "params": "oldClassName <String>  the class name to be replaced, newClassName <String>  the class name that will be replacing the old class name", "type": "method", "description": "Replace a class with another class for each node.\nIf no oldClassName is present, the newClassName is simply added."}, {"name": "replaceClass", "url": "DOM.html#method_replaceClass", "access": "", "host": "DOM", "params": "element <HTMLElement>  The DOM element, oldClassName <String>  the class name to be replaced, newClassName <String>  the class name that will be replacing the old class name", "type": "method", "description": "Replace a class with another class for a given element.\nIf no oldClassName is present, the newClassName is simply added."}, {"name": "report", "url": "Test.Reporter.html#method_report", "access": "", "host": "Test.Reporter", "params": "results <Object>  The results object created by TestRunner.", "type": "method", "description": "Sends the report to the server."}, {"name": "request", "url": "Cache.html#event_request", "access": "", "host": "Cache", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>request (Object)</dt> <dd>The request object.</dd>\n</dl>", "type": "event", "description": "Fired when an entry is requested from the cache."}, {"name": "request", "url": "DataSource.Local.html#event_request", "access": "", "host": "DataSource.Local", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>                          \n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object.</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n</dl>", "type": "event", "description": "Fired when a data request is received."}, {"name": "request", "url": "ImageViewer.html#event_request", "access": "", "host": "ImageViewer", "params": "event <Event.Facade>  The load event.", "type": "event", "description": "Handles the request event. Fired when a image is requested."}, {"name": "require", "url": "Loader.html#method_require", "access": "", "host": "Loader", "params": "what <string[] | string*>   the modules to load", "type": "method", "description": "Add a requirement for one or more module"}, {"name": "required", "url": "Loader.html#property_required", "access": "", "host": "Loader", "params": "", "type": "property", "description": "The list of requested modules"}, {"name": "reset", "url": "Node.html#method_reset", "access": "", "host": "Node", "params": "", "type": "method", "description": "Passes through to DOM method.\nOnly valid on FORM elements"}, {"name": "_reset", "url": "Test.Assert.html#method__reset", "access": "protected", "host": "Test.Assert", "params": "", "type": "method", "description": "Resets the number of assertions that have been performed to 0."}, {"name": "reset", "url": "Console.html#method_reset", "access": "", "host": "Console", "params": "", "type": "method", "description": "Clears the console and resets internal timers."}, {"name": "reset", "url": "Console.html#event_reset", "access": "", "host": "Console", "params": "event <Event.Facade>   Event Facade object", "type": "event", "description": "Triggers the reset behavior via the default logic in _defResetFn."}, {"name": "reset", "url": "Plugin.Console.html#method_reset", "access": "", "host": "Plugin.Console", "params": "", "type": "method", "description": "Clears the console and resets internal timers."}, {"name": "reset", "url": "Plugin.Console.html#event_reset", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade>   Event Facade object", "type": "event", "description": "Triggers the reset behavior via the default logic in _defResetFn."}, {"name": "reset", "url": "Attribute.html#method_reset", "access": "", "host": "Attribute", "params": "name <String>  Optional. The name of the attribute to reset.  If omitted, all attributes are reset.", "type": "method", "description": "Resets the attribute (or all attributes) to its initial value, as long as\nthe attribute is not readOnly, or writeOnce."}, {"name": "resetCache", "url": "Plugin.DDConstrained.html#method_resetCache", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "method", "description": "Reset the internal region cache."}, {"name": "resetId", "url": "A.Node.html#method_resetId", "access": "", "host": "A.Node", "params": "prefix <String>  Optional prefix for the guid.", "type": "method", "description": "Generate an unique identifier and reset the id attribute of the node\ninstance using the new value. Invokes the\n<a href=\"A.Node.html#method_guid\">guid</a>."}, {"name": "_resetState", "url": "TreeViewDD.html#method__resetState", "access": "protected", "host": "TreeViewDD", "params": "nodeContent <Node> ", "type": "method", "description": "Set the reset CSS state on the passed <code>nodeContent</code>."}, {"name": "resizable", "url": "Dialog.html#config_resizable", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "Boolean specifying if the Panel should be resizable."}, {"name": "resizableChange", "url": "Dialog.html#event_resizableChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'resizable' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "resizableInstance", "url": "Dialog.html#config_resizableInstance", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "Stores the Drag instance for the\n<a href=\"Resize.html\">Resize</a> used by this Dialog."}, {"name": "resizableInstanceChange", "url": "Dialog.html#event_resizableInstanceChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'resizableInstance' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_resize", "url": "Resize.html#method__resize", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Basic resize calculations."}, {"name": "resize:end", "url": "Resize.html#event_resize:end", "access": "", "host": "Resize", "params": "event <Event.Facade>  The resize end event.", "type": "event", "description": "Handles the resize end event. Fired when a handle stop to be\ndragged."}, {"name": "resize:mouseUp", "url": "Resize.html#event_resize:mouseUp", "access": "", "host": "Resize", "params": "event <Event.Facade>  The resize mouseUp event.", "type": "event", "description": "Handles the resize mouseUp event. Fired when a mouseUp event happens on a\nhandle."}, {"name": "resize:resize", "url": "Resize.html#event_resize:resize", "access": "", "host": "Resize", "params": "event <Event.Facade>  The resize event.", "type": "event", "description": "Handles the resize event. Fired on each pixel when the handle is\nbeing dragged."}, {"name": "resize:start", "url": "Resize.html#event_resize:start", "access": "", "host": "Resize", "params": "event <Event.Facade>  The resize start event.", "type": "event", "description": "Handles the resize start event. Fired when a handle starts to be\ndragged."}, {"name": "Resize.ATTRS", "url": "Resize.html#property_Resize.ATTRS", "access": "", "host": "Resize", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the Resize."}, {"name": "resizeFrame", "url": "Plugin.DDProxy.html#config_resizeFrame", "access": "", "host": "Plugin.DDProxy", "params": "", "type": "config", "description": "Make the Proxy node assume the size of the original node. Default: true"}, {"name": "resizeFrameChange", "url": "Plugin.DDProxy.html#event_resizeFrameChange", "access": "", "host": "Plugin.DDProxy", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'resizeFrame' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Resize.NAME", "url": "Resize.html#property_Resize.NAME", "access": "", "host": "Resize", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "resizing", "url": "Resize.html#config_resizing", "access": "", "host": "Resize", "params": "", "type": "config", "description": "True when the element is being Resized."}, {"name": "resizingChange", "url": "Resize.html#event_resizingChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'resizing' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "resolveTextNode", "url": "YUI.html#method_resolveTextNode", "access": "", "host": "YUI", "params": "node <HTMLElement>  node to resolve", "type": "method", "description": "In some cases, some browsers will return a text node inside\nthe actual element that was targeted.  This normalizes the\nreturn value for getTarget and getRelatedTarget."}, {"name": "_resolveThumb", "url": "ClickableRail.html#method__resolveThumb", "access": "protected", "host": "ClickableRail", "params": "e <DOMEvent>   the mousedown event object", "type": "method", "description": "Resolves which thumb to actuate if any.  Override this if you want to\nsupport multiple thumbs.  By default, returns the Drag instance for\nthe thumb stored by the Slider."}, {"name": "response", "url": "DataSource.Local.html#event_response", "access": "", "host": "DataSource.Local", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>tId (Number)</dt> <dd>Unique transaction ID.</dd>\n<dt>request (Object)</dt> <dd>The request.</dd>\n<dt>callback (Object)</dt> <dd>The callback object with the following properties:\n<dl>\n<dt>success (Function)</dt> <dd>Success handler.</dd>\n<dt>failure (Function)</dt> <dd>Failure handler.</dd>\n</dl>\n</dd>\n<dt>cfg (Object)</dt> <dd>Configuration object.</dd>\n<dt>data (Object)</dt> <dd>Raw data.</dd>\n<dt>response (Object)</dt> <dd>Normalized response object with the following properties:\n<dl>\n<dt>results (Object)</dt> <dd>Parsed results.</dd>\n<dt>meta (Object)</dt> <dd>Parsed meta data.</dd>\n<dt>error (Boolean)</dt> <dd>Error flag.</dd>\n</dl>\n</dd>\n</dl>", "type": "event", "description": "Fired when response is returned."}, {"name": "responseData", "url": "IORequest.html#config_responseData", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "This is a normalized attribute for the response data. It's useful\nto retrieve the correct type for the\n<a href=\"IORequest.html#config_dataType\">dataType</a> (i.e., in json\nrequests the <code>responseData</code>) is a JSONObject."}, {"name": "responseDataChange", "url": "IORequest.html#event_responseDataChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'responseData' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_restrictDate", "url": "Calendar.html#method__restrictDate", "access": "protected", "host": "Calendar", "params": "currentDate <Date>  Current date showed on the Calendar., monthDayNode <Node>  Day node to be disabled.", "type": "method", "description": "Util method to disable day nodes between\n<a href=\"Calendar.html#config_minDate\">minDate</a> and\n<a href=\"Calendar.html#config_maxDate\">maxDate</a>."}, {"name": "resume", "url": "Test.Case.html#method_resume", "access": "", "host": "Test.Case", "params": "segment <Function>  (Optional) The function to run.\nIf omitted, the test automatically passes.", "type": "method", "description": "Resumes a paused test and runs the given function."}, {"name": "resume", "url": "Test.Runner.html#method_resume", "access": "", "host": "Test.Runner", "params": "segment <Function>  The function to run as the rest\nof the haulted test.", "type": "method", "description": "Resumes the TestRunner after wait() was called."}, {"name": "resume", "url": "Anim.html#event_resume", "access": "", "host": "Anim", "params": "ev <Event>  The pause event.", "type": "event", "description": "fires when an animation is resumed (run from pause)."}, {"name": "retrieve", "url": "Cache.html#method_retrieve", "access": "", "host": "Cache", "params": "request <Object>   Request object.", "type": "method", "description": "Retrieves cached entry for given request, if available, and refreshes\nentry in the cache. Returns null if there is no cache match."}, {"name": "retrieve", "url": "Cache.html#event_retrieve", "access": "", "host": "Cache", "params": "e <Event.Facade>   Event Facade with the following properties:\n<dl>\n<dt>entry (Object)</dt> <dd>The retrieved entry.</dd>\n</dl>", "type": "event", "description": "Fired when an entry is retrieved from the cache."}, {"name": "reverse", "url": "Anim.html#config_reverse", "access": "", "host": "Anim", "params": "", "type": "config", "description": "If true, animation begins from last frame"}, {"name": "reverseChange", "url": "Anim.html#event_reverseChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'reverse' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "rollups", "url": "Loader.html#property_rollups", "access": "", "host": "Loader", "params": "", "type": "property", "description": "List of rollup files found in the library metadata"}, {"name": "root", "url": "Loader.html#property_root", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Root path to prepend to module path for the combo\nservice"}, {"name": "root", "url": "config.html#property_root", "access": "", "host": "config", "params": "", "type": "property", "description": "The root path to prepend to module path for the combo service. Ex: 3.0.0b1/build/\nFor dynamic loading."}, {"name": "_rootMenu", "url": "plugin.NodeMenuNav.html#property__rootMenu", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Node instance representing the root menu in the menu."}, {"name": "rowsPerPage", "url": "Paginator.html#config_rowsPerPage", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Number of records constituting a \"page\"."}, {"name": "rowsPerPageChange", "url": "Paginator.html#event_rowsPerPageChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'rowsPerPage' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "rowsPerPageEl", "url": "Paginator.html#config_rowsPerPageEl", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Node element to display the\n<a href=\"Paginator.html#config_rowsPerPage\">rowsPerPage</a>."}, {"name": "rowsPerPageElChange", "url": "Paginator.html#event_rowsPerPageElChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'rowsPerPageEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "rowsPerPageOptions", "url": "Paginator.html#config_rowsPerPageOptions", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Array to be displayed on the generated HTML Select element with the\n<a href=\"Paginator.html#config_rowsPerPage\">rowsPerPage</a>\ninformation. (i.e., [1,3,5,7], will display these values on the\nselect)"}, {"name": "rowsPerPageOptionsChange", "url": "Paginator.html#event_rowsPerPageOptionsChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'rowsPerPageOptions' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "run", "url": "AsyncQueue.html#method_run", "access": "", "host": "AsyncQueue", "params": "", "type": "method", "description": "Sets the queue in motion.  All queued callbacks will be executed in\norder unless pause() or stop() is called or if one of the callbacks is\nconfigured with autoContinue: false."}, {"name": "run", "url": "Test.Runner.html#method_run", "access": "", "host": "Test.Runner", "params": "oldMode <Boolean>  (Optional) Specifies that the <= 2.8 way of\ninternally managing test suites should be used.", "type": "method", "description": "Runs the test suite."}, {"name": "run", "url": "Anim.html#method_run", "access": "", "host": "Anim", "params": "", "type": "method", "description": "Runs all animation instances."}, {"name": "_running", "url": "AsyncQueue.html#property__running", "access": "protected", "host": "AsyncQueue", "params": "", "type": "property", "description": "Used to indicate the queue is currently executing a callback."}, {"name": "running", "url": "Anim.html#config_running", "access": "", "host": "Anim", "params": "", "type": "config", "description": "Whether or not the animation is currently running."}, {"name": "runningChange", "url": "Anim.html#event_runningChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'running' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "save", "url": "Editable.html#method_save", "access": "", "host": "Editable", "params": "", "type": "method", "description": "Save the editable. Fires the\n<a href=\"Editable.html#event_save\">save</a> event."}, {"name": "save", "url": "Editable.html#event_save", "access": "", "host": "Editable", "params": "event <Event.Facade>  The save event.", "type": "event", "description": "Handles the save event."}, {"name": "saveButton", "url": "Editable.html#config_saveButton", "access": "", "host": "Editable", "params": "", "type": "config", "description": "<a href=\"ButtonItem.html\">ButtonItem</a> constructor Object for the\nsaveButton."}, {"name": "saveButtonChange", "url": "Editable.html#event_saveButtonChange", "access": "", "host": "Editable", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'saveButton' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_schedule", "url": "AsyncQueue.html#method__schedule", "access": "protected", "host": "AsyncQueue", "params": "callback <Object>   the callback object to execute", "type": "method", "description": "Schedules the execution of asynchronous callbacks."}, {"name": "_schedulePrint", "url": "Console.html#method__schedulePrint", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Sets an interval for buffered messages to be output to the console."}, {"name": "_schedulePrint", "url": "Plugin.Console.html#method__schedulePrint", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Sets an interval for buffered messages to be output to the console."}, {"name": "schema", "url": "AutoComplete.html#config_schema", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "A valid configuration object for any of <a href=\"module_datasource.html\">DataSource</a> schema plugins."}, {"name": "schemaChange", "url": "AutoComplete.html#event_schemaChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'schema' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "schemaType", "url": "AutoComplete.html#config_schemaType", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "A valid type of <a href=\"module_datasource.html\">DataSource</a> schema plugin, such as array, json, xml, etc."}, {"name": "schemaTypeChange", "url": "AutoComplete.html#event_schemaTypeChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'schemaType' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_scope", "url": "DelayedTask.html#property__scope", "access": "protected", "host": "DelayedTask", "params": "", "type": "property", "description": "Stores the passed <code>scope</code> attribute."}, {"name": "script", "url": "Get.html#method_script", "access": "", "host": "Get", "params": "url <string|string[]>   the url or urls to the script(s), opts <object>   Options: \n<dl>\n<dt>onSuccess</dt>\n<dd>\ncallback to execute when the script(s) are finished loading\nThe callback receives an object back with the following\ndata:\n<dl>\n<dt>win</dt>\n<dd>the window the script(s) were inserted into</dd>\n<dt>data</dt>\n<dd>the data object passed in when the request was made</dd>\n<dt>nodes</dt>\n<dd>An array containing references to the nodes that were\ninserted</dd>\n<dt>purge</dt>\n<dd>A function that, when executed, will remove the nodes\nthat were inserted</dd>\n<dt>\n</dl>\n</dd>\n<dt>onTimeout</dt>\n<dd>\ncallback to execute when a timeout occurs.\nThe callback receives an object back with the following\ndata:\n<dl>\n<dt>win</dt>\n<dd>the window the script(s) were inserted into</dd>\n<dt>data</dt>\n<dd>the data object passed in when the request was made</dd>\n<dt>nodes</dt>\n<dd>An array containing references to the nodes that were\ninserted</dd>\n<dt>purge</dt>\n<dd>A function that, when executed, will remove the nodes\nthat were inserted</dd>\n<dt>\n</dl>\n</dd>\n<dt>onEnd</dt>\n<dd>a function that executes when the transaction finishes, regardless of the exit path</dd>\n<dt>onFailure</dt>\n<dd>\ncallback to execute when the script load operation fails\nThe callback receives an object back with the following\ndata:\n<dl>\n<dt>win</dt>\n<dd>the window the script(s) were inserted into</dd>\n<dt>data</dt>\n<dd>the data object passed in when the request was made</dd>\n<dt>nodes</dt>\n<dd>An array containing references to the nodes that were\ninserted successfully</dd>\n<dt>purge</dt>\n<dd>A function that, when executed, will remove any nodes\nthat were inserted</dd>\n<dt>\n</dl>\n</dd>\n<dt>context</dt>\n<dd>the execution context for the callbacks</dd>\n<dt>win</dt>\n<dd>a window other than the one the utility occupies</dd>\n<dt>autopurge</dt>\n<dd>\nsetting to true will let the utilities cleanup routine purge \nthe script once loaded\n</dd>\n<dt>purgethreshold</dt>\n<dd>\nThe number of transaction before autopurge should be initiated\n</dd>\n<dt>data</dt>\n<dd>\ndata that is supplied to the callback when the script(s) are\nloaded.\n</dd>\n<dt>insertBefore</dt>\n<dd>node or node id that will become the new node's nextSibling</dd>\n</dl>\n<dt>charset</dt>\n<dd>Node charset, default utf-8 (deprecated, use the attributes config)</dd>\n<dt>attributes</dt>\n<dd>An object literal containing additional attributes to add to the link tags</dd>\n<dt>timeout</dt>\n<dd>Number of milliseconds to wait before aborting and firing the timeout event</dd>\n<pre>\n&nbsp;&nbsp;Y.Get.script(\n&nbsp;&nbsp;[\"http://yui.yahooapis.com/2.5.2/build/yahoo/yahoo-min.js\",\n&nbsp;&nbsp;&nbsp;\"http://yui.yahooapis.com/2.5.2/build/event/event-min.js\"], &#123;\n&nbsp;&nbsp;&nbsp;&nbsp;onSuccess: function(o) &#123;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.log(\"won't cause error because Y is the context\");\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y.log(o.data); // foo\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y.log(o.nodes.length === 2) // true\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// o.purge(); // optionally remove the script nodes immediately\n&nbsp;&nbsp;&nbsp;&nbsp;&#125;,\n&nbsp;&nbsp;&nbsp;&nbsp;onFailure: function(o) &#123;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y.log(\"transaction failed\");\n&nbsp;&nbsp;&nbsp;&nbsp;&#125;,\n&nbsp;&nbsp;&nbsp;&nbsp;onTimeout: function(o) &#123;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y.log(\"transaction timed out\");\n&nbsp;&nbsp;&nbsp;&nbsp;&#125;,\n&nbsp;&nbsp;&nbsp;&nbsp;data: \"foo\",\n&nbsp;&nbsp;&nbsp;&nbsp;timeout: 10000, // 10 second timeout\n&nbsp;&nbsp;&nbsp;&nbsp;context: Y, // make the YUI instance\n&nbsp;&nbsp;&nbsp;&nbsp;// win: otherframe // target another window/frame\n&nbsp;&nbsp;&nbsp;&nbsp;autopurge: true // allow the utility to choose when to remove the nodes\n&nbsp;&nbsp;&nbsp;&nbsp;purgetheshold: 1 // purge previous transaction before next transaction\n&nbsp;&nbsp;&#125;);\n</pre>", "type": "method", "description": "Fetches and inserts one or more script nodes into the head\nof the current document or the document in a specified window."}, {"name": "scriptCallbackParam", "url": "DataSource.Get.html#config_scriptCallbackParam", "access": "", "host": "DataSource.Get", "params": "", "type": "config", "description": "Callback string parameter name sent to the remote script. By default,\nrequests are sent to\n&#60;URI&#62;?&#60;scriptCallbackParam&#62;=callbackFunction"}, {"name": "scriptCallbackParamChange", "url": "DataSource.Get.html#event_scriptCallbackParamChange", "access": "", "host": "DataSource.Get", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'scriptCallbackParam' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "scrollDelay", "url": "DD.Scroll.html#config_scrollDelay", "access": "", "host": "DD.Scroll", "params": "", "type": "config", "description": "The number of milliseconds delay to pass to the auto scroller. Default: 235"}, {"name": "scrollDelay", "url": "TreeViewDD.html#config_scrollDelay", "access": "", "host": "TreeViewDD", "params": "", "type": "config", "description": "Delay of the scroll while dragging the TreeNodes."}, {"name": "scrollDelayChange", "url": "DD.Scroll.html#event_scrollDelayChange", "access": "", "host": "DD.Scroll", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'scrollDelay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "scrollDelayChange", "url": "TreeViewDD.html#event_scrollDelayChange", "access": "", "host": "TreeViewDD", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'scrollDelay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "scrollIntoView", "url": "Node.html#method_scrollIntoView", "access": "", "host": "Node", "params": "", "type": "method", "description": "Passes through to DOM method."}, {"name": "scrollIntoView", "url": "Console.html#config_scrollIntoView", "access": "", "host": "Console", "params": "", "type": "config", "description": "When new entries are added to the Console UI, should they be\nscrolled into view?"}, {"name": "scrollIntoView", "url": "Plugin.Console.html#config_scrollIntoView", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "When new entries are added to the Console UI, should they be\nscrolled into view?"}, {"name": "scrollIntoViewChange", "url": "Console.html#event_scrollIntoViewChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'scrollIntoView' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "scrollIntoViewChange", "url": "Plugin.Console.html#event_scrollIntoViewChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'scrollIntoView' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "scrollToLatest", "url": "Console.html#method_scrollToLatest", "access": "", "host": "Console", "params": "", "type": "method", "description": "Scrolls to the most recent entry"}, {"name": "scrollToLatest", "url": "Plugin.Console.html#method_scrollToLatest", "access": "", "host": "Plugin.Console", "params": "", "type": "method", "description": "Scrolls to the most recent entry"}, {"name": "scrubVal", "url": "Node.html#method_scrubVal", "access": "", "host": "Node", "params": "node <any>  The Node instance or an HTMLNode", "type": "method", "description": "Checks Node return values and wraps DOM Nodes as Y.Node instances\nand DOM Collections / Arrays as Y.NodeList instances.\nOther return values just pass thru.  If undefined is returned (e.g. no return)\nthen the Node instance is returned for chainability."}, {"name": "search", "url": "LiveSearch.html#method_search", "access": "protected", "host": "LiveSearch", "params": "event <EventFacade>  search event facade", "type": "method", "description": "Fires the search event."}, {"name": "section", "url": "A.Plugin.IO.html#config_section", "access": "", "host": "A.Plugin.IO", "params": "", "type": "config", "description": "Section where the content will be set in case you are plugging it\non a instace of <a href=\"WidgetStdMod.html\">WidgetStdMod</a>."}, {"name": "sectionChange", "url": "A.Plugin.IO.html#event_sectionChange", "access": "", "host": "A.Plugin.IO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'section' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "secure", "url": "UA.html#property_secure", "access": "", "host": "UA", "params": "", "type": "property", "description": "Set to true if the page appears to be in SSL"}, {"name": "segment", "url": "Test.Wait.html#property_segment", "access": "", "host": "Test.Wait", "params": "", "type": "property", "description": "The segment of code to run when the wait is over."}, {"name": "select", "url": "Node.html#method_select", "access": "", "host": "Node", "params": "", "type": "method", "description": "Passes through to DOM method."}, {"name": "select", "url": "Rating.html#method_select", "access": "", "host": "Rating", "params": "index <Number>  Index to be selected", "type": "method", "description": "Selects the <code>index</code> Rating element."}, {"name": "selectable", "url": "A.Node.html#method_selectable", "access": "", "host": "A.Node", "params": "", "type": "method", "description": "Enables text selection for this element (normalized across browsers)."}, {"name": "selectAll", "url": "WidgetParent.html#method_selectAll", "access": "", "host": "WidgetParent", "params": "", "type": "method", "description": "Selects all children."}, {"name": "selectAll", "url": "TreeData.html#method_selectAll", "access": "", "host": "TreeData", "params": "", "type": "method", "description": "Select all children of the TreeData."}, {"name": "selectChild", "url": "WidgetParent.html#method_selectChild", "access": "", "host": "WidgetParent", "params": "i <Number>  the index of the child to be selected", "type": "method", "description": "Selects the child at the given index (zero-based)."}, {"name": "_selectCurrentDay", "url": "DatePickerSelect.html#method__selectCurrentDay", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Select the current day on the respective input field."}, {"name": "_selectCurrentMonth", "url": "DatePickerSelect.html#method__selectCurrentMonth", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Select the current month on the respective input field."}, {"name": "_selectCurrentValues", "url": "DatePickerSelect.html#method__selectCurrentValues", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Select the current values for the day, month and year to the respective\ninput field."}, {"name": "_selectCurrentYear", "url": "DatePickerSelect.html#method__selectCurrentYear", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Select the current year on the respective input field."}, {"name": "_selectDate", "url": "Calendar.html#method__selectDate", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Select the current date returned by\n<a href=\"Calendar.html#method_getCurrentDate\">getCurrentDate</a>."}, {"name": "selectedIndex", "url": "Rating.html#config_selectedIndex", "access": "", "host": "Rating", "params": "", "type": "config", "description": "Stores the index of the selected element."}, {"name": "selectedIndexChange", "url": "Rating.html#event_selectedIndexChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'selectedIndex' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "selection", "url": "WidgetParent.html#config_selection", "access": "", "host": "WidgetParent", "params": "", "type": "config", "description": "Returns the currently selected child Widget.  If the \n<code>mulitple</code> attribte is set to <code>true</code> will \nreturn an Y.ArrayList instance containing the currently selected \nchildren.  If no children are selected, will return null."}, {"name": "selectionChange", "url": "WidgetParent.html#event_selectionChange", "access": "", "host": "WidgetParent", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'selection' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "selectionEnforce", "url": "AutoComplete.html#event_selectionEnforce", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The selectionEnforce event.", "type": "event", "description": "Handles the selectionEnforce event. Fired if <a href=\"Autocomplete.html#config_forceSelection\">forceSelection</a>\nis enabled and the users input element has been cleared because it did not match one of the results."}, {"name": "_selectItem", "url": "AutoComplete.html#method__selectItem", "access": "protected", "host": "AutoComplete", "params": "elListItem <Node>  The list item to select", "type": "method", "description": "Selects a list item from the query results."}, {"name": "selectMultipleDates", "url": "Calendar.html#config_selectMultipleDates", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "Wether accepts to select multiple dates."}, {"name": "selectMultipleDatesChange", "url": "Calendar.html#event_selectMultipleDatesChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'selectMultipleDates' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_selectNextMonth", "url": "Calendar.html#method__selectNextMonth", "access": "protected", "host": "Calendar", "params": "event <EventFacade> ", "type": "method", "description": "Navigate to the next month. Fired from the next icon on the Calendar\nheader."}, {"name": "_selectPrevMonth", "url": "Calendar.html#method__selectPrevMonth", "access": "protected", "host": "Calendar", "params": "event <EventFacade> ", "type": "method", "description": "Navigate to the previous month. Fired from the previous icon on the\nCalendar header."}, {"name": "selectText", "url": "A.Node.html#method_selectText", "access": "", "host": "A.Node", "params": "start <Number>  The index to start the selection range from, end <Number>  The index to end the selection range at", "type": "method", "description": "Selects a substring of text inside of the input element."}, {"name": "selectWrapperNode", "url": "DatePickerSelect.html#config_selectWrapperNode", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "DOM Node to display the selects of the DatePickerSelect. If not\nspecified try to query using HTML_PARSER an element inside\ncontentBox which matches <code>aui-datepicker-select-wrapper</code>."}, {"name": "selectWrapperNodeChange", "url": "DatePickerSelect.html#event_selectWrapperNodeChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'selectWrapperNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_sendQuery", "url": "AutoComplete.html#method__sendQuery", "access": "protected", "host": "AutoComplete", "params": "query <String>  The query string", "type": "method", "description": "Makes a query request to the data source."}, {"name": "sendQuery", "url": "AutoComplete.html#method_sendQuery", "access": "", "host": "AutoComplete", "params": "query <String>  Query string", "type": "method", "description": "Sends a query request to the data source object."}, {"name": "sendRequest", "url": "DataSource.Local.html#method_sendRequest", "access": "", "host": "DataSource.Local", "params": "request <Object>   An object literal with the following properties:\n<dl>\n<dt><code>request</code></dt>\n<dd>The request to send to the live data source, if any.</dd>\n<dt><code>callback</code></dt>\n<dd>An object literal with the following properties:\n<dl>\n<dt><code>success</code></dt>\n<dd>The function to call when the data is ready.</dd>\n<dt><code>failure</code></dt>\n<dd>The function to call upon a response failure condition.</dd>\n<dt><code>argument</code></dt>\n<dd>Arbitrary data payload that will be passed back to the success and failure handlers.</dd>\n</dl>\n</dd>\n<dt><code>cfg</code></dt>\n<dd>Configuration object, if any.</dd>\n</dl>", "type": "method", "description": "Generates a unique transaction ID and fires <code>request</code> event."}, {"name": "set", "url": "Node.html#method_set", "access": "", "host": "Node", "params": "attr <String>  The attribute to be set., val <any>  The value to set the attribute to.", "type": "method", "description": "Sets an attribute on the Node instance.\nUnless pre-configured (via Node.ATTRS), set hands \noff to the underlying DOM node.  Only valid\nattributes/properties for the node will be set.\nTo set custom attributes use setAttribute."}, {"name": "set", "url": "NodeList.html#method_set", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Called on each Node instance"}, {"name": "set", "url": "StyleSheet.html#method_set", "access": "", "host": "StyleSheet", "params": "sel <String>   the selector string to apply the changes to, css <Object>   Object literal of style properties and new values", "type": "method", "description": "<p>Set style properties for a provided selector string.\nIf the selector includes commas, it will be split into individual\nselectors and applied accordingly.  If the selector string does not\nhave a corresponding rule in the sheet, it will be added.</p>\n<p>The object properties in the second parameter must be the JavaScript\nnames of style properties.  E.g. fontSize rather than font-size.</p>\n<p>The float style property will be set by any of &quot;float&quot;,\n&quot;styleFloat&quot;, or &quot;cssFloat&quot;.</p>"}, {"name": "_set", "url": "Attribute.html#method__set", "access": "protected", "host": "Attribute", "params": "name <String>  The name of the attribute., val <Any>  The value to set the attribute to., opts <Object>  (Optional) Optional event data to be mixed into\nthe event facade passed to subscribers of the attribute's change event.", "type": "method", "description": "Allows setting of readOnly/writeOnce attributes. See <a href=\"#method_set\">set</a> for argument details."}, {"name": "set", "url": "Attribute.html#method_set", "access": "", "host": "Attribute", "params": "name <String>  The name of the attribute. If the \ncurrent value of the attribute is an Object, dot notation can be used\nto set the value of a property within the object (e.g. <code>set(\"x.y.z\", 5)</code>)., value <Any>  The value to set the attribute to., opts <Object>  (Optional) Optional event data to be mixed into\nthe event facade passed to subscribers of the attribute's change event. This \ncan be used as a flexible way to identify the source of a call to set, allowing \nthe developer to distinguish between set called internally by the host, vs. \nset called externally by the application developer.", "type": "method", "description": "Sets the value of an attribute."}, {"name": "set", "url": "Cookie.html#method_set", "access": "", "host": "Cookie", "params": "name <String>  The name of the cookie to set., value <Variant>  The value to set for the cookie., options <Object>  (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nsecure (true/false), and raw (true/false). Setting raw to true indicates\nthat the cookie should not be URI encoded before being set.", "type": "method", "description": "Sets a cookie with a given name and value."}, {"name": "_setActiveHandlesUI", "url": "Resize.html#method__setActiveHandlesUI", "access": "protected", "host": "Resize", "params": "val <boolean>  True to activate the handles, false to deactivate.", "type": "method", "description": "Set the active state of the handles."}, {"name": "_setActiveItem", "url": "plugin.NodeMenuNav.html#method__setActiveItem", "access": "protected", "host": "plugin.NodeMenuNav", "params": "item <Node>  Node instance representing a menuitem or menu label.", "type": "method", "description": "Sets the specified menuitem or menu label as the menu's \nactive descendent."}, {"name": "_setAlignCenter", "url": "WidgetPositionAlign.html#method__setAlignCenter", "access": "protected", "host": "WidgetPositionAlign", "params": "The <boolean | node>  attribute value being set.", "type": "method", "description": "Default setter for center attribute changes. Sets up the appropriate value, and passes \nit through the to the align attribute."}, {"name": "_setAnim", "url": "OverlayContextPanel.html#method__setAnim", "access": "protected", "host": "OverlayContextPanel", "params": "value <Object> ", "type": "method", "description": "Setter for the\n<a href=\"OverlayContextPanel.html#config_anim\">anim</a> attribute."}, {"name": "setAttibute", "url": "DOM.html#method_setAttibute", "access": "", "host": "DOM", "params": "el <String | HTMLElement>  The target element for the attribute., attr <String>  The attribute to set., val <String>  The value of the attribute.", "type": "method", "description": "Provides a normalized attribute interface."}, {"name": "_setAttr", "url": "Attribute.html#method__setAttr", "access": "protected", "host": "Attribute", "params": "name <String>  The name of the attribute., value <Any>  The value to set the attribute to., opts <Object>  (Optional) Optional event data to be mixed into\nthe event facade passed to subscribers of the attribute's change event., force <boolean>  If true, allows the caller to set values for \nreadOnly or writeOnce attributes which have already been set.", "type": "method", "description": "Provides the common implementation for the public set and protected _set methods.\nSee <a href=\"#method_set\">set</a> for argument details."}, {"name": "setAttribute", "url": "Node.html#method_setAttribute", "access": "", "host": "Node", "params": "name <string>  The attribute name, value <string>  The value to set", "type": "method", "description": "Allows setting attributes on DOM nodes, normalizing in some cases.\nThis passes through to the DOM node, allowing for custom attributes."}, {"name": "setAttribute", "url": "NodeList.html#method_setAttribute", "access": "", "host": "NodeList", "params": "name <string>  The attribute name, value <string>  The value to set", "type": "method", "description": "Allows setting attributes on DOM nodes, normalizing in some cases.\nThis passes through to the DOM node, allowing for custom attributes."}, {"name": "setAttrs", "url": "Node.html#method_setAttrs", "access": "", "host": "Node", "params": "attrMap <Object>  an object of name/value pairs to set", "type": "method", "description": "Sets multiple attributes."}, {"name": "_setAttrs", "url": "Attribute.html#method__setAttrs", "access": "protected", "host": "Attribute", "params": "attrs <Object>   An object with attributes name/value pairs.", "type": "method", "description": "Implementation behind the public setAttrs method, to set multiple attribute values."}, {"name": "setAttrs", "url": "Attribute.html#method_setAttrs", "access": "", "host": "Attribute", "params": "attrs <Object>   An object with attributes name/value pairs.", "type": "method", "description": "Sets multiple attribute values."}, {"name": "_setAxis", "url": "SliderBase.html#method__setAxis", "access": "protected", "host": "SliderBase", "params": "v <String>   proposed value for the axis attribute", "type": "method", "description": "Validates the axis is &quot;x&quot; or &quot;y&quot; (case insensitive).\nConverts to lower case for storage."}, {"name": "_setCacheLimit", "url": "Plugin.ConsoleFilters.html#method__setCacheLimit", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "v <Number>   Maximum number of entries", "type": "method", "description": "Setter method for cacheLimit attribute.  Basically a validator to ensure\nnumeric input."}, {"name": "_setChildren", "url": "TreeData.html#method__setChildren", "access": "protected", "host": "TreeData", "params": "v <Array> ", "type": "method", "description": "Setter for <a href=\"TreeData.html#config_children\">children</a>."}, {"name": "_setComponentClassNames", "url": "Component.html#method__setComponentClassNames", "access": "protected", "host": "Component", "params": "", "type": "method", "description": "Set the class names on the Component <code>contentBox</code>."}, {"name": "_setConstrain", "url": "WidgetPositionConstrain.html#method__setConstrain", "access": "protected", "host": "WidgetPositionConstrain", "params": "val <Node | boolean>  The attribute value", "type": "method", "description": "The setter implementation for the \"constrain\" attribute."}, {"name": "_setConstrain2view", "url": "Dialog.html#method__setConstrain2view", "access": "protected", "host": "Dialog", "params": "value <Object>  Object to be passed to the A.DD.Drag constructor.", "type": "method", "description": "Setter for the <a href=\"Dialog.html#config_constrain2view\">constrain2view</a>\nattributte. Plugs or unplugs the DDConstrained plugin on the drag instance."}, {"name": "setContent", "url": "Node.html#method_setContent", "access": "", "host": "Node", "params": "content <String | Y.Node | HTMLElement>  The content to insert", "type": "method", "description": "Replaces the node's current content with the content."}, {"name": "setContent", "url": "NodeList.html#method_setContent", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Called on each Node instance"}, {"name": "setContent", "url": "A.Plugin.IO.html#method_setContent", "access": "", "host": "A.Plugin.IO", "params": "", "type": "method", "description": "Set the content of the <a href=\"A.Plugin.IO.html#config_node\">node</a>."}, {"name": "setData", "url": "Node.html#method_setData", "access": "", "host": "Node", "params": "name <string>  The name of the field to set. If no name\nis given, name is treated as the data and overrides any existing data., val <any>  The value to be assigned to the field.", "type": "method", "description": "Stores arbitrary data on a Node instance.\nThis is not stored with the DOM node."}, {"name": "_setDates", "url": "Calendar.html#method__setDates", "access": "protected", "host": "Calendar", "params": "value <Array> ", "type": "method", "description": "Setter for the <a href=\"Calendar.html#config_dates\">dates</a> attribute."}, {"name": "_setDraggable", "url": "Dialog.html#method__setDraggable", "access": "protected", "host": "Dialog", "params": "value <Object>  Object to be passed to the A.DD.Drag constructor.", "type": "method", "description": "Setter for the <a href=\"Dialog.html#config_draggable\">draggable</a>\nattributte. Initialize the A.DD.Drag on the Dialog."}, {"name": "setHeight", "url": "DOM.html#method_setHeight", "access": "", "host": "DOM", "params": "element <HTMLElement>  The DOM element., size <String|Int>  The pixel height to size to", "type": "method", "description": "Sets the height of the element to the given size, regardless\nof box model, border, padding, etc."}, {"name": "_setHideHandlesUI", "url": "Resize.html#method__setHideHandlesUI", "access": "protected", "host": "Resize", "params": "val <boolean>  True to hide the handles, false to show.", "type": "method", "description": "Set the visibility of the handles."}, {"name": "_setHideOn", "url": "OverlayContext.html#method__setHideOn", "access": "protected", "host": "OverlayContext", "params": "eventType <String>  Event type", "type": "method", "description": "Setter for the <a href=\"OverlayContext.html#config_hideOn\">hideOn</a>\nattribute."}, {"name": "_setInput", "url": "Editable.html#method__setInput", "access": "protected", "host": "Editable", "params": "value <String>  Value of the input.", "type": "method", "description": "Set the value of the <a\nhref=\"Editable.html#property_inputNode\">inputNode</a>."}, {"name": "setInterval", "url": "Pollable.html#method_setInterval", "access": "", "host": "Pollable", "params": "msec <Number>   Length of interval in milliseconds., request <Object>   An object literal with the following properties:\n<dl>\n<dt><code>request</code></dt>\n<dd>The request to send to the live data source, if any.</dd>\n<dt><code>callback</code></dt>\n<dd>An object literal with the following properties:\n<dl>\n<dt><code>success</code></dt>\n<dd>The function to call when the data is ready.</dd>\n<dt><code>failure</code></dt>\n<dd>The function to call upon a response failure condition.</dd>\n<dt><code>argument</code></dt>\n<dd>Arbitrary data payload that will be passed back to the success and failure handlers.</dd>\n</dl>\n</dd>\n<dt><code>cfg</code></dt>\n<dd>Configuration object, if any.</dd>\n</dl>", "type": "method", "description": "Sets up a polling mechanism to send requests at set intervals and\nforward responses to given callback."}, {"name": "_setIO", "url": "TreeNodeIO.html#method__setIO", "access": "protected", "host": "TreeNodeIO", "params": "v <Object> ", "type": "method", "description": "Setter for <a href=\"TreeNodeIO.html#config_io\">io</a>."}, {"name": "_setIOData", "url": "IORequest.html#method__setIOData", "access": "protected", "host": "IORequest", "params": "value <Object> ", "type": "method", "description": "Applies the <code>YUI.AUI.defaults.io.dataFormatter</code> if defined."}, {"name": "setLang", "url": "Intl.html#method_setLang", "access": "", "host": "Intl", "params": "module <String>  The module name., lang <String>  The BCP 47 language tag.", "type": "method", "description": "Sets the active language for the given module.\nReturns false on failure, which would happen if the language had not been registered through the <a href=\"#method_add\">add()</a> method."}, {"name": "_setLength", "url": "SliderBase.html#method__setLength", "access": "protected", "host": "SliderBase", "params": "v <String>   proposed value for the length attribute", "type": "method", "description": "Ensures the stored length value is a string with a quantity and unit.\nUnit will be defaulted to &quot;px&quot; if not included.  Rejects\nvalues less than or equal to 0 and those that don't at least start with\na number."}, {"name": "_setLoadingUI", "url": "A.Plugin.IO.html#method__setLoadingUI", "access": "protected", "host": "A.Plugin.IO", "params": "show <boolean> ", "type": "method", "description": "Whether the <code>show</code> is true show the LoadingMask."}, {"name": "_setLogLevel", "url": "Console.html#method__setLogLevel", "access": "protected", "host": "Console", "params": "v <String>   the desired log level", "type": "method", "description": "Setter method for logLevel attribute.  Acceptable values are\n&quot;error&quot, &quot;warn&quot, and &quot;info&quot (case\ninsensitive).  Other values are treated as &quot;info&quot;."}, {"name": "_setLogLevel", "url": "Plugin.Console.html#method__setLogLevel", "access": "protected", "host": "Plugin.Console", "params": "v <String>   the desired log level", "type": "method", "description": "Setter method for logLevel attribute.  Acceptable values are\n&quot;error&quot, &quot;warn&quot, and &quot;info&quot (case\ninsensitive).  Other values are treated as &quot;info&quot;."}, {"name": "_setMaxLength", "url": "CharCounter.html#method__setMaxLength", "access": "protected", "host": "CharCounter", "params": "v <Number>  Value of the new <a\nhref=\"CharCounter.html#config_maxLenght\">maxLenght</a>.", "type": "method", "description": "Setter for <a href=\"CharCounter.html#config_maxLength\">maxLength</a>."}, {"name": "_setMinMaxDate", "url": "Calendar.html#method__setMinMaxDate", "access": "protected", "host": "Calendar", "params": "value <Date> ", "type": "method", "description": "Setter for the <a href=\"Calendar.html#config_maxDates\">maxDates</a> or\n<a href=\"Calendar.html#config_mainDates\">minDates</a> attributes."}, {"name": "_setModal", "url": "Dialog.html#method__setModal", "access": "protected", "host": "Dialog", "params": "value <boolean> ", "type": "method", "description": "Setter for the <a href=\"Dialog.html#config_modal\">modal</a> attribute."}, {"name": "setName", "url": "Test.Runner.html#method_setName", "access": "", "host": "Test.Runner", "params": "name <String>  The name of the result set.", "type": "method", "description": "The name assigned to the master suite of the TestRunner. This is the name\nthat is output as the root's name when results are retrieved."}, {"name": "_setNewValue", "url": "SliderValueRange.html#method__setNewValue", "access": "protected", "host": "SliderValueRange", "params": "value < Number >   Value assigned to <code>value</code> attribute", "type": "method", "description": "Restricts new values assigned to <code>value</code> attribute to be\nbetween the configured <code>min</code> and <code>max</code>.\nRounds to nearest integer value."}, {"name": "_setNodes", "url": "LiveSearch.html#method__setNodes", "access": "protected", "host": "LiveSearch", "params": "v <Node | NodeList | String> ", "type": "method", "description": "Setter for <a href=\"LiveSearch.html#config_nodes\">nodes</a>."}, {"name": "_setOffset", "url": "Resize.html#method__setOffset", "access": "protected", "host": "Resize", "params": "node <Node>  Node, offsetWidth <number> , offsetHeight <number> ", "type": "method", "description": "Set offsetWidth and offsetHeight of the passed node."}, {"name": "_setOpacity", "url": "OverlayMask.html#method__setOpacity", "access": "protected", "host": "OverlayMask", "params": "v <Number> ", "type": "method", "description": "Setter for <a href=\"Paginator.html#config_opacity\">opacity</a>."}, {"name": "_setOutput", "url": "Editable.html#method__setOutput", "access": "protected", "host": "Editable", "params": "value <String> ", "type": "method", "description": "Set the <code>innerHTML</code> of the <a\nhref=\"Editable.html#config_node\">node</a>."}, {"name": "_setPosition", "url": "SliderValueRange.html#method__setPosition", "access": "protected", "host": "SliderValueRange", "params": "", "type": "method", "description": "Positions the thumb in accordance with the translated value."}, {"name": "_setPosition", "url": "YUI.html#method__setPosition", "access": "protected", "host": "YUI", "params": "", "type": "method", "description": "Positions the Drag element in accordance with the translated value."}, {"name": "_setResizable", "url": "Dialog.html#method__setResizable", "access": "protected", "host": "Dialog", "params": "value <boolean> ", "type": "method", "description": "Setter for the <a href=\"Dialog.html#config_resizable\">resizable</a>\nattribute."}, {"name": "_setResponseData", "url": "IORequest.html#method__setResponseData", "access": "protected", "host": "IORequest", "params": "xhr <Object>  XHR Object.", "type": "method", "description": "Setter for <a href=\"IORequest.html#config_responseData\">responseData</a>."}, {"name": "_setSelection", "url": "WidgetParent.html#method__setSelection", "access": "protected", "host": "WidgetParent", "params": "child <Widget|Array>   Widget or Array of Widget instances.", "type": "method", "description": "Default setter for <code>selection</code> attribute changes."}, {"name": "_setShowOn", "url": "OverlayContext.html#method__setShowOn", "access": "protected", "host": "OverlayContext", "params": "eventType <String>  Event type", "type": "method", "description": "Setter for the <a href=\"OverlayContext.html#config_showOn\">showOn</a>\nattribute."}, {"name": "_setStack", "url": "Calendar.html#method__setStack", "access": "protected", "host": "Calendar", "params": "value <boolean> ", "type": "method", "description": "Setter for the <a href=\"Calendar.html#config_stack\">stack</a> attribute."}, {"name": "_setStack", "url": "Dialog.html#method__setStack", "access": "protected", "host": "Dialog", "params": "value <boolean> ", "type": "method", "description": "Setter for the <a href=\"Dialog.html#config_stack\">stack</a>\nattribute."}, {"name": "_setStack", "url": "OverlayContextPanel.html#method__setStack", "access": "protected", "host": "OverlayContextPanel", "params": "value <boolean> ", "type": "method", "description": "Setter for the\n<a href=\"OverlayContextPanel.html#config_stack\">stack</a> attribute."}, {"name": "_setState", "url": "Paginator.html#method__setState", "access": "protected", "host": "Paginator", "params": "v <Object>  New state object.", "type": "method", "description": "Private setter for <a href=\"Paginator.html#config_state\">state</a>."}, {"name": "setState", "url": "Paginator.html#method_setState", "access": "", "host": "Paginator", "params": "v <Object>  New state object.", "type": "method", "description": "Public setter for <a href=\"Paginator.html#config_state\">state</a>."}, {"name": "setStdModContent", "url": "WidgetStdMod.html#method_setStdModContent", "access": "", "host": "WidgetStdMod", "params": "section <String>  The standard module section whose content is to be updated. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER., content <String | Node>  The content to be added, either an HTML string or a Node reference., where <String>  Optional. Either WidgetStdMod.AFTER, WidgetStdMod.BEFORE or WidgetStdMod.REPLACE.\nIf not provided, the content will replace existing content in the section.", "type": "method", "description": "Updates the body section of the standard module with the content provided (either an HTML string, or node reference).\n<p>\nThis method can be used instead of the corresponding section content attribute if you'd like to retain the current content of the section,\nand insert content before or after it, by specifying the <code>where</code> argument.\n</p>"}, {"name": "setStyle", "url": "Node.html#method_setStyle", "access": "", "host": "Node", "params": "attr <String>  The style attribute to set., val <String|Number>  The value.", "type": "method", "description": "Sets a style property of the node."}, {"name": "setStyle", "url": "NodeList.html#method_setStyle", "access": "", "host": "NodeList", "params": "attr <String>  The style attribute to set., val <String|Number>  The value.", "type": "method", "description": "Sets a style property on each node."}, {"name": "setStyle", "url": "DOM.html#method_setStyle", "access": "", "host": "DOM", "params": "An <HTMLElement>  HTMLElement to apply the style to., att <String>  The style property to set., val <String|Number>  The value.", "type": "method", "description": "Sets a style property for a given element."}, {"name": "setStyles", "url": "Node.html#method_setStyles", "access": "", "host": "Node", "params": "hash <Object>  An object literal of property:value pairs.", "type": "method", "description": "Sets multiple style properties on the node."}, {"name": "setStyles", "url": "NodeList.html#method_setStyles", "access": "", "host": "NodeList", "params": "hash <Object>  An object literal of property:value pairs.", "type": "method", "description": "Sets multiple style properties on each node."}, {"name": "setStyles", "url": "DOM.html#method_setStyles", "access": "", "host": "DOM", "params": "node <HTMLElement>  An HTMLElement to apply the styles to., hash <Object>  An object literal of property:value pairs.", "type": "method", "description": "Sets multiple style properties."}, {"name": "setSub", "url": "Cookie.html#method_setSub", "access": "", "host": "Cookie", "params": "name <String>  The name of the cookie to set., subName <String>  The name of the subcookie to set., value <Variant>  The value to set., options <Object>  (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nand secure (true/false).", "type": "method", "description": "Sets a sub cookie with a given name to a particular value."}, {"name": "setSubs", "url": "Cookie.html#method_setSubs", "access": "", "host": "Cookie", "params": "name <String>  The name of the cookie to set., value <Object>  An object containing name-value pairs., options <Object>  (Optional) An object containing one or more\ncookie options: path (a string), domain (a string), expires (a Date object),\nand secure (true/false).", "type": "method", "description": "Sets a cookie with a given name to contain a hash of name-value pairs."}, {"name": "setText", "url": "DOM.html#method_setText", "access": "", "host": "DOM", "params": "element <HTMLElement>  The html element., content <String>  The content to add.", "type": "method", "description": "Sets the text content of the HTMLElement."}, {"name": "_setThumbContent", "url": "ImageGallery.html#method__setThumbContent", "access": "protected", "host": "ImageGallery", "params": "pageEl <Node> , pageNumber <Number> ", "type": "method", "description": "See <a href=\"Paginator.html#method_pageLinkContent\">pageLinkContent</a>."}, {"name": "_setTitle", "url": "ButtonItem.html#method__setTitle", "access": "protected", "host": "ButtonItem", "params": "", "type": "method", "description": "Setter for the title attribute"}, {"name": "_setTotal", "url": "Paginator.html#method__setTotal", "access": "protected", "host": "Paginator", "params": "v <Number> ", "type": "method", "description": "Setter for <a href=\"Paginator.html#config_total\">total</a>."}, {"name": "setUp", "url": "Test.Case.html#method_setUp", "access": "", "host": "Test.Case", "params": "", "type": "method", "description": "Function to run before each test is executed."}, {"name": "setUp", "url": "Test.Suite.html#method_setUp", "access": "", "host": "Test.Suite", "params": "", "type": "method", "description": "Function to run before each test is executed."}, {"name": "_setUseBrowserConsole", "url": "Console.html#method__setUseBrowserConsole", "access": "protected", "host": "Console", "params": "v <Boolean>   false to disable browser console printing (default)", "type": "method", "description": "Setter method for useBrowserConsole attributes.  Only functional if the\nlogSource attribute points to a YUI instance.  Passes the value down to\nthe YUI instance.  NOTE: multiple Console instances cannot maintain\nindependent useBrowserConsole values, since it is just a pass through to\nthe YUI instance configuration."}, {"name": "_setUseBrowserConsole", "url": "Plugin.Console.html#method__setUseBrowserConsole", "access": "protected", "host": "Plugin.Console", "params": "v <Boolean>   false to disable browser console printing (default)", "type": "method", "description": "Setter method for useBrowserConsole attributes.  Only functional if the\nlogSource attribute points to a YUI instance.  Passes the value down to\nthe YUI instance.  NOTE: multiple Console instances cannot maintain\nindependent useBrowserConsole values, since it is just a pass through to\nthe YUI instance configuration."}, {"name": "setValue", "url": "Calendar.html#config_setValue", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "If true set the selected date with the correct\n<a href=\"Calendar.html#config_dateFormat\">dateFormat</a> to the\nvalue of the input field which is hosting the Calendar."}, {"name": "setValue", "url": "DatePickerSelect.html#config_setValue", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "Inherited from\n<a href=\"Calendar.html#config_setValue\">Calendar</a>."}, {"name": "setValue", "url": "SliderValueRange.html#method_setValue", "access": "", "host": "SliderValueRange", "params": "val <Number>   The new value", "type": "method", "description": "Updates the current value.  Override this if you want to introduce\ninput value parsing or preprocessing.  Otherwise equivalent to\nslider.set( \"value\", v );"}, {"name": "setValue", "url": "Object.html#method_setValue", "access": "", "host": "Object", "params": "o <Object>              The object on which to set the sub value., path <Array>    A path array, specifying the object traversal path\nat which to set the sub value., val <Any>       The new value for the sub-attribute.", "type": "method", "description": "Sets the sub-attribute value at the provided path on the \nvalue object.  Returns the modified value object, or \nundefined if the path is invalid."}, {"name": "setValueChange", "url": "Calendar.html#event_setValueChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'setValue' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "setValueChange", "url": "DatePickerSelect.html#event_setValueChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'setValue' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "setVisible", "url": "ImgLoadImgObj.html#config_setVisible", "access": "", "host": "ImgLoadImgObj", "params": "", "type": "config", "description": "Whether the image's <code>style.visibility</code> should be set to <code>visible</code> after the image is fetched.\nUsed when setting images as <code>visibility:hidden</code> prior to image fetching."}, {"name": "setVisibleChange", "url": "ImgLoadImgObj.html#event_setVisibleChange", "access": "", "host": "ImgLoadImgObj", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'setVisible' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "setWidth", "url": "DOM.html#method_setWidth", "access": "", "host": "DOM", "params": "element <HTMLElement>  The DOM element., size <String|Int>  The pixel height to size to", "type": "method", "description": "Sets the width of the element to the given size, regardless\nof box model, border, padding, etc."}, {"name": "setX", "url": "Node.html#method_setX", "access": "", "host": "Node", "params": "x <Int>  X value for new position (coordinates are page-based)", "type": "method", "description": "Set the position of the node in page coordinates, regardless of how the node is positioned."}, {"name": "_setX", "url": "WidgetPosition.html#method__setX", "access": "", "host": "WidgetPosition", "params": "val <Number>  The X page co-ordinate value", "type": "method", "description": "Default setter for the X attribute. The setter passes the X value through\nto the XY attribute, which is the sole store for the XY state."}, {"name": "setX", "url": "DOM.html#method_setX", "access": "", "host": "DOM", "params": "element <Object>  The target element, x <Int>  The X values for new position (coordinates are page-based)", "type": "method", "description": "Set the X position of an html element in page coordinates, regardless of how the element is positioned.\nThe element(s) must be part of the DOM tree to have page coordinates (display:none or elements not appended return false)."}, {"name": "setXY", "url": "Node.html#method_setXY", "access": "", "host": "Node", "params": "xy <Array>  Contains X & Y values for new position (coordinates are page-based)", "type": "method", "description": "Set the position of the node in page coordinates, regardless of how the node is positioned."}, {"name": "setXY", "url": "DOM.html#method_setXY", "access": "", "host": "DOM", "params": "element <Object>  The target element, xy <Array>  Contains X & Y values for new position (coordinates are page-based), noRetry <Boolean>  By default we try and set the position a second time if the first fails", "type": "method", "description": "Set the position of an html element in page coordinates.\nThe element must be part of the DOM tree to have page coordinates (display:none or elements not appended return false)."}, {"name": "setY", "url": "Node.html#method_setY", "access": "", "host": "Node", "params": "y <Int>  Y value for new position (coordinates are page-based)", "type": "method", "description": "Set the position of the node in page coordinates, regardless of how the node is positioned."}, {"name": "_setY", "url": "WidgetPosition.html#method__setY", "access": "", "host": "WidgetPosition", "params": "val <Number>  The Y page co-ordinate value", "type": "method", "description": "Default setter for the Y attribute. The setter passes the Y value through\nto the XY attribute, which is the sole store for the XY state."}, {"name": "setY", "url": "DOM.html#method_setY", "access": "", "host": "DOM", "params": "element <Object>  The target element, y <Int>  The Y values for new position (coordinates are page-based)", "type": "method", "description": "Set the Y position of an html element in page coordinates, regardless of how the element is positioned.\nThe element(s) must be part of the DOM tree to have page coordinates (display:none or elements not appended return false)."}, {"name": "_setZIndex", "url": "WidgetStack.html#method__setZIndex", "access": "protected", "host": "WidgetStack", "params": "zIndex <String | Number> ", "type": "method", "description": "Default setter for zIndex attribute changes. Normalizes zIndex values to \nnumbers, converting non-numerical values to 0."}, {"name": "shim", "url": "WidgetStack.html#config_shim", "access": "", "host": "WidgetStack", "params": "", "type": "config", "description": "Boolean flag to indicate whether or not a shim should be added to the Widgets\nboundingBox, to protect it from select box bleedthrough."}, {"name": "shim", "url": "DD.Drop.html#property_shim", "access": "", "host": "DD.Drop", "params": "", "type": "property", "description": "Node reference to the targets shim"}, {"name": "shim", "url": "OverlayMask.html#config_shim", "access": "", "host": "OverlayMask", "params": "", "type": "config", "description": "Use shim option."}, {"name": "shimChange", "url": "WidgetStack.html#event_shimChange", "access": "", "host": "WidgetStack", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "shimChange", "url": "OverlayMask.html#event_shimChange", "access": "", "host": "OverlayMask", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'shim' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Shim.CLASS_NAME", "url": "Plugin.Shim.html#property_Shim.CLASS_NAME", "access": "", "host": "Plugin.Shim", "params": "", "type": "property", "description": "Default class used to mark the shim element"}, {"name": "Shim.TEMPLATE", "url": "Plugin.Shim.html#property_Shim.TEMPLATE", "access": "", "host": "Plugin.Shim", "params": "", "type": "property", "description": "Default markup template used to generate the shim element."}, {"name": "shorthand", "url": "Selector.html#property_shorthand", "access": "", "host": "Selector", "params": "", "type": "property", "description": "Mapping of shorthand tokens to corresponding attribute selector"}, {"name": "_should", "url": "Test.Case.html#property__should", "access": "", "host": "Test.Case", "params": "", "type": "property", "description": "Special rules for the test case. Possible subobjects\nare fail, for tests that should fail, and error, for\ntests that should throw an error."}, {"name": "show", "url": "LoadingMask.html#method_show", "access": "", "host": "LoadingMask", "params": "", "type": "method", "description": "Invoke the\n<a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>\n<code>show</code> method."}, {"name": "show", "url": "Widget.html#method_show", "access": "", "host": "Widget", "params": "", "type": "method", "description": "Shows the Widget by setting the \"visible\" attribute to \"true\"."}, {"name": "show", "url": "LiveSearch.html#config_show", "access": "", "host": "LiveSearch", "params": "", "type": "config", "description": "Function to be executed to show the node when the data of that node\nmatches with the filter."}, {"name": "show", "url": "ImageViewer.html#method_show", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Show the ImageViewer UI."}, {"name": "show", "url": "ImageGallery.html#method_show", "access": "", "host": "ImageGallery", "params": "", "type": "method", "description": "<p>Show the ImageGallery.</p>\n<p><strong>NOTE:</strong>Overloads the <a\nhref=\"ImageViewer.html\">ImageViewer</a> show method to not loadImage, the\nchangeRequest now is responsible to do that if we invoke the superclass\nshow method its loading the image, and the changeRequest loads again,\navoiding double request.</p>"}, {"name": "show", "url": "Tooltip.html#method_show", "access": "", "host": "Tooltip", "params": "", "type": "method", "description": "Over-ride the <code>show</code> to invoke the\n<a href=\"Tooltip.html#method__loadBodyContentFromTitle\">_loadBodyContentFromTitle</a>.\nSee <a href=\"OverlayContext.html#config_show\">OverlayContext show</a>."}, {"name": "show", "url": "A.Node.html#method_show", "access": "", "host": "A.Node", "params": "cssClass <string>  Class name to hide the element. Optional.", "type": "method", "description": "<p>Show the node removing a css class used to hide it. Use the same\nclassName added using the <a href=\"A.Node.html#method_hide\">hide</a>\nmethod. If <code>cssClass</code> is not passed as argument, the\nclassName 'aui-helper-hidden' will be used by default.</p>\n<p><string>NOTE:</string> This method assume that your node were hidden\nbecause of the 'aui-helper-hidden' css class were being used. This won't\nmanipulate the inline <code>style.display</code> property.</p>"}, {"name": "showAll", "url": "OverlayManager.html#method_showAll", "access": "", "host": "OverlayManager", "params": "", "type": "method", "description": "Invoke the <a href=\"Overlay.html#method_show\">show</a> method from\nall registered Overlays."}, {"name": "showArrow", "url": "OverlayContextPanel.html#config_showArrow", "access": "", "host": "OverlayContextPanel", "params": "", "type": "config", "description": "If true the OverlayContextPanel will show an arrow positioned on the\n<a href=\"OverlayContextPanel.html#config_arrow\">arrow</a> point."}, {"name": "showArrowChange", "url": "OverlayContextPanel.html#event_showArrowChange", "access": "", "host": "OverlayContextPanel", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'showArrow' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "showArrows", "url": "ImageViewer.html#config_showArrows", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "Show the arrow controls."}, {"name": "showArrowsChange", "url": "ImageViewer.html#event_showArrowsChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'showArrows' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "showCategory", "url": "Plugin.ConsoleFilters.html#method_showCategory", "access": "", "host": "Plugin.ConsoleFilters", "params": "cat* <String>   1..n categories to allow to display in the UI", "type": "method", "description": "Shows any number of categories in the UI.  Convenience method for\nmyConsole.filter.set('category.foo', true); set('category.bar', true);\nand so on."}, {"name": "showChange", "url": "LiveSearch.html#event_showChange", "access": "", "host": "LiveSearch", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'show' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "showClose", "url": "ImageViewer.html#config_showClose", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "Show close icon control."}, {"name": "showCloseChange", "url": "ImageViewer.html#event_showCloseChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'showClose' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "showDelay", "url": "OverlayContext.html#config_showDelay", "access": "", "host": "OverlayContext", "params": "", "type": "config", "description": "Number of milliseconds after the show method is invoked to show the\nOverlayContext."}, {"name": "showDelayChange", "url": "OverlayContext.html#event_showDelayChange", "access": "", "host": "OverlayContext", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'showDelay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "showLoading", "url": "ImageViewer.html#method_showLoading", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Show the loading icon."}, {"name": "showLoading", "url": "A.Plugin.IO.html#method_showLoading", "access": "", "host": "A.Plugin.IO", "params": "", "type": "method", "description": "Invoke the <a href=\"OverlayMask.html#method_show\">OverlayMask show</a> method."}, {"name": "showLoading", "url": "A.Plugin.IO.html#config_showLoading", "access": "", "host": "A.Plugin.IO", "params": "", "type": "config", "description": "Show the <a href=\"LoadingMask.html\">LoadingMask</a> covering the <a\nhref=\"A.Plugin.IO.html#config_node\">node</a> while loading."}, {"name": "showLoadingChange", "url": "A.Plugin.IO.html#event_showLoadingChange", "access": "", "host": "A.Plugin.IO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'showLoading' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "showMask", "url": "ImageViewer.html#method_showMask", "access": "", "host": "ImageViewer", "params": "", "type": "method", "description": "Show the the OverlayMask used on the <a\nhref=\"ImageViewer.html#config_modal\">modal</a>."}, {"name": "_showMenu", "url": "plugin.NodeMenuNav.html#method__showMenu", "access": "protected", "host": "plugin.NodeMenuNav", "params": "menu <Node>  Node instance representing a menu.", "type": "method", "description": "Shows the specified menu."}, {"name": "showOn", "url": "OverlayContext.html#config_showOn", "access": "", "host": "OverlayContext", "params": "", "type": "config", "description": "The event which is responsible to show the OverlayContext."}, {"name": "showOn", "url": "OverlayContextPanel.html#config_showOn", "access": "", "host": "OverlayContextPanel", "params": "", "type": "config", "description": "See <a href=\"OverlayContext.html#config_showOn\">showOn</a>."}, {"name": "showOn", "url": "Tooltip.html#config_showOn", "access": "", "host": "Tooltip", "params": "", "type": "config", "description": "See <a href=\"OverlayContext.html#config_showOn\">OverlayContext showOn</a>."}, {"name": "showOnChange", "url": "OverlayContext.html#event_showOnChange", "access": "", "host": "OverlayContext", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "showOnChange", "url": "OverlayContextPanel.html#event_showOnChange", "access": "", "host": "OverlayContextPanel", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "showOnChange", "url": "Tooltip.html#event_showOnChange", "access": "", "host": "Tooltip", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'showOn' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "showPaginator", "url": "ImageGallery.html#method_showPaginator", "access": "", "host": "ImageGallery", "params": "", "type": "method", "description": "Show the <a href=\"Paginator.html\">Paginator</a> with the thumbnails\nlist."}, {"name": "showPlayer", "url": "ImageGallery.html#config_showPlayer", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "Show the player controls (i.e., pause and show buttons)."}, {"name": "showPlayerChange", "url": "ImageGallery.html#event_showPlayerChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'showPlayer' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "showSource", "url": "Plugin.ConsoleFilters.html#method_showSource", "access": "", "host": "Plugin.ConsoleFilters", "params": "src* <String>   1..n sources to allow to display in the UI", "type": "method", "description": "Shows any number of sources in the UI.  Convenience method for\nmyConsole.filter.set('source.foo', true); set('source.bar', true);\nand so on."}, {"name": "_showSubmenuTimer", "url": "plugin.NodeMenuNav.html#property__showSubmenuTimer", "access": "protected", "host": "plugin.NodeMenuNav", "params": "", "type": "property", "description": "Timer used to show a submenu."}, {"name": "showTitle", "url": "Rating.html#config_showTitle", "access": "", "host": "Rating", "params": "", "type": "config", "description": "If <code>true</code> will extract the value of the\n<code>title</code> attribute on the radio, and use it on the\ngenerated Rating elements."}, {"name": "showTitleChange", "url": "Rating.html#event_showTitleChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'showTitle' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "siblings", "url": "Node.html#method_siblings", "access": "", "host": "Node", "params": "fn <String | Function>  A selector or boolean method for testing elements.\nIf a function is used, it receives the current node being tested as the only argument.", "type": "method", "description": "Returns all matching siblings. \nReturns all siblings if no method provided."}, {"name": "signature", "url": "CustomEvent.html#property_signature", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "Supports multiple options for listener signatures in order to\nport YUI 2 apps."}, {"name": "silent", "url": "CustomEvent.html#property_silent", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "By default all custom events are logged in the debug build, set silent\nto true to disable debug outpu for this event."}, {"name": "simulate", "url": "YUI.html#method_simulate", "access": "", "host": "YUI", "params": "target <HTMLElement>  The DOM element that's the target of the event., type <String>  The type of event to simulate (i.e., \"click\")., options <Object>  (Optional) Extra options to copy onto the event object.", "type": "method", "description": "Simulates the event with the given name on a target."}, {"name": "size", "url": "Node.html#method_size", "access": "", "host": "Node", "params": "", "type": "method", "description": "Returns the current number of items in the Node."}, {"name": "size", "url": "NodeList.html#method_size", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Returns the current number of items in the NodeList."}, {"name": "size", "url": "Cache.html#config_size", "access": "", "host": "Cache", "params": "", "type": "config", "description": "Number of entries currently cached."}, {"name": "size", "url": "AsyncQueue.html#method_size", "access": "", "host": "AsyncQueue", "params": "", "type": "method", "description": "Returns the number of callbacks in the queue."}, {"name": "size", "url": "io.html#method_size", "access": "", "host": "io", "params": "i <number>  - Specified maximum size of queue.", "type": "method", "description": "Method to query the current size of the queue, or to\nset a maximum queue size.  This is the interface for _size()."}, {"name": "size", "url": "Rating.html#config_size", "access": "", "host": "Rating", "params": "", "type": "config", "description": "Number of Rating elements to be displayed."}, {"name": "size", "url": "ThumbRating.html#config_size", "access": "", "host": "ThumbRating", "params": "", "type": "config", "description": "The size on ThumbRating is always 2 (i.e., thumb up and thumb down)."}, {"name": "size", "url": "ArrayList.html#method_size", "access": "", "host": "ArrayList", "params": "", "type": "method", "description": "How many items are in this list?"}, {"name": "size", "url": "Queue.html#method_size", "access": "", "host": "Queue", "params": "", "type": "method", "description": "Returns the current number of queued items"}, {"name": "size", "url": "Object.html#method_size", "access": "", "host": "Object", "params": "o <Object>  an object", "type": "method", "description": "Returns the size of an object"}, {"name": "sizeChange", "url": "Cache.html#event_sizeChange", "access": "", "host": "Cache", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'size' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "sizeChange", "url": "Rating.html#event_sizeChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'size' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "sizeChange", "url": "ThumbRating.html#event_sizeChange", "access": "", "host": "ThumbRating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'size' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "sizeShim", "url": "WidgetStack.html#method_sizeShim", "access": "", "host": "WidgetStack", "params": "", "type": "method", "description": "For IE6, synchronizes the size and position of iframe shim to that of \nWidget bounding box which it is protecting. For all other browsers,\nthis method does not do anything."}, {"name": "sizeShim", "url": "DD.Drop.html#method_sizeShim", "access": "", "host": "DD.Drop", "params": "", "type": "method", "description": "Positions and sizes the shim with the raw data from the node, this can be used to programatically adjust the Targets shim for Animation.."}, {"name": "sizingMethod", "url": "ImgLoadImgObj.html#config_sizingMethod", "access": "", "host": "ImgLoadImgObj", "params": "", "type": "config", "description": "AlphaImageLoader <code>sizingMethod</code> property to be set for the image.\nOnly set if <code>isPng</code> value for this image is set to <code>true</code>.\nDefaults to <code>scale</code>."}, {"name": "sizingMethodChange", "url": "ImgLoadImgObj.html#event_sizingMethodChange", "access": "", "host": "ImgLoadImgObj", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'sizingMethod' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "skin", "url": "Loader.html#property_skin", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Provides the information used to skin the skinnable components.\nThe following skin definition would result in 'skin1' and 'skin2'\nbeing loaded for calendar (if calendar was requested), and\n'sam' for all other skinnable components:\n<code>\nskin: {\n// The default skin, which is automatically applied if not\n// overriden by a component-specific skin definition.\n// Change this in to apply a different skin globally\ndefaultSkin: 'sam', \n// This is combined with the loader base property to get\n// the default root directory for a skin. ex:\n// http://yui.yahooapis.com/2.3.0/build/assets/skins/sam/\nbase: 'assets/skins/',\n// Any component-specific overrides can be specified here,\n// making it possible to load different skins for different\n// components.  It is possible to load more than one skin\n// for a given component as well.\noverrides: {\ncalendar: ['skin1', 'skin2']\n}\n}\n</code>"}, {"name": "skin", "url": "config.html#property_skin", "access": "", "host": "config", "params": "", "type": "property", "description": "The 'skin' config let's you configure application level skin\ncustomizations.  It contains the following attributes which\ncan be specified to override the defaults:\n// The default skin, which is automatically applied if not\n// overriden by a component-specific skin definition.\n// Change this in to apply a different skin globally\ndefaultSkin: 'sam', \n// This is combined with the loader base property to get\n// the default root directory for a skin.\nbase: 'assets/skins/',\n// Any component-specific overrides can be specified here,\n// making it possible to load different skins for different\n// components.  It is possible to load more than one skin\n// for a given component as well.\noverrides: {\nslider: ['capsule', 'round']\n}\nFor dynamic loading."}, {"name": "skipped", "url": "Loader.html#property_skipped", "access": "", "host": "Loader", "params": "", "type": "property", "description": "List of skipped modules during insert() because the module\nwas not defined"}, {"name": "SliderBase.ATTRS", "url": "SliderBase.html#property_SliderBase.ATTRS", "access": "protected", "host": "SliderBase", "params": "", "type": "property", "description": "Static property used to define the default attribute configuration of\nthe Widget."}, {"name": "SliderBase.NAME", "url": "SliderBase.html#property_SliderBase.NAME", "access": "protected", "host": "SliderBase", "params": "", "type": "property", "description": "The identity of the widget."}, {"name": "slideStart", "url": "SliderBase.html#event_slideStart", "access": "", "host": "SliderBase", "params": "event <Event>   The event object for the slideStart with the\nfollowing extra properties:\n<dl>\n<dt>ddEvent</dt>\n<dd><code>drag:start</code> event from the thumb</dd>\n</dl>", "type": "event", "description": "Signals the beginning of a thumb drag operation.  Payload includes\nthe thumb's drag:start event."}, {"name": "some", "url": "NodeList.html#method_some", "access": "", "host": "NodeList", "params": "fn <Function>  The function to apply. It receives 3 arguments:\nthe current node instance, the node's index, and the NodeList instance, context <Object>  optional An optional context to execute the function from.\nDefault context is the current Node instance", "type": "method", "description": "Executes the function once for each node until a true value is returned."}, {"name": "some", "url": "ArrayList.html#method_some", "access": "", "host": "ArrayList", "params": "fn < Function >   the function to execute, context < mixed >   optional override 'this' in the function", "type": "method", "description": "<p>Execute a function on each item of the list, optionally providing a\ncustom execution context.  Default context is the item.</p>\n<p>The callback signature is <code>callback( item, index )</code>.</p>\n<p>Unlike <code>each</code>, if the callback returns true, the\niteratation will stop.</p>"}, {"name": "some", "url": "Array.html#method_some", "access": "", "host": "Array", "params": "a <Array>   the array to iterate, f <Function>   the function to execute on each item. The function \nreceives three arguments: the value, the index, the full array., o <Object>  Optional context object", "type": "method", "description": "Executes the supplied function on each item in the array.\nReturning true from the processing function will stop the \nprocessing of the remaining\nitems."}, {"name": "sortByZIndexDesc", "url": "OverlayManager.html#method_sortByZIndexDesc", "access": "", "host": "OverlayManager", "params": "a <Overlay>  Overlay, b <Overlay>  Overlay", "type": "method", "description": "zIndex comparator. Used on Array.sort."}, {"name": "sorted", "url": "Loader.html#property_sorted", "access": "", "host": "Loader", "params": "", "type": "property", "description": "All of the derived dependencies in sorted order, which\nwill be populated when either calculate() or insert()\nis called"}, {"name": "source", "url": "Plugin.ConsoleFilters.html#config_source", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "config", "description": "<p>Map of entry sources to their visibility status.  Update a\nparticular sources's visibility by setting the subattribute to true\n(visible) or false (hidden).</p>\n<p>For example, yconsole.filter.set('sources.slider', false) to hide\nlog entries originating from Y.Slider.</p>"}, {"name": "source", "url": "DataSource.Local.html#config_source", "access": "", "host": "DataSource.Local", "params": "", "type": "config", "description": "Pointer to live data."}, {"name": "source", "url": "DataSource.Function.html#config_source", "access": "", "host": "DataSource.Function", "params": "", "type": "config", "description": "Pointer to live data."}, {"name": "sourceChange", "url": "Plugin.ConsoleFilters.html#event_sourceChange", "access": "", "host": "Plugin.ConsoleFilters", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'source' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "sourceChange", "url": "DataSource.Local.html#event_sourceChange", "access": "", "host": "DataSource.Local", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'source' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "sourceChange", "url": "DataSource.Function.html#event_sourceChange", "access": "", "host": "DataSource.Function", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'source' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_sources", "url": "Plugin.ConsoleFilters.html#property__sources", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "", "type": "property", "description": "The container node created to house the source filters."}, {"name": "srcNode", "url": "Widget.html#config_srcNode", "access": "", "host": "Widget", "params": "", "type": "config", "description": "The DOM node to parse for configuration values, passed to the Widget's HTML_PARSER definition"}, {"name": "srcNodeChange", "url": "Widget.html#event_srcNodeChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'srcNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "srcUrl", "url": "ImgLoadImgObj.html#config_srcUrl", "access": "", "host": "ImgLoadImgObj", "params": "", "type": "config", "description": "Source URL for the image.\nFor an image whose URL is specified by a \"<code>src</code>\" attribute in the DOM element."}, {"name": "srcUrlChange", "url": "ImgLoadImgObj.html#event_srcUrlChange", "access": "", "host": "ImgLoadImgObj", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'srcUrl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "stack", "url": "Calendar.html#config_stack", "access": "", "host": "Calendar", "params": "", "type": "config", "description": "If true is able to do stacking with another overlays."}, {"name": "stack", "url": "Assert.UnexpectedError.html#property_stack", "access": "", "host": "Assert.UnexpectedError", "params": "", "type": "property", "description": "Stack information for the error (if provided)."}, {"name": "stack", "url": "Dialog.html#config_stack", "access": "", "host": "Dialog", "params": "", "type": "config", "description": "If <code>true</code> give stacking habilities to the Dialog."}, {"name": "stack", "url": "OverlayContextPanel.html#config_stack", "access": "", "host": "OverlayContextPanel", "params": "", "type": "config", "description": "Gives stacking habilities to the OverlayContextPanel."}, {"name": "stackChange", "url": "Calendar.html#event_stackChange", "access": "", "host": "Calendar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "stackChange", "url": "Dialog.html#event_stackChange", "access": "", "host": "Dialog", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "stackChange", "url": "OverlayContextPanel.html#event_stackChange", "access": "", "host": "OverlayContextPanel", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'stack' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "stamp", "url": "YUI.html#method_stamp", "access": "", "host": "YUI", "params": "o <Object>  The object to stamp, readOnly <boolean>   if true, a valid guid will only\nbe returned if the object has one assigned to it.", "type": "method", "description": "Returns a guid associated with an object.  If the object\ndoes not have one, a new one is created unless readOnly\nis specified."}, {"name": "StarRating.HTML_PARSER", "url": "Rating.html#property_StarRating.HTML_PARSER", "access": "", "host": "Rating", "params": "", "type": "property", "description": "Object hash, defining how attribute values are to be parsed from\nmarkup contained in the widget's content box."}, {"name": "start", "url": "io.html#method_start", "access": "", "host": "io", "params": "", "type": "method", "description": "Method for setting the queue to active. If there are\ntransactions pending in the queue, they will be processed from the\nqueue in FIFO order. This is the interface for _start()."}, {"name": "start", "url": "Profiler.html#method_start", "access": "", "host": "Profiler", "params": "name <String>  The name of the data point.", "type": "method", "description": "Start profiling information for a given name. The name cannot be the name\nof a registered function or object. This is used to start timing for a\nparticular block of code rather than instrumenting the entire function."}, {"name": "start", "url": "DD.Drag.html#method_start", "access": "", "host": "DD.Drag", "params": "", "type": "method", "description": "Starts the drag operation"}, {"name": "start", "url": "DD.Scroll.html#method_start", "access": "", "host": "DD.Scroll", "params": "", "type": "method", "description": "Called from the drag:start event"}, {"name": "start", "url": "Anim.html#event_start", "access": "", "host": "Anim", "params": "ev <Event>  The start event.", "type": "event", "description": "fires when an animation begins."}, {"name": "start", "url": "IORequest.html#method_start", "access": "", "host": "IORequest", "params": "", "type": "method", "description": "Starts the IO transaction. Used to refresh the content also."}, {"name": "start", "url": "A.Plugin.IO.html#method_start", "access": "", "host": "A.Plugin.IO", "params": "", "type": "method", "description": "Overload to the <a href=\"IORequest.html#method_start\">IORequest\nstart</a> method. Check if the <code>host</code> is already rendered,\notherwise wait to after render phase and to show the LoadingMask."}, {"name": "start", "url": "plugin.NodeFocusManager.html#method_start", "access": "", "host": "plugin.NodeFocusManager", "params": "", "type": "method", "description": "Enables the Focus Manager."}, {"name": "startCentered", "url": "DD.Drag.html#config_startCentered", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "Center the dragNode to the mouse position on drag:start: default false"}, {"name": "startCenteredChange", "url": "DD.Drag.html#event_startCenteredChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'startCentered' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_startEditing", "url": "Editable.html#method__startEditing", "access": "protected", "host": "Editable", "params": "event <EventFacade> ", "type": "method", "description": "Fires when start editing."}, {"name": "startEditing", "url": "Editable.html#event_startEditing", "access": "", "host": "Editable", "params": "event <Event.Facade>  The startEditing event.", "type": "event", "description": "Handles the startEditing event."}, {"name": "startTime", "url": "Anim.html#config_startTime", "access": "", "host": "Anim", "params": "", "type": "config", "description": "Date stamp for the first frame of the animation."}, {"name": "startTime", "url": "Console.html#config_startTime", "access": "", "host": "Console", "params": "", "type": "config", "description": "The baseline time for this Console instance, used to measure elapsed\ntime from the moment the console module is <code>use</code>d to the\nmoment each new entry is logged (not rendered).\nThis value is reset by the instance method myConsole.reset()."}, {"name": "startTime", "url": "Plugin.Console.html#config_startTime", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "The baseline time for this Console instance, used to measure elapsed\ntime from the moment the console module is <code>use</code>d to the\nmoment each new entry is logged (not rendered).\nThis value is reset by the instance method myConsole.reset()."}, {"name": "startTimeChange", "url": "Anim.html#event_startTimeChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'startTime' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "startTimeChange", "url": "Console.html#event_startTimeChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'startTime' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "startTimeChange", "url": "Plugin.Console.html#event_startTimeChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'startTime' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_startTimer", "url": "ImageGallery.html#method__startTimer", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Start the timer between slides."}, {"name": "startXY", "url": "DD.Drag.html#property_startXY", "access": "", "host": "DD.Drag", "params": "", "type": "property", "description": "The initial mouse position"}, {"name": "state", "url": "Paginator.html#config_state", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Generates information to the <code>changeRequest</code> event. See\n<a href=\"Paginator.html#method_changeRequest\">changeRequest</a>."}, {"name": "stateChange", "url": "Paginator.html#event_stateChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'state' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "statusNode", "url": "ProgressBar.html#config_statusNode", "access": "", "host": "ProgressBar", "params": "", "type": "config", "description": "DOM Node to display the satus bar of the progressbar. If not\nspecified try to query using HTML_PARSER an element inside\ncontentBox which matches <code>aui-progressbar-status</code>."}, {"name": "statusNodeChange", "url": "ProgressBar.html#event_statusNodeChange", "access": "", "host": "ProgressBar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'statusNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "step", "url": "ProgressBar.html#config_step", "access": "", "host": "ProgressBar", "params": "", "type": "config", "description": "Calculate the progressbar step based on <code>ratio</code>\nvalue."}, {"name": "stepChange", "url": "ProgressBar.html#event_stepChange", "access": "", "host": "ProgressBar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'step' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "stickX", "url": "Plugin.DDConstrained.html#config_stickX", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "Stick the drag movement to the X-Axis. Default: false"}, {"name": "stickXChange", "url": "Plugin.DDConstrained.html#event_stickXChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'stickX' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "stickY", "url": "Plugin.DDConstrained.html#config_stickY", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "Stick the drag movement to the Y-Axis"}, {"name": "stickYChange", "url": "Plugin.DDConstrained.html#event_stickYChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'stickY' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "stop", "url": "AsyncQueue.html#method_stop", "access": "", "host": "AsyncQueue", "params": "", "type": "method", "description": "Stop and clear the queue after the current execution of the\ncurrent callback completes."}, {"name": "stop", "url": "io.html#method_stop", "access": "", "host": "io", "params": "", "type": "method", "description": "Method for setting queue processing to inactive.\nTransaction requests to YUI.io.queue() will be stored in the queue, but\nnot processed until the queue is restarted. This is the\ninterface for _stop()."}, {"name": "stop", "url": "Profiler.html#method_stop", "access": "", "host": "Profiler", "params": "name <String>  The name of the data point.", "type": "method", "description": "Stops profiling information for a given name."}, {"name": "stop", "url": "Anim.html#method_stop", "access": "", "host": "Anim", "params": "", "type": "method", "description": "Stops all animation instances."}, {"name": "stop", "url": "IORequest.html#method_stop", "access": "", "host": "IORequest", "params": "", "type": "method", "description": "Stops the IO transaction."}, {"name": "stop", "url": "plugin.NodeFocusManager.html#method_stop", "access": "", "host": "plugin.NodeFocusManager", "params": "", "type": "method", "description": "Disables the Focus Manager by detaching all event handlers."}, {"name": "stopDrag", "url": "DD.DDM.html#method_stopDrag", "access": "", "host": "DD.DDM", "params": "", "type": "method", "description": "Method will forcefully stop a drag operation. For example calling this from inside an ESC keypress handler will stop this drag."}, {"name": "stopDrag", "url": "DD.Drag.html#method_stopDrag", "access": "", "host": "DD.Drag", "params": "", "type": "method", "description": "Method will forcefully stop a drag operation. For example calling this from inside an ESC keypress handler will stop this drag."}, {"name": "stopEditing", "url": "Editable.html#event_stopEditing", "access": "", "host": "Editable", "params": "event <Event.Facade>  The stopEditing event.", "type": "event", "description": "Handles the stopEditing event."}, {"name": "stopEvent", "url": "YUI.html#method_stopEvent", "access": "", "host": "YUI", "params": "ev <Event>  the event", "type": "method", "description": "Convenience method for stopPropagation + preventDefault"}, {"name": "stopImmediatePropagation", "url": "DOMEventFacade.html#method_stopImmediatePropagation", "access": "", "host": "DOMEventFacade", "params": "", "type": "method", "description": "Stops the propagation to the next bubble target and\nprevents any additional listeners from being exectued\non the current target."}, {"name": "stopImmediatePropagation", "url": "CustomEvent.html#method_stopImmediatePropagation", "access": "", "host": "CustomEvent", "params": "", "type": "method", "description": "Stops propagation to bubble targets, and prevents any remaining\nsubscribers on the current target from executing."}, {"name": "stopImmediatePropagation", "url": "EventFacade.html#method_stopImmediatePropagation", "access": "", "host": "EventFacade", "params": "", "type": "method", "description": "Stops the propagation to the next bubble target and\nprevents any additional listeners from being exectued\non the current target."}, {"name": "stopped", "url": "CustomEvent.html#property_stopped", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "Flag for stopPropagation that is modified during fire()\n1 means to stop propagation to bubble targets.  2 means\nto also stop additional subscribers on this target."}, {"name": "stoppedFn", "url": "CustomEvent.html#property_stoppedFn", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "The function to execute if a subscriber calls\nstopPropagation or stopImmediatePropagation"}, {"name": "stopPropagation", "url": "DOMEventFacade.html#method_stopPropagation", "access": "", "host": "DOMEventFacade", "params": "", "type": "method", "description": "Stops the propagation to the next bubble target"}, {"name": "stopPropagation", "url": "YUI.html#method_stopPropagation", "access": "", "host": "YUI", "params": "ev <Event>  the event", "type": "method", "description": "Stops event propagation"}, {"name": "stopPropagation", "url": "CustomEvent.html#method_stopPropagation", "access": "", "host": "CustomEvent", "params": "", "type": "method", "description": "Stop propagation to bubble targets"}, {"name": "stopPropagation", "url": "EventFacade.html#method_stopPropagation", "access": "", "host": "EventFacade", "params": "", "type": "method", "description": "Stops the propagation to the next bubble target"}, {"name": "_stopTriggerEventPropagation", "url": "OverlayContext.html#method__stopTriggerEventPropagation", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Helper method to invoke event.stopPropagation()."}, {"name": "stringify", "url": "JSON.html#method_stringify", "access": "", "host": "JSON", "params": "o <MIXED>   any arbitrary value to convert to JSON string, w <Array|Function>   (optional) whitelist of acceptable object\nkeys to include, or a replacer function to modify the\nraw value before serialization, ind <Number|String>   (optional) indentation character or depth of\nspaces to format the output.", "type": "method", "description": "<p>Converts an arbitrary value to a JSON string representation.</p>\n<p>Objects with cyclical references will trigger an exception.</p>\n<p>If a whitelist is provided, only matching object keys will be\nincluded.  Alternately, a replacer function may be passed as the\nsecond parameter.  This function is executed on every value in the\ninput, and its return value will be used in place of the original value.\nThis is useful to serialize specialized objects or class instances.</p>\n<p>If a positive integer or non-empty string is passed as the third\nparameter, the output will be formatted with carriage returns and\nindentation for readability.  If a String is passed (such as \"\\t\") it\nwill be used once for each indentation level.  If a number is passed,\nthat number of spaces will be used.</p>"}, {"name": "stringify", "url": "QueryString.html#method_stringify", "access": "", "host": "QueryString", "params": "obj <Variant>   any arbitrary value to convert to query string, sep <String>   (optional) Character that should join param k=v pairs together. Default: \"&\", eq <String>    (optional) Character that should join keys to their values. Default: \"=\", name <String>   (optional) Name of the current key, for handling children recursively.", "type": "method", "description": "<p>Converts an arbitrary value to a Query String representation.</p>\n<p>Objects with cyclical references will trigger an exception.</p>"}, {"name": "strings", "url": "LoadingMask.html#config_strings", "access": "", "host": "LoadingMask", "params": "", "type": "config", "description": "Strings used on the LoadingMask. See\n<a href=\"Widget.html#method_strings\">strings</a>."}, {"name": "strings", "url": "Widget.html#config_strings", "access": "", "host": "Widget", "params": "", "type": "config", "description": "Collection of strings used to label elements of the Widget's UI."}, {"name": "strings", "url": "Console.html#config_strings", "access": "", "host": "Console", "params": "", "type": "config", "description": "Collection of strings used to label elements in the Console UI.\nDefault collection contains the following name:value pairs:\n<ul>\n<li>title : &quot;Log Console&quot;</li>\n<li>pause : &quot;Pause&quot;</li>\n<li>clear : &quot;Clear&quot;</li>\n<li>collapse : &quot;Collapse&quot;</li>\n<li>expand : &quot;Expand&quot;</li>\n</ul>"}, {"name": "strings", "url": "Plugin.Console.html#config_strings", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Collection of strings used to label elements in the Console UI.\nDefault collection contains the following name:value pairs:\n<ul>\n<li>title : &quot;Log Console&quot;</li>\n<li>pause : &quot;Pause&quot;</li>\n<li>clear : &quot;Clear&quot;</li>\n<li>collapse : &quot;Collapse&quot;</li>\n<li>expand : &quot;Expand&quot;</li>\n</ul>"}, {"name": "stringsChange", "url": "LoadingMask.html#event_stringsChange", "access": "", "host": "LoadingMask", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "stringsChange", "url": "Widget.html#event_stringsChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "stringsChange", "url": "Console.html#event_stringsChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "stringsChange", "url": "Plugin.Console.html#event_stringsChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'strings' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_strSetter", "url": "Widget.html#method__strSetter", "access": "protected", "host": "Widget", "params": "strings <Object> ", "type": "method", "description": "The default setter for the strings attribute. Merges partial sets\ninto the full string set, to allow users to partial sets of strings"}, {"name": "style", "url": "Console.html#config_style", "access": "", "host": "Console", "params": "", "type": "config", "description": "Allows the Console to flow in the document.  Available values are\n'inline', 'block', and 'separate' (the default)."}, {"name": "style", "url": "Plugin.Console.html#config_style", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Allows the Console to flow in the document.  Available values are\n'inline', 'block', and 'separate' (the default)."}, {"name": "styleChange", "url": "Console.html#event_styleChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'style' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "styleChange", "url": "Plugin.Console.html#event_styleChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'style' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "StyleSheet.isValidSelector", "url": "StyleSheet.html#method_StyleSheet.isValidSelector", "access": "", "host": "StyleSheet", "params": "sel <String>   the selector string", "type": "method", "description": "<p>Determines if a selector string is safe to use.  Used internally\nin set to prevent IE from locking up when attempting to add a rule for a\n&quot;bad selector&quot;.</p>\n<p>Bad selectors are considered to be any string containing unescaped\n`~!@$%^&()+=|{}[];'\"?< or space. Also forbidden are . or # followed by\nanything other than an alphanumeric.  Additionally -abc or .-abc or\n#_abc or '# ' all fail.  There are likely more failure cases, so\nplease file a bug if you encounter one.</p>"}, {"name": "StyleSheet.register", "url": "StyleSheet.html#method_StyleSheet.register", "access": "", "host": "StyleSheet", "params": "name <String>   the name to assign the StyleSheet in the registry, sheet <StyleSheet>   The StyleSheet instance", "type": "method", "description": "Registers a StyleSheet instance in the static registry by the given name"}, {"name": "StyleSheet.toCssText", "url": "StyleSheet.html#method_StyleSheet.toCssText", "access": "", "host": "StyleSheet", "params": "css <Object>   object literal of style properties and values, cssText <String>   (optional) starting cssText value", "type": "method", "description": "<p>Converts an object literal of style properties and values into a string\nof css text.  This can then be assigned to el.style.cssText.</p>\n<p>The optional second parameter is a cssText string representing the\nstarting state of the style prior to alterations.  This is most often\nextracted from the eventual target's current el.style.cssText.</p>"}, {"name": "sub", "url": "EventHandle.html#property_sub", "access": "", "host": "EventHandle", "params": "", "type": "property", "description": "The subscriber object"}, {"name": "submenuHideDelay", "url": "plugin.NodeMenuNav.html#config_submenuHideDelay", "access": "", "host": "plugin.NodeMenuNav", "params": "", "type": "config", "description": "Number indicating the time (in milliseconds) that should expire before a \nsubmenu is hidden when the user mouses out of a menu label heading in the \ndirection of a submenu."}, {"name": "submenuHideDelayChange", "url": "plugin.NodeMenuNav.html#event_submenuHideDelayChange", "access": "", "host": "plugin.NodeMenuNav", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'submenuHideDelay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "submenuShowDelay", "url": "plugin.NodeMenuNav.html#config_submenuShowDelay", "access": "", "host": "plugin.NodeMenuNav", "params": "", "type": "config", "description": "Number indicating the time (in milliseconds) that should expire before a \nsubmenu is made visible when the user mouses over the menu's label."}, {"name": "submenuShowDelayChange", "url": "plugin.NodeMenuNav.html#event_submenuShowDelayChange", "access": "", "host": "plugin.NodeMenuNav", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'submenuShowDelay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "submit", "url": "Node.html#method_submit", "access": "", "host": "Node", "params": "", "type": "method", "description": "Passes through to DOM method.\nOnly valid on FORM elements"}, {"name": "subscribe", "url": "CustomEvent.html#method_subscribe", "access": "", "host": "CustomEvent", "params": "fn <Function>  The function to execute", "type": "method", "description": "Listen for this event"}, {"name": "subscribe", "url": "EventTarget.html#method_subscribe", "access": "", "host": "EventTarget", "params": "", "type": "method", "description": "subscribe to an event"}, {"name": "subscribers", "url": "CustomEvent.html#property_subscribers", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "The subscribers to this event"}, {"name": "substitute", "url": "YUI~substitute.html#method_substitute", "access": "", "host": "YUI~substitute", "params": "s <string>   The string that will be modified., o <Object>  An object containing the replacement values, f <function>   An optional function that can be used to\nprocess each match.  It receives the key,\nvalue, and any extra metadata included with\nthe key inside of the braces.", "type": "method", "description": "Does variable substitution on a string. It scans through the string \nlooking for expressions enclosed in { } braces. If an expression \nis found, it is used a key on the object.  If there is a space in\nthe key, the first word is used for the key and the rest is provided\nto an optional function to be used to programatically determine the\nvalue (the extra information might be used for this decision). If \nthe value for the key in the object, or what is returned from the\nfunction has a string value, number value, or object value, it is \nsubstituted for the bracket expression and it repeats.  If this\nvalue is an object, it uses the Object's toString() if this has\nbeen overridden, otherwise it does a shallow dump of the key/value\npairs if Y.dump is available (if dump isn't available, toString()\nis used).\nThis method is included in the 'substitute' module.  It is not included\nin the YUI module."}, {"name": "_success", "url": "IORequest.html#method__success", "access": "protected", "host": "IORequest", "params": "id <Number>  ID of the IO transaction., obj <Object>  IO transaction Object.", "type": "method", "description": "Internal success callback for the IO transaction."}, {"name": "_successHandler", "url": "A.Plugin.IO.html#method__successHandler", "access": "protected", "host": "A.Plugin.IO", "params": "event <EventFavade> , id <String>  Id of the IO transaction., obj <Object>  XHR transaction Object.", "type": "method", "description": "Internal success callback for the IO transaction."}, {"name": "suppressInputUpdate", "url": "AutoComplete.html#config_suppressInputUpdate", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "Whether or not the input field should be updated with selections."}, {"name": "suppressInputUpdateChange", "url": "AutoComplete.html#event_suppressInputUpdateChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'suppressInputUpdate' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "swallowEvent", "url": "A.Node.html#method_swallowEvent", "access": "", "host": "A.Node", "params": "eventName <String/Array>  an event or array of events to stop from bubbling, preventDefault <Boolean>  (optional) true to prevent the default action too", "type": "method", "description": "<p>Stops the specified event(s) from bubbling and optionally prevents the\ndefault action.</p>\nExample:\n<pre><code>var anchor = A.one('a#anchorId');\nanchor.swallowEvent('click');\n</code></pre>"}, {"name": "swap", "url": "Node.html#method_swap", "access": "", "host": "Node", "params": "otherNode <Node>  The node to swap with", "type": "method", "description": "Swap DOM locations with the given node.\nThis does not change which DOM node each Node instance refers to."}, {"name": "swapNode", "url": "DD.DDM.html#method_swapNode", "access": "", "host": "DD.DDM", "params": "n1 <Node>  The first node to swap, n2 <Node>  The first node to swap", "type": "method", "description": "Swap the position of 2 nodes based on their DOM location."}, {"name": "swapPosition", "url": "DD.DDM.html#method_swapPosition", "access": "", "host": "DD.DDM", "params": "n1 <Node>  The first node to swap, n2 <Node>  The first node to swap", "type": "method", "description": "Swap the position of 2 nodes based on their CSS positioning."}, {"name": "swapXY", "url": "Node.html#method_swapXY", "access": "", "host": "Node", "params": "otherNode <Y.Node || HTMLElement>  The node to swap with.", "type": "method", "description": "Swaps the XY position of this node with another node."}, {"name": "swapXY", "url": "DOM.html#method_swapXY", "access": "", "host": "DOM", "params": "node <Node>  The node to swap with, otherNode <Node>  The other node to swap with", "type": "method", "description": "Swap the xy position with another node"}, {"name": "sync", "url": "Plugin.Shim.html#method_sync", "access": "", "host": "Plugin.Shim", "params": "", "type": "method", "description": "Updates the size of the shim to fill its container"}, {"name": "sync", "url": "IORequest.html#config_sync", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "See <a href=\"http://developer.yahoo.com/yui/3/io/#configuration\">IO\nConfiguration</a>."}, {"name": "syncActiveShims", "url": "DD.DDM.html#method_syncActiveShims", "access": "", "host": "DD.DDM", "params": "force <Boolean>  Resize/sync all Targets.", "type": "method", "description": "This method will sync the position of the shims on the Drop Targets that are currently active."}, {"name": "_syncCaptionUI", "url": "ImageViewer.html#method__syncCaptionUI", "access": "protected", "host": "ImageViewer", "params": "", "type": "method", "description": "Sync the caption UI."}, {"name": "syncChange", "url": "IORequest.html#event_syncChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'sync' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_syncChildrenStates", "url": "ButtonItem.html#method__syncChildrenStates", "access": "protected", "host": "ButtonItem", "params": "", "type": "method", "description": "Syncs the boundingBox class names to reflect whether the children only have icons or labels or both."}, {"name": "_syncCollapsedUI", "url": "Panel.html#method__syncCollapsedUI", "access": "protected", "host": "Panel", "params": "", "type": "method", "description": "Sync the UI for the collapsed status (i.e., icons, height etc)."}, {"name": "_syncContentText", "url": "Editable.html#method__syncContentText", "access": "protected", "host": "Editable", "params": "event <EventFacade> ", "type": "method", "description": "Sync the content text."}, {"name": "_syncControlsUI", "url": "ImageViewer.html#method__syncControlsUI", "access": "protected", "host": "ImageViewer", "params": "", "type": "method", "description": "Sync the controls UI."}, {"name": "_syncControlsUI", "url": "ImageGallery.html#method__syncControlsUI", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Sync the controls UI."}, {"name": "_syncDays", "url": "Calendar.html#method__syncDays", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Sync Calendar days UI."}, {"name": "syncDragNode", "url": "YUI.html#method_syncDragNode", "access": "", "host": "YUI", "params": "", "type": "method", "description": "Cache constraining element offsets and dims for faster value translation\nand map current DD position to value."}, {"name": "_syncElements", "url": "Rating.html#method__syncElements", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Sync the Rating elements."}, {"name": "_syncElements", "url": "ThumbRating.html#method__syncElements", "access": "protected", "host": "ThumbRating", "params": "", "type": "method", "description": "Empty method, no logic needed on this method on ThumbRating."}, {"name": "_syncElements", "url": "OverlayContextPanel.html#method__syncElements", "access": "protected", "host": "OverlayContextPanel", "params": "", "type": "method", "description": "Sync the UI of the OverlayContextPanel elements."}, {"name": "_syncHeader", "url": "Calendar.html#method__syncHeader", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Sync Calendar header UI."}, {"name": "_syncHitArea", "url": "TreeNode.html#method__syncHitArea", "access": "protected", "host": "TreeNode", "params": "children <Array> ", "type": "method", "description": "Sync the hitarea UI."}, {"name": "_syncImageViewerUI", "url": "ImageViewer.html#method__syncImageViewerUI", "access": "protected", "host": "ImageViewer", "params": "", "type": "method", "description": "Sync the ImageViewer UI."}, {"name": "_syncInfoUI", "url": "ImageViewer.html#method__syncInfoUI", "access": "protected", "host": "ImageViewer", "params": "", "type": "method", "description": "Sync the info UI."}, {"name": "_syncLabelUI", "url": "Rating.html#method__syncLabelUI", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Sync the Rating label UI."}, {"name": "_syncLoadingMaskUI", "url": "A.Plugin.IO.html#method__syncLoadingMaskUI", "access": "protected", "host": "A.Plugin.IO", "params": "", "type": "method", "description": "Sync the loading mask UI."}, {"name": "_syncPageLinksUI", "url": "Paginator.html#method__syncPageLinksUI", "access": "protected", "host": "Paginator", "params": "", "type": "method", "description": "Sync the Paginator links UI."}, {"name": "_syncPaginatorIOData", "url": "TreeNodeIO.html#method__syncPaginatorIOData", "access": "protected", "host": "TreeNodeIO", "params": "", "type": "method", "description": "Adds two extra IO data parameter to the request to handle the\npaginator. By default these parameters are <code>limit</code> and\n<code>start</code>."}, {"name": "_syncPaginatorUI", "url": "TreeNodeIO.html#method__syncPaginatorUI", "access": "protected", "host": "TreeNodeIO", "params": "", "type": "method", "description": "Sync the paginator link UI."}, {"name": "_syncProxyUI", "url": "Resize.html#method__syncProxyUI", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Sync the proxy UI with internal values from\n<a href=\"Resize.html#property_info\">info</a>."}, {"name": "_syncSelectedDays", "url": "Calendar.html#method__syncSelectedDays", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Sync Calendar selected days UI."}, {"name": "_syncSelectedThumbUI", "url": "ImageGallery.html#method__syncSelectedThumbUI", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Sync the selected thumb UI."}, {"name": "_syncSlideShow", "url": "ImageGallery.html#method__syncSlideShow", "access": "protected", "host": "ImageGallery", "params": "", "type": "method", "description": "Sync the slide show UI."}, {"name": "syncTargets", "url": "DD.Delegate.html#method_syncTargets", "access": "", "host": "DD.Delegate", "params": "", "type": "method", "description": "Applies the Y.Plugin.Drop to all nodes matching the cont + nodes selector query."}, {"name": "_syncThumbPosition", "url": "SliderBase.html#method__syncThumbPosition", "access": "protected", "host": "SliderBase", "params": "", "type": "method", "description": "Stub implementation.  Override this (presumably in a class extension) to\nensure the thumb is in the correct position according to the value\nalogorithm.\ninstance."}, {"name": "_syncThumbPosition", "url": "SliderValueRange.html#method__syncThumbPosition", "access": "protected", "host": "SliderValueRange", "params": "", "type": "method", "description": "Move the thumb to appropriate position if necessary.  Also resets\nthe cached offsets and recalculates the conversion factor to\ntranslate position to value."}, {"name": "_syncTitleUI", "url": "Panel.html#method__syncTitleUI", "access": "protected", "host": "Panel", "params": "", "type": "method", "description": "Sync the\n<a href=\"Panel.html#property_headerTextNode\">headerTextNode</a> with the\nvalue of the <a href=\"Panel.html#config_title\">title</a>."}, {"name": "_syncTreeNodeBBId", "url": "TreeNode.html#method__syncTreeNodeBBId", "access": "protected", "host": "TreeNode", "params": "id <String> ", "type": "method", "description": "Set the <code>boundingBox</code> id."}, {"name": "syncUI", "url": "Plugin.ConsoleFilters.html#method_syncUI", "access": "", "host": "Plugin.ConsoleFilters", "params": "", "type": "method", "description": "Updates the UI to be in accordance with the current state of the plugin."}, {"name": "syncUI", "url": "Toolbar.html#method_syncUI", "access": "protected", "host": "Toolbar", "params": "", "type": "method", "description": "Sync the Toolbar UI. Lifecycle."}, {"name": "syncUI", "url": "Calendar.html#method_syncUI", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Sync the Calendar UI. Lifecycle."}, {"name": "syncUI", "url": "DatePickerSelect.html#method_syncUI", "access": "protected", "host": "DatePickerSelect", "params": "", "type": "method", "description": "Sync the DatePickerSelect UI. Lifecycle."}, {"name": "syncUI", "url": "Editable.html#method_syncUI", "access": "protected", "host": "Editable", "params": "", "type": "method", "description": "Sync the Editable UI. Lifecycle."}, {"name": "_syncUI", "url": "Resize.html#method__syncUI", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Sync the Resize UI with internal values from\n<a href=\"Resize.html#property_info\">info</a>."}, {"name": "syncUI", "url": "Resize.html#method_syncUI", "access": "protected", "host": "Resize", "params": "", "type": "method", "description": "Sync the Resize UI."}, {"name": "syncUI", "url": "Rating.html#method_syncUI", "access": "protected", "host": "Rating", "params": "", "type": "method", "description": "Sync the Rating UI. Lifecycle."}, {"name": "syncUI", "url": "Paginator.html#method_syncUI", "access": "protected", "host": "Paginator", "params": "", "type": "method", "description": "Sync the Paginator UI. Lifecycle."}, {"name": "syncUI", "url": "ColorPicker.html#method_syncUI", "access": "protected", "host": "ColorPicker", "params": "", "type": "method", "description": "Sync the ColorPicker UI. Lifecycle."}, {"name": "_syncUI", "url": "Widget.html#method__syncUI", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Updates the widget UI to reflect the attribute state."}, {"name": "syncUI", "url": "Widget.html#method_syncUI", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": "Refreshes the rendered UI, based on Widget State\nThis method is not called by framework and is not chained\nautomatically for the class hierarchy."}, {"name": "syncUI", "url": "ButtonItem.html#method_syncUI", "access": "protected", "host": "ButtonItem", "params": "", "type": "method", "description": "Sync the ButtonItem UI. Lifecycle."}, {"name": "syncUI", "url": "SliderBase.html#method_syncUI", "access": "", "host": "SliderBase", "params": "", "type": "method", "description": "Synchronizes the DOM state with the attribute settings."}, {"name": "syncUI", "url": "CharCounter.html#method_syncUI", "access": "protected", "host": "CharCounter", "params": "", "type": "method", "description": "Sync the CharCounter UI. Lifecycle."}, {"name": "syncUI", "url": "Console.html#method_syncUI", "access": "", "host": "Console", "params": "", "type": "method", "description": "Sync the UI state to the current attribute state."}, {"name": "syncUI", "url": "Plugin.Console.html#method_syncUI", "access": "", "host": "Plugin.Console", "params": "", "type": "method", "description": "Sync the UI state to the current attribute state."}, {"name": "syncUI", "url": "OverlayContextPanel.html#method_syncUI", "access": "protected", "host": "OverlayContextPanel", "params": "", "type": "method", "description": "Sync the OverlayContextPanel UI. Lifecycle."}, {"name": "syncUI", "url": "OverlayMask.html#method_syncUI", "access": "protected", "host": "OverlayMask", "params": "", "type": "method", "description": "Sync the OverlayMask UI. Lifecycle."}, {"name": "syncUI", "url": "AutoComplete.html#method_syncUI", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Sync the AutoComplete UI. Lifecycle."}, {"name": "syncUI", "url": "TreeNode.html#method_syncUI", "access": "protected", "host": "TreeNode", "params": "", "type": "method", "description": "Sync the TreeNode UI. Lifecycle."}, {"name": "syncUI", "url": "TreeView.html#method_syncUI", "access": "protected", "host": "TreeView", "params": "", "type": "method", "description": "Sync the TreeView UI. Lifecycle."}, {"name": "_syncUIPosAlgin", "url": "WidgetPositionAlign.html#method__syncUIPosAlgin", "access": "protected", "host": "WidgetPositionAlign", "params": "", "type": "method", "description": "Synchronizes the UI to match the Widgets align configuration.\nThis method in invoked after syncUI is invoked for the Widget class\nusing YUI's aop infrastructure."}, {"name": "_syncUIPosition", "url": "WidgetPosition.html#method__syncUIPosition", "access": "protected", "host": "WidgetPosition", "params": "", "type": "method", "description": "Synchronizes the UI to match the Widgets xy page position state.\n<p>\nThis method in invoked after syncUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_syncUIStack", "url": "WidgetStack.html#method__syncUIStack", "access": "protected", "host": "WidgetStack", "params": "", "type": "method", "description": "Synchronizes the UI to match the Widgets stack state. This method in \ninvoked after syncUI is invoked for the Widget class using YUI's aop infrastructure."}, {"name": "_syncUIStdMod", "url": "WidgetStdMod.html#method__syncUIStdMod", "access": "protected", "host": "WidgetStdMod", "params": "", "type": "method", "description": "Synchronizes the UI to match the Widgets standard module state.\n<p>\nThis method is invoked after syncUI is invoked for the Widget class\nusing YUI's aop infrastructure.\n</p>"}, {"name": "_syncView", "url": "Calendar.html#method__syncView", "access": "protected", "host": "Calendar", "params": "", "type": "method", "description": "Sync Calendar header, days and selected days UI."}, {"name": "syncXY", "url": "WidgetPosition.html#method_syncXY", "access": "", "host": "WidgetPosition", "params": "", "type": "method", "description": "Synchronizes the Panel's \"xy\", \"x\", and \"y\" properties with the \nWidget's position in the DOM."}, {"name": "tabIndex", "url": "Widget.html#config_tabIndex", "access": "", "host": "Widget", "params": "", "type": "config", "description": "Number (between -32767 to 32767) indicating the widget's \nposition in the default tab flow.  The value is used to set the \n\"tabIndex\" attribute on the widget's bounding box.  Negative values allow\nthe widget to receive DOM focus programmatically (by calling the focus\nmethod), while being removed from the default tab flow.  A value of \nnull removes the \"tabIndex\" attribute from the widget's bounding box."}, {"name": "tabIndexChange", "url": "Widget.html#event_tabIndexChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'tabIndex' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "TAP", "url": "Assert.DateAssert.html#method_TAP", "access": "", "host": "Assert.DateAssert", "params": "result <Object>  The results object created by TestRunner.", "type": "method", "description": "Returns test results formatted in TAP format.\nFor more information, see <a href=\"http://testanything.org/\">Test Anything Protocol</a>."}, {"name": "target", "url": "DOMEventFacade.html#property_target", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "Node reference for the targeted element"}, {"name": "target", "url": "LoadingMask.html#config_target", "access": "", "host": "LoadingMask", "params": "", "type": "config", "description": "Node where the mask will be positioned and re-dimensioned."}, {"name": "target", "url": "DD.Drag.html#property_target", "access": "", "host": "DD.Drag", "params": "", "type": "property", "description": "This will be a reference to the Drop instance associated with this drag if the target: true config attribute is set.."}, {"name": "target", "url": "DD.Drag.html#config_target", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "This attribute only works if the dd-drop module has been loaded. It will make this node a drop target as well as draggable."}, {"name": "target", "url": "DD.Delegate.html#config_target", "access": "", "host": "DD.Delegate", "params": "", "type": "config", "description": "Should the items also be a drop target."}, {"name": "target", "url": "OverlayMask.html#config_target", "access": "", "host": "OverlayMask", "params": "", "type": "config", "description": "Node where the mask will be positioned and re-dimensioned. The\ndefault is the document, which means that if not specified the mask\ntakes the full screen."}, {"name": "target", "url": "EventFacade.html#property_target", "access": "", "host": "EventFacade", "params": "", "type": "property", "description": "Node reference for the targeted eventtarget"}, {"name": "targetChange", "url": "LoadingMask.html#event_targetChange", "access": "", "host": "LoadingMask", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'target' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "targetChange", "url": "DD.Drag.html#event_targetChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'target' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "targetChange", "url": "DD.Delegate.html#event_targetChange", "access": "", "host": "DD.Delegate", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'target' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "targetChange", "url": "OverlayMask.html#event_targetChange", "access": "", "host": "OverlayMask", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'target' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "targets", "url": "DD.DDM.html#property_targets", "access": "", "host": "DD.DDM", "params": "", "type": "property", "description": "All of the Targets"}, {"name": "tearDown", "url": "Test.Case.html#method_tearDown", "access": "", "host": "Test.Case", "params": "", "type": "method", "description": "Function to run after each test is executed."}, {"name": "tearDown", "url": "Test.Suite.html#method_tearDown", "access": "", "host": "Test.Suite", "params": "", "type": "method", "description": "Function to run after each test is executed."}, {"name": "template", "url": "Paginator.html#config_template", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Template used to render controls. The string will be used as\ninnerHTML on all specified container nodes. Bracketed keys (e.g.\n{pageLinks}) in the string will be replaced with an instance of the\nso named ui component."}, {"name": "templateChange", "url": "Paginator.html#event_templateChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'template' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "templatesCache", "url": "Paginator.html#property_templatesCache", "access": "protected", "host": "Paginator", "params": "", "type": "property", "description": "Cached template after <a href=\"YUI.html#method_substitute\">YUI\nsubstitute</a> were applied."}, {"name": "test", "url": "Node.html#method_test", "access": "", "host": "Node", "params": "selector <string>  The CSS selector to test against.", "type": "method", "description": "Test if the supplied node matches the supplied selector."}, {"name": "test", "url": "Array.html#method_test", "access": "", "host": "Array", "params": "", "type": "method", "description": "Evaluates the input to determine if it is an array, array-like, or \nsomething else.  This is used to handle the arguments collection \navailable within functions, and HTMLElement collections"}, {"name": "testcasebegin", "url": "Test.Runner.html#event_testcasebegin", "access": "", "host": "Test.Runner", "params": "", "type": "event", "description": "Fires when a test case is opened but before the first \ntest is executed."}, {"name": "testcasecomplete", "url": "Test.Runner.html#event_testcasecomplete", "access": "", "host": "Test.Runner", "params": "", "type": "event", "description": "Fires when all tests in a test case have been executed."}, {"name": "testsuitebegin", "url": "Test.Runner.html#event_testsuitebegin", "access": "", "host": "Test.Runner", "params": "", "type": "event", "description": "Fires when a test suite is opened but before the first \ntest is executed."}, {"name": "testsuitecomplete", "url": "Test.Runner.html#event_testsuitecomplete", "access": "", "host": "Test.Runner", "params": "", "type": "event", "description": "Fires when all test cases in a test suite have been\ncompleted."}, {"name": "text", "url": "Node.html#config_text", "access": "", "host": "Node", "params": "", "type": "config", "description": "Allows for getting and setting the text of an element.\nFormatting is preserved and special characters are treated literally."}, {"name": "text", "url": "A.Node.html#method_text", "access": "", "host": "A.Node", "params": "text <String>  A string of text to set as the content of the node instance.", "type": "method", "description": "<p>Get or Set the combined text contents of the node instance,\nincluding it's descendants. If the <code>text</code>\nis passed it's set the content of the element, otherwise it works as a\ngetter for the current content.</p>\nExample:\n<pre><code>var node = A.one('#nodeId');\nnode.text('Setting new text content');\n// Alert the value of the current content\nalert( node.text() );\n</code></pre>"}, {"name": "textboxBlur", "url": "AutoComplete.html#event_textboxBlur", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The textboxBlur event.", "type": "event", "description": "Handles the textboxBlur event. Fired when the user leaves the input element."}, {"name": "textboxChange", "url": "AutoComplete.html#event_textboxChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The textboxChange event.", "type": "event", "description": "Handles the textboxChange event. Fired when the value in the input element is changed."}, {"name": "textboxFocus", "url": "AutoComplete.html#event_textboxFocus", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The textboxFocus event.", "type": "event", "description": "Handles the textboxFocus event. Fired when user moves focus to the input element."}, {"name": "textboxKey", "url": "AutoComplete.html#event_textboxKey", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The textboxKey event.", "type": "event", "description": "Handles the textboxKey event. Fired when the input element receives key input."}, {"name": "Textboxlist.ATTRS", "url": "Textboxlist.html#property_Textboxlist.ATTRS", "access": "", "host": "Textboxlist", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the Textboxlist."}, {"name": "Textboxlist.NAME", "url": "Textboxlist.html#property_Textboxlist.NAME", "access": "", "host": "Textboxlist", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "_textMatchesOption", "url": "AutoComplete.html#method__textMatchesOption", "access": "protected", "host": "AutoComplete", "params": "", "type": "method", "description": "Checks to see if the value typed by the user matches any of the\nquery results."}, {"name": "textNode", "url": "ProgressBar.html#config_textNode", "access": "", "host": "ProgressBar", "params": "", "type": "config", "description": "DOM Node to display the text of the progressbar. If not\nspecified try to query using HTML_PARSER an element inside\ncontentBox which matches <code>aui-progressbar-text</code>."}, {"name": "textNodeChange", "url": "ProgressBar.html#event_textNodeChange", "access": "", "host": "ProgressBar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'textNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "throttle", "url": "YUI.html#method_throttle", "access": "", "host": "YUI", "params": "fn <function>   The function call to throttle., ms <int>   The number of milliseconds to throttle the method call. Can set\nglobally with Y.config.throttleTime or by call. Passing a -1 will disable the throttle. Defaults to 150", "type": "method", "description": "Throttles a call to a method based on the time between calls."}, {"name": "throttleTime", "url": "DD.DDM.html#config_throttleTime", "access": "", "host": "DD.DDM", "params": "", "type": "config", "description": "The number of milliseconds to throttle the mousemove event. Default: 150"}, {"name": "throttleTimeChange", "url": "DD.DDM.html#event_throttleTimeChange", "access": "", "host": "DD.DDM", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'throttleTime' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "throwFail", "url": "config.html#property_throwFail", "access": "", "host": "config", "params": "", "type": "property", "description": "If throwFail is set, Y.fail will generate or re-throw a JS Error.  Otherwise the failure is logged."}, {"name": "thumb", "url": "SliderBase.html#property_thumb", "access": "", "host": "SliderBase", "params": "", "type": "property", "description": "The Node instance of the Slider's thumb element.  Do not write to\nthis property."}, {"name": "thumbMove", "url": "SliderBase.html#event_thumbMove", "access": "", "host": "SliderBase", "params": "event <Event>   The event object for the thumbMove with the\nfollowing extra properties:\n<dl>\n<dt>offset</dt>\n<dd>Pixel offset from top/left of the slider to the new\nthumb position</dd>\n<dt>ddEvent</dt>\n<dd><code>drag:drag</code> event from the thumb</dd>\n</dl>", "type": "event", "description": "Signals that the thumb has moved.  Payload includes the thumb's\npixel offset from the top/left edge of the rail, and if triggered by\ndragging the thumb, the <code>drag:drag</code> event."}, {"name": "ThumbRating.ATTRS", "url": "ThumbRating.html#property_ThumbRating.ATTRS", "access": "", "host": "ThumbRating", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the ThumbRating."}, {"name": "ThumbRating.NAME", "url": "ThumbRating.html#property_ThumbRating.NAME", "access": "", "host": "ThumbRating", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "THUMB_TEMPLATE", "url": "SliderBase.html#property_THUMB_TEMPLATE", "access": "", "host": "SliderBase", "params": "", "type": "property", "description": "Thumb template that will contain the thumb image and shadow. &lt;img>\ntags are used instead of background images to avoid a flicker bug in IE.\n{placeholder}s are used for template substitution at render time."}, {"name": "thumbUrl", "url": "SliderBase.html#config_thumbUrl", "access": "", "host": "SliderBase", "params": "", "type": "config", "description": "Path to the thumb image.  This will be used as both the thumb and\nshadow as a sprite.  Defaults at render() to thumb-x.png or\nthumb-y.png in the skin directory of the current skin."}, {"name": "thumbUrlChange", "url": "SliderBase.html#event_thumbUrlChange", "access": "", "host": "SliderBase", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'thumbUrl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "tickX", "url": "Resize.html#config_tickX", "access": "", "host": "Resize", "params": "", "type": "config", "description": "The number of x ticks to span the resize to."}, {"name": "tickX", "url": "Plugin.DDConstrained.html#config_tickX", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "The X tick offset the drag node should snap to on each drag move. False for no ticks. Default: false"}, {"name": "tickXArray", "url": "Plugin.DDConstrained.html#config_tickXArray", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "An array of page coordinates to use as X ticks for drag movement."}, {"name": "tickXArrayChange", "url": "Plugin.DDConstrained.html#event_tickXArrayChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'tickXArray' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "tickXChange", "url": "Resize.html#event_tickXChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'tickX' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "tickXChange", "url": "Plugin.DDConstrained.html#event_tickXChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'tickX' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "tickY", "url": "Resize.html#config_tickY", "access": "", "host": "Resize", "params": "", "type": "config", "description": "The number of y ticks to span the resize to."}, {"name": "tickY", "url": "Plugin.DDConstrained.html#config_tickY", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "The Y tick offset the drag node should snap to on each drag move. False for no ticks. Default: false"}, {"name": "tickYArray", "url": "Plugin.DDConstrained.html#config_tickYArray", "access": "", "host": "Plugin.DDConstrained", "params": "", "type": "config", "description": "An array of page coordinates to use as Y ticks for drag movement."}, {"name": "tickYArrayChange", "url": "Plugin.DDConstrained.html#event_tickYArrayChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'tickYArray' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "tickYChange", "url": "Resize.html#event_tickYChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'tickY' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "tickYChange", "url": "Plugin.DDConstrained.html#event_tickYChange", "access": "", "host": "Plugin.DDConstrained", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'tickY' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_time", "url": "DelayedTask.html#property__time", "access": "protected", "host": "DelayedTask", "params": "", "type": "property", "description": "Stores the current timestamp given from\n<a href=\"DelayedTask.html#method__getTime\">_getTime</a>."}, {"name": "timeLimit", "url": "ImgLoadGroup.html#config_timeLimit", "access": "", "host": "ImgLoadGroup", "params": "", "type": "config", "description": "Time limit, in seconds, after which images are fetched regardless of trigger events."}, {"name": "timeLimitChange", "url": "ImgLoadGroup.html#event_timeLimitChange", "access": "", "host": "ImgLoadGroup", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'timeLimit' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "timeout", "url": "Loader.html#property_timeout", "access": "", "host": "Loader", "params": "", "type": "property", "description": "Timeout value in milliseconds.  If set, self value will be used by\nthe get utility.  the timeout event will fire if\na timeout occurs."}, {"name": "timeout", "url": "config.html#property_timeout", "access": "", "host": "config", "params": "", "type": "property", "description": "Number of milliseconds before a timeout occurs when dynamically \nloading nodes. If not set, there is no timeout."}, {"name": "timeout", "url": "IORequest.html#config_timeout", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "See <a href=\"http://developer.yahoo.com/yui/3/io/#configuration\">IO\nConfiguration</a>."}, {"name": "timeoutChange", "url": "IORequest.html#event_timeoutChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'timeout' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "timer", "url": "LiveSearch.html#property_timer", "access": "protected", "host": "LiveSearch", "params": "", "type": "property", "description": "Handles the <a href=\"YUI.html#method_later\">later</a> Object."}, {"name": "_timer", "url": "ImageGallery.html#property__timer", "access": "protected", "host": "ImageGallery", "params": "", "type": "property", "description": "Stores the <code>A.later</code> reference."}, {"name": "timesAreEqual", "url": "Assert.DateAssert.html#method_timesAreEqual", "access": "", "host": "Assert.DateAssert", "params": "expected <Date>  The expected date., actual <Date>  The actual date to test., message <String>  (Optional) The message to display if the assertion fails.", "type": "method", "description": "Asserts that a date's hour, minutes, and seconds are equal to another date's."}, {"name": "title", "url": "Rating.html#config_title", "access": "", "host": "Rating", "params": "", "type": "config", "description": "If set, will be used when there is no DOM <code>title</code> on the\nradio elements."}, {"name": "title", "url": "ButtonItem.html#config_title", "access": "", "host": "ButtonItem", "params": "", "type": "config", "description": "Text to use as the title attribute of the button."}, {"name": "title", "url": "Tooltip.html#config_title", "access": "", "host": "Tooltip", "params": "", "type": "config", "description": "Use the content of the <code>title</code> attribute as the Tooltip\ncontent."}, {"name": "title", "url": "Panel.html#config_title", "access": "", "host": "Panel", "params": "", "type": "config", "description": "The title to be displayed on the Panel."}, {"name": "titleChange", "url": "Rating.html#event_titleChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "titleChange", "url": "ButtonItem.html#event_titleChange", "access": "", "host": "ButtonItem", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "titleChange", "url": "Tooltip.html#event_titleChange", "access": "", "host": "Tooltip", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "titleChange", "url": "Panel.html#event_titleChange", "access": "", "host": "Panel", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'title' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "to", "url": "Plugin.Align.html#method_to", "access": "", "host": "Plugin.Align", "params": "", "type": "method", "description": "Aligns node with a point on another node or region.\nPossible alignment points are:\n<dl>\n<dt>tl</dt>\n<dd>top left</dd>\n<dt>tr</dt>\n<dd>top right</dd>\n<dt>bl</dt>\n<dd>bottom left</dd>\n<dt>br</dt>\n<dd>bottom right</dd>\n<dt>tc</dt>\n<dd>top center</dd>\n<dt>bc</dt>\n<dd>bottom center</dd>\n<dt>rc</dt>\n<dd>right center</dd>\n<dt>lc</dt>\n<dd>left center</dd>\n<dt>cc</dt>\n<dd>center center</dd>\n</dl>"}, {"name": "to", "url": "Anim.html#config_to", "access": "", "host": "Anim", "params": "", "type": "config", "description": "The ending values for the animated properties. \nFields may be strings, numbers, or functions."}, {"name": "toChange", "url": "Anim.html#event_toChange", "access": "", "host": "Anim", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'to' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "toFrag", "url": "NodeList.html#method_toFrag", "access": "", "host": "NodeList", "params": "", "type": "method", "description": "Creates a documenFragment from the nodes bound to the NodeList instance"}, {"name": "toggle", "url": "LoadingMask.html#method_toggle", "access": "", "host": "LoadingMask", "params": "", "type": "method", "description": "Invoke the\n<a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>\n<code>toggle</code> method."}, {"name": "_toggle", "url": "OverlayContext.html#method__toggle", "access": "protected", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Handles the logic for the\n<a href=\"OverlayContext.html#method_toggle\">toggle</a>."}, {"name": "toggle", "url": "OverlayContext.html#method_toggle", "access": "", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Toggles visibility of the OverlayContext."}, {"name": "toggle", "url": "TreeNode.html#method_toggle", "access": "", "host": "TreeNode", "params": "", "type": "method", "description": "Toggle the current TreeNode, <code>collapsed</code> or <code>expanded</code>."}, {"name": "toggle", "url": "Component.html#method_toggle", "access": "", "host": "Component", "params": "", "type": "method", "description": "Toggle the visibility of the Panel toggling the value of the\n<a href=\"Widget.html#config_visible\">visible</a> attribute."}, {"name": "toggle", "url": "Panel.html#method_toggle", "access": "", "host": "Panel", "params": "", "type": "method", "description": "Toggle the visibility of the Panel toggling the value of the\n<a href=\"Widget.html#config_visible\">visible</a> attribute."}, {"name": "toggle", "url": "A.Node.html#method_toggle", "access": "", "host": "A.Node", "params": "cssClass <String>  Class name to hide or show the element. Optional.", "type": "method", "description": "<p>Displays or hide the node instance.</p>\n<p><string>NOTE:</string> This method assume that your node were hidden\nbecause of the 'aui-helper-hidden' css class were being used. This won't\nmanipulate the inline <code>style.display</code> property.</p>"}, {"name": "toggleCheck", "url": "TreeNodeCheck.html#method_toggleCheck", "access": "", "host": "TreeNodeCheck", "params": "", "type": "method", "description": "Toggle the check status of the current TreeNode."}, {"name": "toggleCheck", "url": "TreeViewDD.html#method_toggleCheck", "access": "", "host": "TreeViewDD", "params": "", "type": "method", "description": "Toggle the check status of the current TreeNode."}, {"name": "toggleClass", "url": "Node.html#method_toggleClass", "access": "", "host": "Node", "params": "className <String>  the class name to be toggled", "type": "method", "description": "If the className exists on the node it is removed, if it doesn't exist it is added."}, {"name": "toggleClass", "url": "NodeList.html#method_toggleClass", "access": "", "host": "NodeList", "params": "className <String>  the class name to be toggled", "type": "method", "description": "If the className exists on the node it is removed, if it doesn't exist it is added."}, {"name": "toggleClass", "url": "DOM.html#method_toggleClass", "access": "", "host": "DOM", "params": "element <HTMLElement>  The DOM element, className <String>  the class name to be toggled, addClass <Boolean>  optional boolean to indicate whether class\nshould be added or removed regardless of current state", "type": "method", "description": "If the className exists on the node it is removed, if it doesn't exist it is added."}, {"name": "toggleCollapse", "url": "Panel.html#method_toggleCollapse", "access": "", "host": "Panel", "params": "", "type": "method", "description": "Toggle the <a href=\"Panel.html#config_collapsed\">collapsed</a> value.\nExpanding and collapsing the Panel."}, {"name": "_toggleContainer", "url": "AutoComplete.html#method__toggleContainer", "access": "protected", "host": "AutoComplete", "params": "show <Boolean>  Flag to force the showing or hiding of the container", "type": "method", "description": "Toggles the display of the results container."}, {"name": "_toggleHighlight", "url": "AutoComplete.html#method__toggleHighlight", "access": "protected", "host": "AutoComplete", "params": "elNewListItem <Node>  The item to be highlighted, action <String>  Whether we are moving to or from an item. Valid values are \"to\" or \"from\".", "type": "method", "description": "Toggles the highlighting of a list item, and removes the highlighting from the previous item"}, {"name": "_toggleSubmenuDisplay", "url": "plugin.NodeMenuNav.html#method__toggleSubmenuDisplay", "access": "protected", "host": "plugin.NodeMenuNav", "params": "event <Object>  Object representing the DOM event.", "type": "method", "description": "\"mousedown,\" \"keydown,\" and \"click\" event handler for the \nmenu used to toggle the display of a submenu."}, {"name": "_toHTML", "url": "Editable.html#method__toHTML", "access": "protected", "host": "Editable", "params": "text <String>  Input text.", "type": "method", "description": "Converts the new lines <code>\\n</code> to <code><br/></code> (i.e.,\nnl2br)."}, {"name": "_tokenize", "url": "Selector.html#method__tokenize", "access": "", "host": "Selector", "params": "", "type": "method", "description": "Break selector into token units per simple selector.\nCombinator is attached to the previous token."}, {"name": "toolbar", "url": "ImageGallery.html#property_toolbar", "access": "protected", "host": "ImageGallery", "params": "", "type": "property", "description": "Toolbar instance reference."}, {"name": "toolbar", "url": "ImageGallery.html#config_toolbar", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "<a href=\"Toolbar.html\">Toolbar</a> with a play, and pause buttons."}, {"name": "toolbarChange", "url": "ImageGallery.html#event_toolbarChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'toolbar' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Tooltip.ATTRS", "url": "Tooltip.html#property_Tooltip.ATTRS", "access": "", "host": "Tooltip", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the Tooltip."}, {"name": "Tooltip.NAME", "url": "Tooltip.html#property_Tooltip.NAME", "access": "", "host": "Tooltip", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "toString", "url": "Node.html#method_toString", "access": "", "host": "Node", "params": "", "type": "method", "description": "The method called when outputting Node instances as strings"}, {"name": "toString", "url": "YAHOO.widget.SWF.html#method_toString", "access": "", "host": "YAHOO.widget.SWF", "params": "", "type": "method", "description": "Public accessor to the unique name of the SWF instance."}, {"name": "toString", "url": "Assert.Error.html#method_toString", "access": "", "host": "Assert.Error", "params": "", "type": "method", "description": "Returns a string representation of the error."}, {"name": "toString", "url": "Assert.ComparisonFailure.html#method_toString", "access": "", "host": "Assert.ComparisonFailure", "params": "", "type": "method", "description": "Returns a fully formatted error for an assertion failure. This message\nprovides information about the expected and actual values."}, {"name": "toString", "url": "DD.Scroll.html#method_toString", "access": "", "host": "DD.Scroll", "params": "", "type": "method", "description": "General toString method for logging"}, {"name": "toString", "url": "Widget.html#method_toString", "access": "", "host": "Widget", "params": "", "type": "method", "description": "Generic toString implementation for all widgets."}, {"name": "toString", "url": "Base.html#method_toString", "access": "", "host": "Base", "params": "", "type": "method", "description": "Default toString implementation. Provides the constructor NAME\nand the instance ID."}, {"name": "total", "url": "Paginator.html#config_total", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Total number of records to paginate through."}, {"name": "totalChange", "url": "Paginator.html#event_totalChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'total' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "totalEl", "url": "Paginator.html#config_totalEl", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Node element to display the total information."}, {"name": "totalElChange", "url": "Paginator.html#event_totalElChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'totalEl' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "totalLabel", "url": "Paginator.html#config_totalLabel", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "The label markup to the total information."}, {"name": "totalLabelChange", "url": "Paginator.html#event_totalLabelChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'totalLabel' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "totalLinks", "url": "ImageViewer.html#config_totalLinks", "access": "", "host": "ImageViewer", "params": "", "type": "config", "description": "Helper attribute to get the <code>size</code> of the <a\nhref=\"ImageViewer.html#config_links\">links</a> NodeList."}, {"name": "totalLinksChange", "url": "ImageViewer.html#event_totalLinksChange", "access": "", "host": "ImageViewer", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'totalLinks' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "totalPages", "url": "Paginator.html#config_totalPages", "access": "", "host": "Paginator", "params": "", "type": "config", "description": "Number of pages. Calculated based on the\n<a href=\"Paginator.html#config_total\">total</a> divided by the\n<a href=\"Paginator.html#config_rowsPerPage\">rowsPerPage</a>."}, {"name": "totalPagesChange", "url": "Paginator.html#event_totalPagesChange", "access": "", "host": "Paginator", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'totalPages' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_toText", "url": "Editable.html#method__toText", "access": "protected", "host": "Editable", "params": "text <String>  HTML input.", "type": "method", "description": "Converts HTML to text."}, {"name": "transaction", "url": "IORequest.html#config_transaction", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "Stores the IO Object of the current transaction."}, {"name": "transactionChange", "url": "IORequest.html#event_transactionChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'transaction' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "transport", "url": "io.html#method_transport", "access": "", "host": "io", "params": "o <object>  - object of transport configurations.", "type": "method", "description": "Method to initialize the desired transport."}, {"name": "TreeData.ATTRS", "url": "TreeData.html#property_TreeData.ATTRS", "access": "", "host": "TreeData", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the TreeData."}, {"name": "TreeData.NAME", "url": "TreeData.html#property_TreeData.NAME", "access": "", "host": "TreeData", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "TreeNode.ATTRS", "url": "TreeNode.html#property_TreeNode.ATTRS", "access": "", "host": "TreeNode", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the TreeNode."}, {"name": "TreeNode.ATTRS", "url": "TreeNodeIO.html#property_TreeNode.ATTRS", "access": "", "host": "TreeNodeIO", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the TreeNode."}, {"name": "TreeNode.ATTRS", "url": "TreeNodeCheck.html#property_TreeNode.ATTRS", "access": "", "host": "TreeNodeCheck", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the TreeNode."}, {"name": "TreeNode.ATTRS", "url": "TreeViewDD.html#property_TreeNode.ATTRS", "access": "", "host": "TreeViewDD", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the TreeNode."}, {"name": "TreeNode.NAME", "url": "TreeNode.html#property_TreeNode.NAME", "access": "", "host": "TreeNode", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "TreeNode.NAME", "url": "TreeNodeIO.html#property_TreeNode.NAME", "access": "", "host": "TreeNodeIO", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "TreeNode.NAME", "url": "TreeNodeCheck.html#property_TreeNode.NAME", "access": "", "host": "TreeNodeCheck", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "TreeNode.NAME", "url": "TreeNodeTask.html#property_TreeNode.NAME", "access": "", "host": "TreeNodeTask", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "TreeNode.NAME", "url": "TreeViewDD.html#property_TreeNode.NAME", "access": "", "host": "TreeViewDD", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "TreeView.ATTRS", "url": "TreeView.html#property_TreeView.ATTRS", "access": "", "host": "TreeView", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the TreeView."}, {"name": "TreeViewDD.ATTRS", "url": "TreeViewDD.html#property_TreeViewDD.ATTRS", "access": "", "host": "TreeViewDD", "params": "", "type": "property", "description": "Static property used to define the default attribute\nconfiguration for the TreeViewDD."}, {"name": "TreeViewDD.NAME", "url": "TreeViewDD.html#property_TreeViewDD.NAME", "access": "", "host": "TreeViewDD", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "TreeView.NAME", "url": "TreeView.html#property_TreeView.NAME", "access": "", "host": "TreeView", "params": "", "type": "property", "description": "Static property provides a string to identify the class."}, {"name": "trigger", "url": "DatePickerSelect.html#config_trigger", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "Trigger element to open the calendar. Inherited from\n<a href=\"OverlayContext.html#config_trigger\">OverlayContext</a>."}, {"name": "trigger", "url": "OverlayContext.html#config_trigger", "access": "", "host": "OverlayContext", "params": "", "type": "config", "description": "Node, NodeList or Selector which will be used as trigger elements\nto show or hide the OverlayContext."}, {"name": "triggerChange", "url": "DatePickerSelect.html#event_triggerChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "triggerChange", "url": "OverlayContext.html#event_triggerChange", "access": "", "host": "OverlayContext", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'trigger' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "triggerEvent", "url": "Tab.html#config_triggerEvent", "access": "", "host": "Tab", "params": "", "type": "config", "description": ""}, {"name": "triggerEventChange", "url": "Tab.html#event_triggerEventChange", "access": "", "host": "Tab", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'triggerEvent' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "trim", "url": "Lang.html#method_trim", "access": "", "host": "Lang", "params": "s <string>   the string to trim", "type": "method", "description": "Returns a string without any leading or trailing whitespace.  If \nthe input is not a string, the input will be returned untouched."}, {"name": "_trimOldEntries", "url": "Console.html#method__trimOldEntries", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Removes the oldest message entries from the UI to maintain the limit\nspecified in the consoleLimit configuration."}, {"name": "_trimOldEntries", "url": "Plugin.Console.html#method__trimOldEntries", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Removes the oldest message entries from the UI to maintain the limit\nspecified in the consoleLimit configuration."}, {"name": "tween", "url": "Anim.html#event_tween", "access": "", "host": "Anim", "params": "ev <Event>  The tween event.", "type": "event", "description": "fires every frame of the animation."}, {"name": "type", "url": "TreeView.html#config_type", "access": "", "host": "TreeView", "params": "", "type": "config", "description": "Type of the treeview (i.e. could be 'file' or 'normal')."}, {"name": "type", "url": "Lang.html#method_type", "access": "", "host": "Lang", "params": "o <Object>  the item to test", "type": "method", "description": "Returns a string representing the type of the item passed in.\nKnown issues:\ntypeof HTMLElementCollection returns function in Safari, but\nY.type() reports object, which could be a good thing --\nbut it actually caused the logic in Y.Lang.isObject to fail."}, {"name": "type", "url": "A.Plugin.IO.html#config_type", "access": "", "host": "A.Plugin.IO", "params": "", "type": "config", "description": "Type of the <code>instance</code> we are pluggin the A.Plugin.IO.\nCould be a Node, or a Widget."}, {"name": "type", "url": "CustomEvent.html#property_type", "access": "", "host": "CustomEvent", "params": "", "type": "property", "description": "The type of event, returned to subscribers when the event fires"}, {"name": "type", "url": "EventFacade.html#property_type", "access": "", "host": "EventFacade", "params": "", "type": "property", "description": "The event type, this can be overridden by the fire() payload"}, {"name": "_typeAhead", "url": "AutoComplete.html#method__typeAhead", "access": "protected", "host": "AutoComplete", "params": "elListItem <Node>  The selected list item, query <String>  The query string", "type": "method", "description": "Updates in the input element with the first result as the user types,\nselecting the text the user has not typed yet."}, {"name": "typeAhead", "url": "AutoComplete.html#event_typeAhead", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The typeAhead event.", "type": "event", "description": "Handles the typeAhead event. Fired when the input element has been pre-filled by the type-ahead feature."}, {"name": "typeAhead", "url": "AutoComplete.html#config_typeAhead", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "If <a href=\"AutoComplete.html#config_autoHighlight\">autoHighlight</a> is enabled, whether or not the \ninput field should be automatically updated with the first result as the user types, \nautomatically selecting the portion of the text the user has not typed yet."}, {"name": "typeAheadChange", "url": "AutoComplete.html#event_typeAheadChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'typeAhead' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "typeAheadDelay", "url": "AutoComplete.html#config_typeAheadDelay", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "If <a href=\"AutoComplete.html#config_typeAhead\">typeAhead</a> is true, number of seconds \nto delay before updating the input. In order to prevent certain race conditions, this value must\nalways be greater than the <a href=\"AutoComplete.html#config_queryDelay\">queryDelay</a>."}, {"name": "typeAheadDelayChange", "url": "AutoComplete.html#event_typeAheadDelayChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'typeAheadDelay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "typeChange", "url": "TreeView.html#event_typeChange", "access": "", "host": "TreeView", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'type' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "typeChange", "url": "A.Plugin.IO.html#event_typeChange", "access": "", "host": "A.Plugin.IO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'type' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "_uiAddChild", "url": "WidgetParent.html#method__uiAddChild", "access": "protected", "host": "WidgetParent", "params": "child <Widget>   The child Widget instance to render., parentNode <Object>   The Node under which the \nchild Widget is to be rendered.", "type": "method", "description": "Updates the UI in response to a child being added."}, {"name": "_uiAnimSetVisible", "url": "Plugin.WidgetAnim.html#method__uiAnimSetVisible", "access": "protected", "host": "Plugin.WidgetAnim", "params": "val <boolean>  true, if making the widget visible. false, if hiding it.", "type": "method", "description": "The injected method used to override the host widget's _uiSetVisible implementation with\nan animated version of the same.\n<p>This method replaces the default _uiSetVisible handler\nWidget provides, by injecting itself before _uiSetVisible,\nand preventing the default behavior. </p>"}, {"name": "UI_EVENTS", "url": "Widget.html#property_UI_EVENTS", "access": "", "host": "Widget", "params": "", "type": "property", "description": "Map of DOM events that should be fired as Custom Events by the  \nWidget instance."}, {"name": "UI_EVENTS", "url": "TreeData.html#property_UI_EVENTS", "access": "protected", "host": "TreeData", "params": "", "type": "property", "description": "Empty UI_EVENTS."}, {"name": "_uiMoveThumb", "url": "SliderBase.html#method__uiMoveThumb", "access": "protected", "host": "SliderBase", "params": "offset <Number>   the pixel offset to set as left or top style", "type": "method", "description": "Moves the thumb to pixel offset position along the rail."}, {"name": "_uiRemoveChild", "url": "WidgetParent.html#method__uiRemoveChild", "access": "protected", "host": "WidgetParent", "params": "child <Widget>   The child Widget instance to render.", "type": "method", "description": "Updates the UI in response to a child being removed."}, {"name": "_uiSetAlign", "url": "WidgetPositionAlign.html#method__uiSetAlign", "access": "protected", "host": "WidgetPositionAlign", "params": "The <Node | null>  node to align to, or null to indicate the viewport", "type": "method", "description": "Updates the UI to reflect the align value passed in (see the align attribute documentation, for the object stucture expected)"}, {"name": "_uiSetCheckbox", "url": "Plugin.ConsoleFilters.html#method__uiSetCheckbox", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "type <String>   'category' or 'source', item <String>   the name of the filter (e.g. 'info', 'event'), checked <Boolean>   value to set the checkbox's checked property", "type": "method", "description": "Updates the checked property of a filter checkbox of the specified type.\nIf no checkbox is found for the input params, one is created."}, {"name": "_uiSetCssClass", "url": "Component.html#method__uiSetCssClass", "access": "protected", "host": "Component", "params": "newVal <String> , prevVal <String> ", "type": "method", "description": "Applies the CSS classes to the <code>boundingBox</code> and\n<code>contentBox</code>."}, {"name": "_uiSetDisabled", "url": "Widget.html#method__uiSetDisabled", "access": "protected", "host": "Widget", "params": "val <boolean> ", "type": "method", "description": "Sets the disabled state for the UI"}, {"name": "_uiSetFillHeight", "url": "WidgetStdMod.html#method__uiSetFillHeight", "access": "protected", "host": "WidgetStdMod", "params": "fillSection <String>  A valid section specifier - one of WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER", "type": "method", "description": "Updates the rendered UI, to resize the provided section so that the standard module fills out \nthe specified widget height. Note: This method does not check whether or not a height is set \non the Widget."}, {"name": "_uiSetFocused", "url": "Widget.html#method__uiSetFocused", "access": "protected", "host": "Widget", "params": "val <boolean> , src <string>  String representing the source that triggered an update to \nthe UI.", "type": "method", "description": "Sets the focused state for the UI"}, {"name": "_uiSetHeight", "url": "Widget.html#method__uiSetHeight", "access": "protected", "host": "Widget", "params": "val <String | Number> ", "type": "method", "description": "Sets the height on the widget's bounding box element"}, {"name": "_uiSetHeight", "url": "Console.html#method__uiSetHeight", "access": "protected", "host": "Console", "params": "v <String|Number>   the new height", "type": "method", "description": "Set the height of the Console container.  Set the body height to the difference between the configured height and the calculated heights of the header and footer.\nOverrides Widget.prototype._uiSetHeight."}, {"name": "_uiSetHeight", "url": "Plugin.Console.html#method__uiSetHeight", "access": "protected", "host": "Plugin.Console", "params": "v <String|Number>   the new height", "type": "method", "description": "Set the height of the Console container.  Set the body height to the difference between the configured height and the calculated heights of the header and footer.\nOverrides Widget.prototype._uiSetHeight."}, {"name": "_uiSetIcon", "url": "ButtonItem.html#method__uiSetIcon", "access": "protected", "host": "ButtonItem", "params": "val <String>  Icon name", "type": "method", "description": "Updates the UI for the icon in response to the <a href=\"ButtonItem.html#event_iconChange\">iconChange</a> event."}, {"name": "_uiSetImageSize", "url": "ImageViewer.html#method__uiSetImageSize", "access": "protected", "host": "ImageViewer", "params": "image <HTMLImage>  Image", "type": "method", "description": "Set the size of the image and the overlay respecting the\nmaxHeight/maxWidth ratio."}, {"name": "_uiSetLabel", "url": "ProgressBar.html#method__uiSetLabel", "access": "protected", "host": "ProgressBar", "params": "val <String>  Display label", "type": "method", "description": "Invoked automatically by the UI_ATTRS Widget API when bind or sync the\n<code>label</code> attribute."}, {"name": "_uiSetLabel", "url": "ButtonItem.html#method__uiSetLabel", "access": "protected", "host": "ButtonItem", "params": "val <String>  The new value", "type": "method", "description": "Updates the UI for the label in response to the <a href=\"ButtonItem.html#event_labelChange\">labelChange</a> event."}, {"name": "_uiSetOrientation", "url": "Toolbar.html#method__uiSetOrientation", "access": "protected", "host": "Toolbar", "params": "newVal <String>  The new value", "type": "method", "description": "Updates the UI for the orientation attribute."}, {"name": "_uiSetOrientation", "url": "ProgressBar.html#method__uiSetOrientation", "access": "protected", "host": "ProgressBar", "params": "val <String>  Orientation", "type": "method", "description": "Invoked automatically by the UI_ATTRS Widget API when bind or sync the\n<code>orientation</code> attribute."}, {"name": "_uiSetRailLength", "url": "SliderBase.html#method__uiSetRailLength", "access": "protected", "host": "SliderBase", "params": "length <String>   the length to apply to the rail style", "type": "method", "description": "Sets the rail length according to the <code>length</code> attribute."}, {"name": "_uiSetShim", "url": "WidgetStack.html#method__uiSetShim", "access": "protected", "host": "WidgetStack", "params": "enable <boolean>  If true, creates/renders the shim, if false, removes it.", "type": "method", "description": "Updates the UI to enable/disable the shim. If the widget is not currently visible,\ncreation of the shim is deferred until it is made visible, for performance reasons."}, {"name": "_uiSetStdMod", "url": "WidgetStdMod.html#method__uiSetStdMod", "access": "protected", "host": "WidgetStdMod", "params": "section <String>  The section to be updated. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER., content <String | Node>  The new content (either as an HTML string, or Node reference) to add to the section, where <String>  Optional. Either WidgetStdMod.AFTER, WidgetStdMod.BEFORE or WidgetStdMod.REPLACE.\nIf not provided, the content will replace existing content in the section.", "type": "method", "description": "Updates the rendered UI, adding the provided content (either an HTML string, or node reference),\nto the specified section. The content is either added before, after or replaces existing content\nin the section, based on the value of the <code>where</code> argument."}, {"name": "_uiSetTabIndex", "url": "Widget.html#method__uiSetTabIndex", "access": "protected", "host": "Widget", "params": "Number <Object> ", "type": "method", "description": "Set the tabIndex on the widget's rendered UI"}, {"name": "_uiSetTitle", "url": "ButtonItem.html#method__uiSetTitle", "access": "protected", "host": "ButtonItem", "params": "val <String>  The new value", "type": "method", "description": "Updates the UI for the title in response to the <a href=\"ButtonItem.html#event_titleChange\">titleChange</a> event."}, {"name": "_uiSetValue", "url": "ProgressBar.html#method__uiSetValue", "access": "protected", "host": "ProgressBar", "params": "val <String>  Progress value", "type": "method", "description": "Invoked automatically by the UI_ATTRS Widget API when bind or sync the\n<code>value</code> attribute."}, {"name": "_uiSetVisible", "url": "Widget.html#method__uiSetVisible", "access": "protected", "host": "Widget", "params": "val <boolean> ", "type": "method", "description": "Sets the visible state for the UI"}, {"name": "_uiSetVisible", "url": "OverlayMask.html#method__uiSetVisible", "access": "protected", "host": "OverlayMask", "params": "val <boolean> ", "type": "method", "description": "Invoke the <code>OverlayMask.superclass._uiSetVisible</code>. Used to\nreset the <code>opacity</code> to work around IE bugs when set opacity\nof hidden elements."}, {"name": "_uiSetWidth", "url": "Widget.html#method__uiSetWidth", "access": "protected", "host": "Widget", "params": "val <String | Number> ", "type": "method", "description": "Sets the width on the widget's bounding box element"}, {"name": "_uiSetXY", "url": "WidgetPosition.html#method__uiSetXY", "access": "protected", "host": "WidgetPosition", "params": "val <String>  The XY page co-ordinates value to be reflected in the UI", "type": "method", "description": "Updates the UI to reflect the XY page co-ordinates passed in."}, {"name": "_uiSetZIndex", "url": "WidgetStack.html#method__uiSetZIndex", "access": "protected", "host": "WidgetStack", "params": "zIndex <number>  The zindex to be reflected in the UI", "type": "method", "description": "Updates the UI to reflect the zIndex value passed in."}, {"name": "_uiSizeCB", "url": "Widget.html#method__uiSizeCB", "access": "protected", "host": "Widget", "params": "expand <boolean> ", "type": "method", "description": ""}, {"name": "_uiSizeCB", "url": "Console.html#method__uiSizeCB", "access": "protected", "host": "Console", "params": "", "type": "method", "description": "Over-ride default content box sizing to do nothing, since we're sizing\nthe body section to fill out height ourselves."}, {"name": "_uiSizeCB", "url": "Plugin.Console.html#method__uiSizeCB", "access": "protected", "host": "Plugin.Console", "params": "", "type": "method", "description": "Over-ride default content box sizing to do nothing, since we're sizing\nthe body section to fill out height ourselves."}, {"name": "_uiSizeTextNode", "url": "ProgressBar.html#method__uiSizeTextNode", "access": "protected", "host": "ProgressBar", "params": "", "type": "method", "description": "Sync the size of the ProgressBar when some UI attribute change."}, {"name": "_uiUpdateCollapsed", "url": "Console.html#method__uiUpdateCollapsed", "access": "protected", "host": "Console", "params": "v <Boolean>   true for collapsed, false for expanded", "type": "method", "description": "Updates the UI to reflect the new Collapsed state"}, {"name": "_uiUpdateCollapsed", "url": "Plugin.Console.html#method__uiUpdateCollapsed", "access": "protected", "host": "Plugin.Console", "params": "v <Boolean>   true for collapsed, false for expanded", "type": "method", "description": "Updates the UI to reflect the new Collapsed state"}, {"name": "_uiUpdateFromHideShow", "url": "Console.html#method__uiUpdateFromHideShow", "access": "protected", "host": "Console", "params": "v <Boolean>   true for visible, false for hidden", "type": "method", "description": "Recalculates dimensions and updates appropriately when shown"}, {"name": "_uiUpdateFromHideShow", "url": "Plugin.Console.html#method__uiUpdateFromHideShow", "access": "protected", "host": "Plugin.Console", "params": "v <Boolean>   true for visible, false for hidden", "type": "method", "description": "Recalculates dimensions and updates appropriately when shown"}, {"name": "_uiUpdatePaused", "url": "Console.html#method__uiUpdatePaused", "access": "protected", "host": "Console", "params": "on <Boolean>   the new checked state", "type": "method", "description": "Checks or unchecks the paused checkbox"}, {"name": "_uiUpdatePaused", "url": "Plugin.Console.html#method__uiUpdatePaused", "access": "protected", "host": "Plugin.Console", "params": "on <Boolean>   the new checked state", "type": "method", "description": "Checks or unchecks the paused checkbox"}, {"name": "_unbindClickableRail", "url": "ClickableRail.html#method__unbindClickableRail", "access": "protected", "host": "ClickableRail", "params": "", "type": "method", "description": "Detaches DOM event subscribers for cleanup/destruction cycle."}, {"name": "_unbindDOM", "url": "Widget.html#method__unbindDOM", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": ""}, {"name": "_unbindUI", "url": "Widget.html#method__unbindUI", "access": "protected", "host": "Widget", "params": "", "type": "method", "description": ""}, {"name": "uncheck", "url": "TreeNodeCheck.html#method_uncheck", "access": "", "host": "TreeNodeCheck", "params": "", "type": "method", "description": "Uncheck the current TreeNode."}, {"name": "uncheck", "url": "TreeViewDD.html#method_uncheck", "access": "", "host": "TreeViewDD", "params": "", "type": "method", "description": "Uncheck the current TreeNode."}, {"name": "unexpected", "url": "Assert.UnexpectedValue.html#property_unexpected", "access": "", "host": "Assert.UnexpectedValue", "params": "", "type": "property", "description": "The unexpected value."}, {"name": "uniqueKeys", "url": "Cache.html#config_uniqueKeys", "access": "", "host": "Cache", "params": "", "type": "config", "description": "Validate uniqueness of stored keys. Default is false and\nis more performant."}, {"name": "uniqueKeysChange", "url": "Cache.html#event_uniqueKeysChange", "access": "", "host": "Cache", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'uniqueKeys' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "uniqueName", "url": "AutoComplete.html#config_uniqueName", "access": "", "host": "AutoComplete", "params": "", "type": "config", "description": "The unique ID of the input element."}, {"name": "uniqueNameChange", "url": "AutoComplete.html#event_uniqueNameChange", "access": "", "host": "AutoComplete", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'uniqueName' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "unmatchedItemSelect", "url": "AutoComplete.html#event_unmatchedItemSelect", "access": "", "host": "AutoComplete", "params": "event <Event.Facade>  The unmatchedItemSelect event.", "type": "event", "description": "Handles the unmatchedItemSelect event. Fired when a user selects something that does\nnot match any of the displayed results."}, {"name": "unplug", "url": "Plugin.Host.html#method_unplug", "access": "", "host": "Plugin.Host", "params": "plugin <String | Function>  The namespace of the plugin, or the plugin class with the static NS namespace property defined. If not provided,\nall registered plugins are unplugged.", "type": "method", "description": "Removes a plugin from the host object. This will destroy the \nplugin instance and delete the namepsace from the host object."}, {"name": "unreg", "url": "Sortable.html#method_unreg", "access": "", "host": "Sortable", "params": "Sortable <Object>  s A Sortable instance.", "type": "method", "description": "Unregister a Sortable instance with the singleton."}, {"name": "unregisterFunction", "url": "Profiler.html#method_unregisterFunction", "access": "", "host": "Profiler", "params": "name <String>  The full name of the function including namespacing. This\nis the name of the function that is stored in the report.", "type": "method", "description": "Removes a constructor function from profiling. Reverses the registerConstructor() method."}, {"name": "unregisterNode", "url": "TreeData.html#method_unregisterNode", "access": "", "host": "TreeData", "params": "node <TreeNode> ", "type": "method", "description": "Unregister the passed TreeNode from this TreeData."}, {"name": "unregisterObject", "url": "Profiler.html#method_unregisterObject", "access": "", "host": "Profiler", "params": "name <String>  The name of the object to unregister., recurse <Boolean>  (Optional) Determines if subobject methods should also be\nunregistered.", "type": "method", "description": "Unregisters an object for profiling. It takes the object and looks for functions.\nWhen a function is found, unregisterMethod() is called on it. If set to recrusive\nmode, it will also unregister objects found inside of this object, \nusing the same methodology."}, {"name": "unselectable", "url": "A.Node.html#method_unselectable", "access": "", "host": "A.Node", "params": "", "type": "method", "description": "Disables text selection for this element (normalized across browsers)."}, {"name": "unset", "url": "StyleSheet.html#method_unset", "access": "", "host": "StyleSheet", "params": "sel <String>   the selector string to apply the changes to, css <String|Array>   style property name or Array of names", "type": "method", "description": "<p>Unset style properties for a provided selector string, removing\ntheir effect from the style cascade.</p>\n<p>If the selector includes commas, it will be split into individual\nselectors and applied accordingly.  If there are no properties\nremaining in the rule after unsetting, the rule is removed.</p>\n<p>The style property or properties in the second parameter must be the\nJavaScript style property names. E.g. fontSize rather than font-size.</p>\n<p>The float style property will be unset by any of &quot;float&quot;,\n&quot;styleFloat&quot;, or &quot;cssFloat&quot;.</p>"}, {"name": "unsubscribe", "url": "CustomEvent.html#method_unsubscribe", "access": "", "host": "CustomEvent", "params": "fn <Function>   The subscribed function to remove, if not supplied\nall will be removed, context <Object>  The context object passed to subscribe.", "type": "method", "description": "Detach listeners."}, {"name": "unsubscribe", "url": "EventTarget.html#method_unsubscribe", "access": "", "host": "EventTarget", "params": "", "type": "method", "description": "detach a listener"}, {"name": "unsubscribeAll", "url": "CustomEvent.html#method_unsubscribeAll", "access": "", "host": "CustomEvent", "params": "", "type": "method", "description": "Removes all listeners"}, {"name": "unsubscribeAll", "url": "EventTarget.html#method_unsubscribeAll", "access": "", "host": "EventTarget", "params": "type <string>     The type, or name of the event", "type": "method", "description": "Removes all listeners from the specified event.  If the event type\nis not specified, all listeners from all hosted custom events will\nbe removed."}, {"name": "_updateActiveDescendant", "url": "WidgetParent.html#method__updateActiveDescendant", "access": "protected", "host": "WidgetParent", "params": "event <EventFacade>  The event facade for the attribute change.", "type": "method", "description": "Attribute change listener for the <code>focused</code> \nattribute of child Widgets, responsible for setting the value of the \nparent's <code>activeDescendant</code> attribute."}, {"name": "updateCurrentNode", "url": "OverlayContext.html#method_updateCurrentNode", "access": "", "host": "OverlayContext", "params": "event <EventFacade> ", "type": "method", "description": "Update the\n<a href=\"OverlayContext.html#config_currentNode\">currentNode</a> with the\n<a href=\"OverlayContext.html#config_align\">align</a> node or the\nevent.currentTarget and in last case with the first item of the\n<a href=\"OverlayContext.html#config_trigger\">trigger</a>."}, {"name": "updateIndex", "url": "TreeData.html#method_updateIndex", "access": "", "host": "TreeData", "params": "index <Object> ", "type": "method", "description": "Update the <a href=\"TreeData.html#config_index\">index</a> attribute value."}, {"name": "_updateNodeState", "url": "TreeViewDD.html#method__updateNodeState", "access": "protected", "host": "TreeViewDD", "params": "event <EventFacade> ", "type": "method", "description": "Update the CSS node state (i.e. going down, going up, append etc)."}, {"name": "updateReferences", "url": "TreeData.html#method_updateReferences", "access": "", "host": "TreeData", "params": "TreeNode <node> , TreeNode <parentNode> , TreeView <ownerTree> ", "type": "method", "description": "Update the references of the passed TreeNode."}, {"name": "_updateSelection", "url": "WidgetParent.html#method__updateSelection", "access": "protected", "host": "WidgetParent", "params": "event <EventFacade>  The event facade for the attribute change.", "type": "method", "description": "Attribute change listener for the <code>selected</code> \nattribute of child Widgets, responsible for setting the value of the \nparent's <code>selection</code> attribute."}, {"name": "_updateValue", "url": "AutoComplete.html#method__updateValue", "access": "protected", "host": "AutoComplete", "params": "elListItem <Node>  The selected list item", "type": "method", "description": "Updates the input element with the selected query result. If\n<a href=\"Autocomplete.html#config_delimChar\">delimChar</a> has been set,\nthen the value gets appended with the delimiter."}, {"name": "uri", "url": "IORequest.html#config_uri", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "URI to be requested using AJAX."}, {"name": "uriChange", "url": "IORequest.html#event_uriChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'uri' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "url", "url": "Test.Reporter.html#property_url", "access": "", "host": "Test.Reporter", "params": "", "type": "property", "description": "The URL to submit the data to."}, {"name": "use", "url": "YUI.html#method_use", "access": "", "host": "YUI", "params": "modules* <string>   1-n modules to bind (uses arguments array), *callback <function>   callback function executed when \nthe instance has the required functionality.  If included, it\nmust be the last parameter.\n<code>\n// loads and attaches drag and drop and its dependencies\nYUI().use('dd', function(Y) &#123;&#125);\n// attaches all modules that are available on the page\nYUI().use('*', function(Y) &#123;&#125);\n// intrinsic YUI gallery support (since 3.1.0)\nYUI().use('gallery-yql', function(Y) &#123;&#125);\n// intrinsic YUI 2in3 support (since 3.1.0)\nYUI().use('yui2-datatable', function(Y) &#123;&#125);\n</code>", "type": "method", "description": "Attaches one or more modules to the YUI instance.  When this\nis executed, the requirements are analyzed, and one of \nseveral things can happen:\n- All requirements are available on the page --  The modules\nare attached to the instance.  If supplied, the use callback\nis executed synchronously.  \n- Modules are missing, the Get utility is not available OR\nthe 'bootstrap' config is false -- A warning is issued about\nthe missing modules and all available modules are attached.\n- Modules are missing, the Loader is not available but the Get\nutility is and boostrap is not false -- The loader is bootstrapped\nbefore doing the following....\n- Modules are missing and the Loader is available -- The loader\nexpands the dependency tree and fetches missing modules.  When\nthe loader is finshed the callback supplied to use is executed\nasynchronously."}, {"name": "useARIA", "url": "plugin.NodeMenuNav.html#config_useARIA", "access": "", "host": "plugin.NodeMenuNav", "params": "", "type": "config", "description": "Boolean indicating if use of the WAI-ARIA Roles and States should be \nenabled for the menu."}, {"name": "useARIAChange", "url": "plugin.NodeMenuNav.html#event_useARIAChange", "access": "", "host": "plugin.NodeMenuNav", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'useARIA' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "useBrowserConsole", "url": "Console.html#config_useBrowserConsole", "access": "", "host": "Console", "params": "", "type": "config", "description": "Pass through to the YUI instance useBrowserConsole configuration.\nBy default this is set to false, which will disable logging to the\nbrowser console when a Console instance is created.  If the\nlogSource is not a YUI instance, this has no effect."}, {"name": "useBrowserConsole", "url": "Plugin.Console.html#config_useBrowserConsole", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "Pass through to the YUI instance useBrowserConsole configuration.\nBy default this is set to false, which will disable logging to the\nbrowser console when a Console instance is created.  If the\nlogSource is not a YUI instance, this has no effect."}, {"name": "useBrowserConsole", "url": "config.html#property_useBrowserConsole", "access": "", "host": "config", "params": "", "type": "property", "description": "Log to the browser console if debug is on and the browser has a\nsupported console."}, {"name": "useBrowserConsoleChange", "url": "Console.html#event_useBrowserConsoleChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'useBrowserConsole' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "useBrowserConsoleChange", "url": "Plugin.Console.html#event_useBrowserConsoleChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'useBrowserConsole' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "useHash", "url": "DD.DDM.html#property_useHash", "access": "", "host": "DD.DDM", "params": "", "type": "property", "description": "Should we only check targets that are in the viewport on drags (for performance), default: true"}, {"name": "useNativeParse", "url": "JSON.html#property_useNativeParse", "access": "", "host": "JSON", "params": "", "type": "property", "description": "Leverage native JSON parse if the browser has a native implementation.\nIn general, this is a good idea.  See the Known Issues section in the\nJSON user guide for caveats.  The default value is true for browsers with\nnative JSON support."}, {"name": "useOriginalImage", "url": "ImageGallery.html#config_useOriginalImage", "access": "", "host": "ImageGallery", "params": "", "type": "config", "description": "If <code>true</code> will use the original image as thumbnails."}, {"name": "useOriginalImageChange", "url": "ImageGallery.html#event_useOriginalImageChange", "access": "", "host": "ImageGallery", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'useOriginalImage' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "useShim", "url": "DD.Drag.html#config_useShim", "access": "", "host": "DD.Drag", "params": "", "type": "config", "description": "Use the protective shim on all drag operations: default true. Only works with dd-ddm, not dd-ddm-base."}, {"name": "useShim", "url": "DD.Drop.html#config_useShim", "access": "", "host": "DD.Drop", "params": "", "type": "config", "description": "Use the Drop shim. Default: true"}, {"name": "useShimChange", "url": "DD.Drag.html#event_useShimChange", "access": "", "host": "DD.Drag", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'useShim' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "useShimChange", "url": "DD.Drop.html#event_useShimChange", "access": "", "host": "DD.Drop", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'useShim' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "val", "url": "A.Node.html#method_val", "access": "", "host": "A.Node", "params": "value <string>  Value to be set. Optional.", "type": "method", "description": "<p>Get or Set the value attribute of the node instance. If the\n<code>value</code> is passed it's set the value of the element,\notherwise it works as a getter for the current value.</p>\nExample:\n<pre><code>var input = A.one('#inputId');\ninput.val('Setting new input value');\n// Alert the value of the input\nalert( input.val() );\n</code></pre>"}, {"name": "_validateCategory", "url": "Plugin.ConsoleFilters.html#method__validateCategory", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "cat <String>   the new category:visibility map, v <String>   the subattribute path updated", "type": "method", "description": "Validates category updates are objects and the subattribute is not too\ndeep."}, {"name": "_validateFillHeight", "url": "WidgetStdMod.html#method__validateFillHeight", "access": "protected", "host": "WidgetStdMod", "params": "val <String>  The section which should be setup to fill height, or false/null to disable fillHeight", "type": "method", "description": "Default validator for the fillHeight attribute. Verifies that the \nvalue set is a valid section specifier - one of WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER,\nor a falsey value if fillHeight is to be disabled."}, {"name": "_validateLogSource", "url": "Console.html#method__validateLogSource", "access": "protected", "host": "Console", "params": "v <Object>   the desired logSource", "type": "method", "description": "Validator for logSource attribute."}, {"name": "_validateLogSource", "url": "Plugin.Console.html#method__validateLogSource", "access": "protected", "host": "Plugin.Console", "params": "v <Object>   the desired logSource", "type": "method", "description": "Validator for logSource attribute."}, {"name": "_validateNewAxis", "url": "YUI.html#method__validateNewAxis", "access": "protected", "host": "YUI", "params": "value < String >   proposed value", "type": "method", "description": "Validates new values assigned to <code>axis</code> attribute.\nAcceptable values are \"x\" and \"y\"."}, {"name": "_validateNewMax", "url": "SliderValueRange.html#method__validateNewMax", "access": "protected", "host": "SliderValueRange", "params": "value < mixed >   Value assigned to <code>max</code> attribute.", "type": "method", "description": "Validates new values assigned to <code>max</code> attribute.  Numbers\nare acceptable.  Override this to enforce different rules."}, {"name": "_validateNewMax", "url": "YUI.html#method__validateNewMax", "access": "protected", "host": "YUI", "params": "value < mixed >   Value assigned to <code>max</code> attribute.", "type": "method", "description": "Validates new values assigned to <code>max</code> attribute.  Numbers\nare acceptable.  Override this to enforce different rules."}, {"name": "_validateNewMin", "url": "SliderValueRange.html#method__validateNewMin", "access": "protected", "host": "SliderValueRange", "params": "value < mixed >   Value assigned to <code>min</code> attribute.", "type": "method", "description": "Validates new values assigned to <code>min</code> attribute.  Numbers\nare acceptable.  Override this to enforce different rules."}, {"name": "_validateNewMin", "url": "YUI.html#method__validateNewMin", "access": "protected", "host": "YUI", "params": "value < mixed >   Value assigned to <code>min</code> attribute.", "type": "method", "description": "Validates new values assigned to <code>min</code> attribute.  Numbers\nare acceptable.  Override this to enforce different rules."}, {"name": "_validateNewValue", "url": "YUI.html#method__validateNewValue", "access": "protected", "host": "YUI", "params": "value < mixed >   Value assigned to <code>value</code> attribute.", "type": "method", "description": "Validates new values assigned to <code>value</code> attribute.  Numbers\nbetween the configured <code>min</code> and <code>max</code> are\nacceptable."}, {"name": "_validateSource", "url": "Plugin.ConsoleFilters.html#method__validateSource", "access": "protected", "host": "Plugin.ConsoleFilters", "params": "cat <String>   the new source:visibility map, v <String>   the subattribute path updated", "type": "method", "description": "Validates source updates are objects and the subattribute is not too\ndeep."}, {"name": "_validateStyle", "url": "Console.html#method__validateStyle", "access": "protected", "host": "Console", "params": "style <String>   the proposed value", "type": "method", "description": "Validates input value for style attribute.  Accepts only values 'inline',\n'block', and 'separate'."}, {"name": "_validateStyle", "url": "Plugin.Console.html#method__validateStyle", "access": "protected", "host": "Plugin.Console", "params": "style <String>   the proposed value", "type": "method", "description": "Validates input value for style attribute.  Accepts only values 'inline',\n'block', and 'separate'."}, {"name": "_validateXY", "url": "WidgetPosition.html#method__validateXY", "access": "", "host": "WidgetPosition", "params": "val <Array>  The XY page co-ordinate value which is being set.", "type": "method", "description": "Default validator for the XY attribute"}, {"name": "validClick", "url": "DD.Drag.html#method_validClick", "access": "", "host": "DD.Drag", "params": "", "type": "method", "description": "Method first checks to see if we have handles, if so it validates the click against the handle. Then if it finds a valid handle, it checks it against the invalid handles list. Returns true if a good handle was used, false otherwise."}, {"name": "validDrops", "url": "DD.DDM.html#property_validDrops", "access": "", "host": "DD.DDM", "params": "", "type": "property", "description": "An array of the valid Drop Targets for this interaction."}, {"name": "_validTabIndex", "url": "Widget.html#method__validTabIndex", "access": "protected", "host": "Widget", "params": "tabIndex <Number> ", "type": "method", "description": ""}, {"name": "value", "url": "Rating.html#config_value", "access": "", "host": "Rating", "params": "", "type": "config", "description": "Stores the value of the current selected Rating element."}, {"name": "value", "url": "ProgressBar.html#config_value", "access": "", "host": "ProgressBar", "params": "", "type": "config", "description": "The value for the bar. Valid values are in between the minValue\nand maxValue attributes."}, {"name": "value", "url": "SliderValueRange.html#config_value", "access": "", "host": "SliderValueRange", "params": "", "type": "config", "description": "The value associated with the thumb's current position on the\nrail. Defaults to the value inferred from the thumb's current\nposition. Specifying value in the constructor will move the\nthumb to the position that corresponds to the supplied value."}, {"name": "value", "url": "YUI.html#config_value", "access": "", "host": "YUI", "params": "", "type": "config", "description": "The value associated with the Drag element's current position along\nthe axis configured in <code>axis</code>.  Defaults to the\nvalue inferred from the Drag element's current position.  Specifying\nvalue in the constructor will move the Drag node to the position\nthat corresponds to the supplied value."}, {"name": "valueChange", "url": "Rating.html#event_valueChange", "access": "", "host": "Rating", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'value' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "valueChange", "url": "ProgressBar.html#event_valueChange", "access": "", "host": "ProgressBar", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'value' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "valueChange", "url": "SliderValueRange.html#event_valueChange", "access": "", "host": "SliderValueRange", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'value' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "valueChange", "url": "YUI.html#event_valueChange", "access": "", "host": "YUI", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'value' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "valueOf", "url": "Assert.Error.html#method_valueOf", "access": "", "host": "Assert.Error", "params": "", "type": "method", "description": "Returns a primitive value version of the error. Same as toString()."}, {"name": "values", "url": "Object.html#method_values", "access": "", "host": "Object", "params": "o <Object>  an object", "type": "method", "description": "Returns an array containing the object's values"}, {"name": "_valueToOffset", "url": "SliderValueRange.html#method__valueToOffset", "access": "protected", "host": "SliderValueRange", "params": "val < Number >   The value to map to pixel X or Y position", "type": "method", "description": "Converts a value into a pixel offset for use in positioning\nthe thumb according to the reverse of the\n<code>_offsetToValue( xy )</code> operation."}, {"name": "_valueToOffset", "url": "YUI.html#method__valueToOffset", "access": "protected", "host": "YUI", "params": "val < Number >   The value to map to pixel X or Y position", "type": "method", "description": "Converts a value into a positional pixel value for use in positioning\nthe DD element according to the reverse of the\n<code>_offsetToValue( xy )</code> operation."}, {"name": "verify", "url": "Test.Mock.html#method_verify", "access": "", "host": "Test.Mock", "params": "mock <Object>  The object to verify..", "type": "method", "description": "Verifies that all expectations of a mock object have been met and\nthrows an assertion error if not."}, {"name": "_verifyValue", "url": "SliderValueRange.html#method__verifyValue", "access": "protected", "host": "SliderValueRange", "params": "", "type": "method", "description": "Verifies that the current value is within the min - max range.  If\nnot, value is set to either min or max, depending on which is\ncloser."}, {"name": "_verifyValue", "url": "YUI.html#method__verifyValue", "access": "protected", "host": "YUI", "params": "", "type": "method", "description": "Verifies that the current value is within the min - max range.  If not,\nvalue is set to either min or max, depending on which is closer."}, {"name": "vertical", "url": "DD.Scroll.html#config_vertical", "access": "", "host": "DD.Scroll", "params": "", "type": "config", "description": "Allow vertical scrolling, default: true."}, {"name": "verticalChange", "url": "DD.Scroll.html#event_verticalChange", "access": "", "host": "DD.Scroll", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'vertical' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "viewportRegion", "url": "Node.html#config_viewportRegion", "access": "", "host": "Node", "params": "", "type": "config", "description": "Returns a region object for the node's viewport"}, {"name": "viewportRegion", "url": "DOM.html#method_viewportRegion", "access": "", "host": "DOM", "params": "", "type": "method", "description": "Returns an Object literal containing the following about the visible region of viewport: (top, right, bottom, left)"}, {"name": "visible", "url": "DatePickerSelect.html#config_visible", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "If true the Calendar is visible by default after the render phase.\nInherited from\n<a href=\"OverlayContext.html#config_trigger\">OverlayContext</a>."}, {"name": "visible", "url": "Widget.html#config_visible", "access": "", "host": "Widget", "params": "", "type": "config", "description": "Boolean indicating weather or not the Widget is visible."}, {"name": "visible", "url": "OverlayContext.html#config_visible", "access": "", "host": "OverlayContext", "params": "", "type": "config", "description": "If true the OverlayContext is visible by default after the render phase.\nInherited from <a href=\"Overlay.html\">Overlay</a>."}, {"name": "visible", "url": "OverlayMask.html#config_visible", "access": "", "host": "OverlayMask", "params": "", "type": "config", "description": "If true the Overlay is visible by default after the render phase.\nInherited from <a href=\"Overlay.html\">Overlay</a>."}, {"name": "visibleChange", "url": "DatePickerSelect.html#event_visibleChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "visibleChange", "url": "Widget.html#event_visibleChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "visibleChange", "url": "OverlayContext.html#event_visibleChange", "access": "", "host": "OverlayContext", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "visibleChange", "url": "OverlayMask.html#event_visibleChange", "access": "", "host": "OverlayMask", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'visible' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "void();", "url": "AUI~event~input.html#method_void();", "access": "", "host": "AUI~event~input", "params": "", "type": "method", "description": ""}, {"name": "wait", "url": "Test.Case.html#method_wait", "access": "", "host": "Test.Case", "params": "segment <Function>  (Optional) The function to run after the delay.\nIf omitted, the TestRunner will wait until resume() is called., delay <int>  (Optional) The number of milliseconds to wait before running\nthe function. If omitted, defaults to zero.", "type": "method", "description": "Causes the test case to wait a specified amount of time and then\ncontinue executing the given code."}, {"name": "webkit", "url": "UA.html#property_webkit", "access": "", "host": "UA", "params": "", "type": "property", "description": "AppleWebKit version.  KHTML browsers that are not WebKit browsers \nwill evaluate to 1, other browsers 0.  Example: 418.9\n<pre>\nSafari 1.3.2 (312.6): 312.8.1 <-- Reports 312.8 -- currently the \nlatest available for Mac OSX 10.3.\nSafari 2.0.2:         416     <-- hasOwnProperty introduced\nSafari 2.0.4:         418     <-- preventDefault fixed\nSafari 2.0.4 (419.3): 418.9.1 <-- One version of Safari may run\ndifferent versions of webkit\nSafari 2.0.4 (419.3): 419     <-- Tiger installations that have been\nupdated, but not updated\nto the latest patch.\nWebkit 212 nightly:   522+    <-- Safari 3.0 precursor (with native SVG\nand many major issues fixed).\nSafari 3.0.4 (523.12) 523.12  <-- First Tiger release - automatic update\nfrom 2.x via the 10.4.11 OS patch\nWebkit nightly 1/2008:525+    <-- Supports DOMContentLoaded event.\nyahoo.com user agent hack removed.\n</pre>\nhttp://en.wikipedia.org/wiki/Safari_version_history"}, {"name": "weekDaysNode", "url": "Calendar.html#property_weekDaysNode", "access": "protected", "host": "Calendar", "params": "", "type": "property", "description": "Container for house the week days elements."}, {"name": "wheelDelta", "url": "DOMEventFacade.html#property_wheelDelta", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "Number representing the direction and velocity of the movement of the mousewheel.\nNegative is down, the higher the number, the faster.  Applies to the mousewheel event."}, {"name": "where", "url": "A.Plugin.IO.html#config_where", "access": "", "host": "A.Plugin.IO", "params": "", "type": "config", "description": "Where to insert the content, AFTER, BEFORE or REPLACE."}, {"name": "whereChange", "url": "A.Plugin.IO.html#event_whereChange", "access": "", "host": "A.Plugin.IO", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'where' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "which", "url": "DOMEventFacade.html#property_which", "access": "", "host": "DOMEventFacade", "params": "", "type": "property", "description": "The button that was pushed.  Same as button."}, {"name": "widget:contentUpdate", "url": "Widget.html#event_widget:contentUpdate", "access": "", "host": "Widget", "params": "e <EventFacade>  The Event Facade", "type": "event", "description": "Notification event, which widget implementations can fire, when\nthey change the content of the widget. This event has no default\nbehavior and cannot be prevented, so the \"on\" or \"after\"\nmoments are effectively equivalent (with on listeners being invoked before \nafter listeners)."}, {"name": "widget:render", "url": "Widget.html#event_widget:render", "access": "", "host": "Widget", "params": "e <EventFacade>  The Event Facade", "type": "event", "description": "Lifcyle event for the render phase, fired prior to rendering the UI \nfor the widget (prior to invoking the widget's renderer method).\n<p>\nSubscribers to the \"on\" moment of this event, will be notified \nbefore the widget is rendered.\n</p>\n<p>\nSubscribers to the \"after\" moment of this event, will be notified\nafter rendering is complete.\n</p>"}, {"name": "WidgetAnim.ANIMATIONS", "url": "Plugin.WidgetAnim.html#property_WidgetAnim.ANIMATIONS", "access": "", "host": "Plugin.WidgetAnim", "params": "", "type": "property", "description": "Pre-Packaged Animation implementations, which can be used for animShow and animHide attribute \nvalues."}, {"name": "WidgetAnim.ATTRS", "url": "Plugin.WidgetAnim.html#property_WidgetAnim.ATTRS", "access": "", "host": "Plugin.WidgetAnim", "params": "", "type": "property", "description": "Static property used to define the default attribute \nconfiguration for the plugin."}, {"name": "WidgetAnim.NAME", "url": "Plugin.WidgetAnim.html#property_WidgetAnim.NAME", "access": "", "host": "Plugin.WidgetAnim", "params": "", "type": "property", "description": "The NAME of the WidgetAnim class. Used to prefix events generated\nby the plugin class."}, {"name": "WidgetAnim.NS", "url": "Plugin.WidgetAnim.html#property_WidgetAnim.NS", "access": "", "host": "Plugin.WidgetAnim", "params": "", "type": "property", "description": "The namespace for the plugin. This will be the property on the widget, which will \nreference the plugin instance, when it's plugged in."}, {"name": "Widget.ATTRS", "url": "Widget.html#property_Widget.ATTRS", "access": "", "host": "Widget", "params": "", "type": "property", "description": "Static property used to define the default attribute \nconfiguration for the Widget."}, {"name": "Widget.getByNode", "url": "Widget.html#method_Widget.getByNode", "access": "", "host": "Widget", "params": "node <Node | String>   The node for which to return a Widget instance. If a selector\nstring is passed in, which selects more than one node, the first node found is used.", "type": "method", "description": "Returns the widget instance whose bounding box contains, or is, the given node. \n<p>\nIn the case of nested widgets, the nearest bounding box ancestor is used to\nreturn the widget instance.\n</p>"}, {"name": "Widget.HTML_PARSER", "url": "Widget.html#property_Widget.HTML_PARSER", "access": "", "host": "Widget", "params": "", "type": "property", "description": "Object hash, defining how attribute values are to be parsed from\nmarkup contained in the widget's content box. e.g.:\n<pre>\n{\n// Set single Node references using selector syntax \n// (selector is run through node.one)\ntitleNode: \"span.yui-title\",\n// Set NodeList references using selector syntax \n// (array indicates selector is to be run through node.all)\nlistNodes: [\"li.yui-item\"],\n// Set other attribute types, using a parse function. \n// Context is set to the widget instance.\nlabel: function(contentBox) {\nreturn contentBox.one(\"span.title\").get(\"innerHTML\");\n}\n}\n</pre>"}, {"name": "Widget.NAME", "url": "Widget.html#property_Widget.NAME", "access": "", "host": "Widget", "params": "", "type": "property", "description": "Static property provides a string to identify the class.\n<p>\nCurrently used to apply class identifiers to the bounding box \nand to classify events fired by the widget.\n</p>"}, {"name": "WidgetPositionAlign.ATTRS", "url": "WidgetPositionAlign.html#property_WidgetPositionAlign.ATTRS", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "property", "description": "Static property used to define the default attribute \nconfiguration introduced by WidgetPositionAlign."}, {"name": "WidgetPositionAlign.BC", "url": "WidgetPositionAlign.html#property_WidgetPositionAlign.BC", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "property", "description": "Constant used to specify the bottom edge, center point for alignment"}, {"name": "WidgetPositionAlign.BL", "url": "WidgetPositionAlign.html#property_WidgetPositionAlign.BL", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "property", "description": "Constant used to specify the bottom-left corner for alignment"}, {"name": "WidgetPositionAlign.BR", "url": "WidgetPositionAlign.html#property_WidgetPositionAlign.BR", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "property", "description": "Constant used to specify the bottom-right corner for alignment"}, {"name": "WidgetPositionAlign.CC", "url": "WidgetPositionAlign.html#property_WidgetPositionAlign.CC", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "property", "description": "Constant used to specify the center of widget/node/viewport for alignment"}, {"name": "WidgetPositionAlign.LC", "url": "WidgetPositionAlign.html#property_WidgetPositionAlign.LC", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "property", "description": "Constant used to specify the left edge, center point for alignment"}, {"name": "WidgetPositionAlign.RC", "url": "WidgetPositionAlign.html#property_WidgetPositionAlign.RC", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "property", "description": "Constant used to specify the right edge, center point for alignment"}, {"name": "WidgetPositionAlign.TC", "url": "WidgetPositionAlign.html#property_WidgetPositionAlign.TC", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "property", "description": "Constant used to specify the top edge-center point for alignment"}, {"name": "WidgetPositionAlign.TL", "url": "WidgetPositionAlign.html#property_WidgetPositionAlign.TL", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "property", "description": "Constant used to specify the top-left corner for alignment"}, {"name": "WidgetPositionAlign.TR", "url": "WidgetPositionAlign.html#property_WidgetPositionAlign.TR", "access": "", "host": "WidgetPositionAlign", "params": "", "type": "property", "description": "Constant used to specify the top-right corner for alignment"}, {"name": "WidgetPosition.ATTRS", "url": "WidgetPosition.html#property_WidgetPosition.ATTRS", "access": "", "host": "WidgetPosition", "params": "", "type": "property", "description": "Static property used to define the default attribute \nconfiguration introduced by WidgetPosition."}, {"name": "WidgetPositionConstrain.ATTRS", "url": "WidgetPositionConstrain.html#property_WidgetPositionConstrain.ATTRS", "access": "", "host": "WidgetPositionConstrain", "params": "", "type": "property", "description": "Static property used to define the default attribute \nconfiguration introduced by WidgetPositionConstrain."}, {"name": "WidgetPositionConstrain._PREVENT_OVERLAP", "url": "WidgetPositionConstrain.html#property_WidgetPositionConstrain._PREVENT_OVERLAP", "access": "protected", "host": "WidgetPositionConstrain", "params": "", "type": "property", "description": "The set of positions for which to prevent\noverlap."}, {"name": "WidgetPosition.POSITIONED_CLASS_NAME", "url": "WidgetPosition.html#property_WidgetPosition.POSITIONED_CLASS_NAME", "access": "", "host": "WidgetPosition", "params": "", "type": "property", "description": "Default class used to mark the boundingBox of a positioned widget."}, {"name": "WidgetStack.ATTRS", "url": "WidgetStack.html#property_WidgetStack.ATTRS", "access": "", "host": "WidgetStack", "params": "", "type": "property", "description": "Static property used to define the default attribute \nconfiguration introduced by WidgetStack."}, {"name": "WidgetStack.HTML_PARSER", "url": "WidgetStack.html#property_WidgetStack.HTML_PARSER", "access": "", "host": "WidgetStack", "params": "", "type": "property", "description": "The HTML parsing rules for the WidgetStack class."}, {"name": "WidgetStack.SHIM_CLASS_NAME", "url": "WidgetStack.html#property_WidgetStack.SHIM_CLASS_NAME", "access": "", "host": "WidgetStack", "params": "", "type": "property", "description": "Default class used to mark the shim element"}, {"name": "WidgetStack.SHIM_TEMPLATE", "url": "WidgetStack.html#property_WidgetStack.SHIM_TEMPLATE", "access": "", "host": "WidgetStack", "params": "", "type": "property", "description": "Default markup template used to generate the shim element."}, {"name": "WidgetStack.STACKED_CLASS_NAME", "url": "WidgetStack.html#property_WidgetStack.STACKED_CLASS_NAME", "access": "", "host": "WidgetStack", "params": "", "type": "property", "description": "Default class used to mark the boundingBox of a stacked widget."}, {"name": "WidgetStdMod.AFTER", "url": "WidgetStdMod.html#property_WidgetStdMod.AFTER", "access": "", "host": "WidgetStdMod", "params": "", "type": "property", "description": "Constant used to specify insertion position, when adding content to sections of the standard module in \nmethods which expect a \"where\" argument.\n<p>\nInserts new content <em>before</em> the sections existing content.\n</p>"}, {"name": "WidgetStdMod.ATTRS", "url": "WidgetStdMod.html#property_WidgetStdMod.ATTRS", "access": "", "host": "WidgetStdMod", "params": "", "type": "property", "description": "Static property used to define the default attribute \nconfiguration introduced by WidgetStdMod."}, {"name": "WidgetStdMod.BEFORE", "url": "WidgetStdMod.html#property_WidgetStdMod.BEFORE", "access": "", "host": "WidgetStdMod", "params": "", "type": "property", "description": "Constant used to specify insertion position, when adding content to sections of the standard module in\nmethods which expect a \"where\" argument.\n<p>\nInserts new content <em>before</em> the sections existing content.\n</p>"}, {"name": "WidgetStdMod.BODY", "url": "WidgetStdMod.html#property_WidgetStdMod.BODY", "access": "", "host": "WidgetStdMod", "params": "", "type": "property", "description": "Constant used to refer the the standard module body, in methods which expect a section specifier"}, {"name": "WidgetStdMod.FOOTER", "url": "WidgetStdMod.html#property_WidgetStdMod.FOOTER", "access": "", "host": "WidgetStdMod", "params": "", "type": "property", "description": "Constant used to refer the the standard module footer, in methods which expect a section specifier"}, {"name": "WidgetStdMod.HEADER", "url": "WidgetStdMod.html#property_WidgetStdMod.HEADER", "access": "", "host": "WidgetStdMod", "params": "", "type": "property", "description": "Constant used to refer the the standard module header, in methods which expect a section specifier"}, {"name": "WidgetStdMod.HTML_PARSER", "url": "WidgetStdMod.html#property_WidgetStdMod.HTML_PARSER", "access": "", "host": "WidgetStdMod", "params": "", "type": "property", "description": "The HTML parsing rules for the WidgetStdMod class."}, {"name": "WidgetStdMod.REPLACE", "url": "WidgetStdMod.html#property_WidgetStdMod.REPLACE", "access": "", "host": "WidgetStdMod", "params": "", "type": "property", "description": "Constant used to specify insertion position, when adding content to sections of the standard module in\nmethods which expect a \"where\" argument.\n<p>\n<em>Replaces</em> the sections existing content, with new content.\n</p>"}, {"name": "WidgetStdMod.SECTION_CLASS_NAMES", "url": "WidgetStdMod.html#property_WidgetStdMod.SECTION_CLASS_NAMES", "access": "", "host": "WidgetStdMod", "params": "", "type": "property", "description": "Static hash of default class names used for the header,\nbody and footer sections of the standard module, keyed by\nthe section identifier (WidgetStdMod.STD_HEADER, WidgetStdMod.STD_BODY, WidgetStdMod.STD_FOOTER)"}, {"name": "WidgetStdMod.TEMPLATES", "url": "WidgetStdMod.html#property_WidgetStdMod.TEMPLATES", "access": "", "host": "WidgetStdMod", "params": "", "type": "property", "description": "The template HTML strings for each of the standard module sections. Section entries are keyed by the section constants,\nWidgetStdMod.HEADER, WidgetStdMod.BODY, WidgetStdMod.FOOTER, and contain the HTML to be added for each section.\ne.g.\n<pre>\n{\nheader : '&lt;div class=\"yui-widget-hd\"&gt;&lt;/div&gt;',\nbody : '&lt;div class=\"yui-widget-bd\"&gt;&lt;/div&gt;',\nfooter : '&lt;div class=\"yui-widget-ft\"&gt;&lt;/div&gt;'\n}\n</pre>"}, {"name": "Widget.UI_SRC", "url": "Widget.html#property_Widget.UI_SRC", "access": "", "host": "Widget", "params": "", "type": "property", "description": "Constant used to identify state changes originating from\nthe DOM (as opposed to the JavaScript model)."}, {"name": "width", "url": "Widget.html#config_width", "access": "", "host": "Widget", "params": "", "type": "config", "description": "String with units, or number, representing the width of the Widget. If a number is provided,\nthe default unit, defined by the Widgets DEF_UNIT, property is used."}, {"name": "width", "url": "Console.html#config_width", "access": "", "host": "Console", "params": "", "type": "config", "description": "String with units, or number, representing the width of the Console.\nIf a number is provided, the default unit, defined by Widget's\nDEF_UNIT, property is used."}, {"name": "width", "url": "Plugin.Console.html#config_width", "access": "", "host": "Plugin.Console", "params": "", "type": "config", "description": "String with units, or number, representing the width of the Console.\nIf a number is provided, the default unit, defined by Widget's\nDEF_UNIT, property is used."}, {"name": "width", "url": "ImgLoadImgObj.html#config_width", "access": "", "host": "ImgLoadImgObj", "params": "", "type": "config", "description": "Pixel width of the image. Will be set as a <code>width</code> attribute on the DOM element after the image is fetched.\nDefaults to the natural width of the image (no <code>width</code> attribute will be set).\nUsually only used with src images."}, {"name": "widthChange", "url": "Widget.html#event_widthChange", "access": "", "host": "Widget", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "widthChange", "url": "Console.html#event_widthChange", "access": "", "host": "Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "widthChange", "url": "Plugin.Console.html#event_widthChange", "access": "", "host": "Plugin.Console", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "widthChange", "url": "ImgLoadImgObj.html#event_widthChange", "access": "", "host": "ImgLoadImgObj", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'width' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "win", "url": "config.html#property_win", "access": "", "host": "config", "params": "", "type": "property", "description": "The window/frame that this instance should operate in."}, {"name": "windowresize", "url": "YUI.html#event_windowresize", "access": "", "host": "YUI", "params": "", "type": "event", "description": "Firefox fires the window resize event once when the resize action\nfinishes, other browsers fire the event periodically during the\nresize.  This code uses timeout logic to simulate the Firefox \nbehavior in other browsers."}, {"name": "windowResizeDelay", "url": "config.html#property_windowResizeDelay", "access": "", "host": "config", "params": "", "type": "property", "description": "The default interval when polling in milliseconds."}, {"name": "windowScroll", "url": "DD.Scroll.html#config_windowScroll", "access": "", "host": "DD.Scroll", "params": "", "type": "config", "description": "Turn on window scroll support, default: false"}, {"name": "windowScroll", "url": "Plugin.DDWindowScroll.html#config_windowScroll", "access": "", "host": "Plugin.DDWindowScroll", "params": "", "type": "config", "description": "Turn on window scroll support, default: true"}, {"name": "windowScrollChange", "url": "DD.Scroll.html#event_windowScrollChange", "access": "", "host": "DD.Scroll", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'windowScroll' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "windowScrollChange", "url": "Plugin.DDWindowScroll.html#event_windowScrollChange", "access": "", "host": "Plugin.DDWindowScroll", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'windowScroll' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "winHeight", "url": "Node.html#config_winHeight", "access": "", "host": "Node", "params": "", "type": "config", "description": "Returns the inner height of the viewport (exludes scrollbar)."}, {"name": "winHeight", "url": "DOM.html#method_winHeight", "access": "", "host": "DOM", "params": "", "type": "method", "description": "Returns the inner height of the viewport (exludes scrollbar)."}, {"name": "winWidth", "url": "Node.html#config_winWidth", "access": "", "host": "Node", "params": "", "type": "config", "description": "Returns the inner width of the viewport (exludes scrollbar)."}, {"name": "winWidth", "url": "DOM.html#method_winWidth", "access": "", "host": "DOM", "params": "", "type": "method", "description": "Returns the inner width of the viewport (exludes scrollbar)."}, {"name": "wrap", "url": "Resize.html#config_wrap", "access": "", "host": "Resize", "params": "", "type": "config", "description": "True to wrap an element with a div if needed (required for textareas\nand images, defaults to false) in favor of the handles config option.\nThe wrapper element type (default div) could be over-riden passing the\n<code>wrapper</code> attribute."}, {"name": "wrapChange", "url": "Resize.html#event_wrapChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'wrap' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "wrapper", "url": "Resize.html#config_wrapper", "access": "", "host": "Resize", "params": "", "type": "config", "description": "Element to wrap the <code>wrapTypes</code>. This element will house\nthe handles elements."}, {"name": "wrapperChange", "url": "Resize.html#event_wrapperChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'wrapper' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "wrapTypes", "url": "Resize.html#config_wrapTypes", "access": "", "host": "Resize", "params": "", "type": "config", "description": "Elements that requires a wrapper by default. Normally are elements\nwhich cannot have children elements."}, {"name": "wrapTypesChange", "url": "Resize.html#event_wrapTypesChange", "access": "", "host": "Resize", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'wrapTypes' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "x", "url": "WidgetPosition.html#config_x", "access": "", "host": "WidgetPosition", "params": "", "type": "config", "description": "Page X co-ordinate for the widget. This attribute acts as a facade for the \nxy attribute. Changes in position can be monitored by listening for xyChange events."}, {"name": "xChange", "url": "WidgetPosition.html#event_xChange", "access": "", "host": "WidgetPosition", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'x' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "XdebugJSON", "url": "Assert.DateAssert.html#method_XdebugJSON", "access": "", "host": "Assert.DateAssert", "params": "coverage <Object>  The coverage report object.", "type": "method", "description": "Returns the coverage report in a JSON format compatible with\nXdebug. See <a href=\"http://www.xdebug.com/docs/code_coverage\">Xdebug Documentation</a>\nfor more information. Note: function coverage is not available\nin this format."}, {"name": "xdr", "url": "IORequest.html#config_xdr", "access": "", "host": "IORequest", "params": "", "type": "config", "description": "See <a href=\"http://developer.yahoo.com/yui/3/io/#configuration\">IO\nConfiguration</a>."}, {"name": "xdrChange", "url": "IORequest.html#event_xdrChange", "access": "", "host": "IORequest", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'xdr' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "XML", "url": "Assert.DateAssert.html#method_XML", "access": "", "host": "Assert.DateAssert", "params": "result <Object>  The results object created by TestRunner.", "type": "method", "description": "Returns test results formatted as an XML string."}, {"name": "xy", "url": "WidgetPosition.html#config_xy", "access": "", "host": "WidgetPosition", "params": "", "type": "config", "description": "Page XY co-ordinate pair for the widget."}, {"name": "xyChange", "url": "WidgetPosition.html#event_xyChange", "access": "", "host": "WidgetPosition", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'xy' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "y", "url": "WidgetPosition.html#config_y", "access": "", "host": "WidgetPosition", "params": "", "type": "config", "description": "Page Y co-ordinate for the widget. This attribute acts as a facade for the \nxy attribute. Changes in position can be monitored by listening for xyChange events."}, {"name": "YAHOO.util.CustomEvent.FLAT", "url": "YUI.html#property_YAHOO.util.CustomEvent.FLAT", "access": "", "host": "YUI", "params": "", "type": "property", "description": "Subscriber listener sigature constant.  The FLAT type returns two\nparameters: the first argument passed to fire and the optional \ncustom object"}, {"name": "YAHOO.util.CustomEvent.LIST", "url": "YUI.html#property_YAHOO.util.CustomEvent.LIST", "access": "", "host": "YUI", "params": "", "type": "property", "description": "Subscriber listener sigature constant.  The LIST type returns three\nparameters: the event type, the array of args passed to fire, and\nthe optional custom object"}, {"name": "Y.assert", "url": "Test.Assert.html#method_Y.assert", "access": "", "host": "Test.Assert", "params": "condition <Boolean>  The condition to test., message <String>  The message to display if the assertion fails.", "type": "method", "description": "Asserts that a given condition is true. If not, then a Y.Assert.Error object is thrown\nand the test fails."}, {"name": "yChange", "url": "WidgetPosition.html#event_yChange", "access": "", "host": "WidgetPosition", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'y' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Y.config.classNameDelimiter", "url": "ClassNameManager.html#property_Y.config.classNameDelimiter", "access": "", "host": "ClassNameManager", "params": "", "type": "property", "description": "Configuration property indicating the delimiter used to compose all CSS class names in\nthis YUI instance."}, {"name": "Y.config.classNamePrefix", "url": "ClassNameManager.html#property_Y.config.classNamePrefix", "access": "", "host": "ClassNameManager", "params": "", "type": "property", "description": "Configuration property indicating the prefix for all CSS class names in this YUI instance."}, {"name": "yearNode", "url": "DatePickerSelect.html#config_yearNode", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "DOM Node to display the year of the DatePickerSelect. If not\nspecified try to query using HTML_PARSER an element inside\ncontentBox which matches <code>aui-datepicker-year</code>."}, {"name": "yearNodeChange", "url": "DatePickerSelect.html#event_yearNodeChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'yearNode' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "yearNodeName", "url": "DatePickerSelect.html#config_yearNodeName", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "Name attribute used on the\n<a href=\"DatePickerSelect.html#config_yearNode\">yearNode</a>."}, {"name": "yearNodeNameChange", "url": "DatePickerSelect.html#event_yearNodeNameChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'yearNodeName' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "yearRange", "url": "DatePickerSelect.html#config_yearRange", "access": "", "host": "DatePickerSelect", "params": "", "type": "config", "description": "Year range to be displayed on the year select element. By default\nit displays from -10 to +10 years from the current year."}, {"name": "yearRangeChange", "url": "DatePickerSelect.html#event_yearRangeChange", "access": "", "host": "DatePickerSelect", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'yearRange' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "Y.fail", "url": "Test.Assert.html#method_Y.fail", "access": "", "host": "Test.Assert", "params": "message <String>  (Optional) The message to display with the failure.", "type": "method", "description": "Forces an assertion error to occur. Shortcut for Y.Assert.fail()."}, {"name": "Y.get", "url": "Node.html#method_Y.get", "access": "", "host": "Node", "params": "node <String | HTMLElement>  a node or Selector, doc <Y.Node || HTMLElement>  an optional document to scan. Defaults to Y.config.doc.", "type": "method", "description": "Returns a single Node instance bound to the node or the\nfirst element matching the given selector."}, {"name": "Y.one", "url": "Node.html#method_Y.one", "access": "", "host": "Node", "params": "node <String | HTMLElement>  a node or Selector", "type": "method", "description": "Returns a single Node instance bound to the node or the\nfirst element matching the given selector. Returns null if no match found.\n<strong>Note:</strong> For chaining purposes you may want to\nuse <code>Y.all</code>, which returns a NodeList when no match is found."}, {"name": "yui2", "url": "config.html#property_yui2", "access": "", "host": "config", "params": "", "type": "property", "description": "The default YUI 2 version to build yui2 module urls.  This is for\nintrinsic YUI 2 support via the 2in3 project.  Also @see the '2in3'\nconfig for pulling different revisions of the wrapped YUI 2 \nmodules."}, {"name": "zIndex", "url": "WidgetStack.html#config_zIndex", "access": "", "host": "WidgetStack", "params": "", "type": "config", "description": "The z-index to apply to the Widgets boundingBox. Non-numerical values for \nzIndex will be converted to 0"}, {"name": "zIndex", "url": "OverlayMask.html#config_zIndex", "access": "", "host": "OverlayMask", "params": "", "type": "config", "description": "zIndex of the OverlayMask."}, {"name": "zIndexBase", "url": "CalendarManager.html#config_zIndexBase", "access": "", "host": "CalendarManager", "params": "", "type": "config", "description": "ZIndex default value passed to the\n<a href=\"OverlayManager.html#config_zIndexBase\">zIndexBase</a> of\n<a href=\"OverlayManager.html\">OverlayManager</a>."}, {"name": "zIndexBase", "url": "OverlayManager.html#config_zIndexBase", "access": "", "host": "OverlayManager", "params": "", "type": "config", "description": "The zIndex base to be used on the stacking for all overlays\nregistered on the OverlayManager."}, {"name": "zIndexBaseChange", "url": "CalendarManager.html#event_zIndexBaseChange", "access": "", "host": "CalendarManager", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'zIndexBase' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "zIndexBaseChange", "url": "OverlayManager.html#event_zIndexBaseChange", "access": "", "host": "OverlayManager", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'zIndexBase' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "zIndexChange", "url": "WidgetStack.html#event_zIndexChange", "access": "", "host": "WidgetStack", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, {"name": "zIndexChange", "url": "OverlayMask.html#event_zIndexChange", "access": "", "host": "OverlayMask", "params": "event <Event.Facade> An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>", "type": "event", "description": "Fires when the value for the configuration attribute 'zIndex' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}]